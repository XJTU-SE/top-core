digraph G{
	"org.jppf.ui.actions.AbstractActionHandler";
	"org.jppf.ui.actions.ActionHandler";
	"org.jppf.ui.actions.AbstractActionHandler"->"org.jppf.ui.actions.ActionHandler"[I];
	"org.jppf.ui.actions.AbstractUpdatableAction";
	"org.jppf.ui.actions.UpdatableAction";
	"org.jppf.ui.actions.AbstractUpdatableAction"->"org.jppf.ui.actions.UpdatableAction"[I];
	"org.jppf.ui.options.AbstractOptionElement";
	"org.jppf.ui.options.OptionElement";
	"org.jppf.ui.options.AbstractOptionElement"->"org.jppf.ui.options.OptionElement"[I];
	"org.jppf.ui.monitoring.node.graph.GraphOption";
	"org.jppf.ui.actions.ActionHolder";
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.actions.ActionHolder"[I];
	"org.jppf.ui.treetable.AbstractTreeTableOption";
	"org.jppf.ui.treetable.AbstractTreeTableOption"->"org.jppf.ui.actions.ActionHolder"[I];
	"org.jppf.ui.options.AbstractOptionContainer";
	"org.jppf.ui.options.OptionContainer";
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.OptionContainer"[I];
	"org.jppf.ui.options.AbstractOptionProperties";
	"org.jppf.ui.options.OptionProperties";
	"org.jppf.ui.options.AbstractOptionProperties"->"org.jppf.ui.options.OptionProperties"[I];
	"org.jppf.ui.options.event.ScriptedValueChangeListener";
	"org.jppf.ui.options.event.ValueChangeListener";
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.ui.options.event.ValueChangeListener"[I];
	"org.jppf.ui.monitoring.charts.AreaChartHandler";
	"org.jppf.ui.monitoring.charts.ChartHandler";
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler";
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler";
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler";
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.MeterChartHandler";
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler";
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler";
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler";
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[I];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder";
	"org.jppf.ui.monitoring.event.StatsHandlerListener";
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[I];
	"org.jppf.ui.monitoring.MonitoringPanel";
	"org.jppf.ui.monitoring.MonitoringPanel"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[I];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy";
	"org.jppf.management.JPPFDriverAdminMBean";
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.JPPFDriverAdminMBean"[I];
	"org.jppf.management.JMXDriverConnectionWrapper";
	"org.jppf.management.JMXDriverConnectionWrapper"->"org.jppf.management.JPPFDriverAdminMBean"[I];
	"org.jppf.management.__JPPFDriverAdminMBean";
	"org.jppf.management.__JPPFDriverAdminMBean"->"org.jppf.management.JPPFDriverAdminMBean"[I];
	"org.jppf.management.JPPFDriverAdmin";
	"org.jppf.management.JPPFDriverAdmin"->"org.jppf.management.JPPFDriverAdminMBean"[I];
	"org.jppf.client.balancer.ChannelWrapperLocal";
	"org.jppf.client.event.ClientConnectionStatusHandler";
	"org.jppf.client.balancer.ChannelWrapperLocal"->"org.jppf.client.event.ClientConnectionStatusHandler"[I];
	"org.jppf.client.balancer.ChannelWrapperRemote";
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.event.ClientConnectionStatusHandler"[I];
	"org.jppf.client.event.__ClientConnectionStatusHandler";
	"org.jppf.client.event.__ClientConnectionStatusHandler"->"org.jppf.client.event.ClientConnectionStatusHandler"[I];
	"org.jppf.client.BaseJPPFClientConnection";
	"org.jppf.client.JPPFClientConnection";
	"org.jppf.client.BaseJPPFClientConnection"->"org.jppf.client.JPPFClientConnection"[I];
	"org.jppf.client.__JPPFClientConnection";
	"org.jppf.client.__JPPFClientConnection"->"org.jppf.client.JPPFClientConnection"[I];
	"org.jppf.ui.monitoring.data.StatsFormatter";
	"org.jppf.ui.monitoring.data.StatsConstants";
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.ui.monitoring.data.StatsConstants"[I];
	"org.jppf.ui.monitoring.data.StatsHandler";
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.StatsConstants"[I];
	"org.jppf.ui.monitoring.MonitoringPanel"->"org.jppf.ui.monitoring.data.StatsConstants"[I];
	"org.jppf.ui.monitoring.data.CsvStatsExporter";
	"org.jppf.ui.monitoring.data.StatsExporter";
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.ui.monitoring.data.StatsExporter"[I];
	"org.jppf.ui.monitoring.data.TextStatsExporter";
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.StatsExporter"[I];
	"org.jppf.management.diagnostics.Diagnostics";
	"org.jppf.management.diagnostics.DiagnosticsMBean";
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.DiagnosticsMBean"[I];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy";
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.DiagnosticsMBean"[I];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy";
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.DiagnosticsMBean"[I];
	"org.jppf.management.diagnostics.__DiagnosticsMBean";
	"org.jppf.management.diagnostics.__DiagnosticsMBean"->"org.jppf.management.diagnostics.DiagnosticsMBean"[I];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy";
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean";
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[I];
	"org.jppf.management.forwarding.__JPPFNodeForwardingMBean";
	"org.jppf.management.forwarding.__JPPFNodeForwardingMBean"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[I];
	"org.jppf.management.forwarding.JPPFNodeForwarding";
	"org.jppf.management.forwarding.JPPFNodeForwarding"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[I];
	"org.jppf.utils.collections.AbstractCollectionMap";
	"org.jppf.utils.collections.CollectionMap";
	"org.jppf.utils.collections.AbstractCollectionMap"->"org.jppf.utils.collections.CollectionMap"[I];
	"org.jppf.management.AllNodesSelector";
	"org.jppf.management.NodeSelector";
	"org.jppf.management.AllNodesSelector"->"org.jppf.management.NodeSelector"[I];
	"org.jppf.management.ExecutionPolicySelector";
	"org.jppf.management.ExecutionPolicySelector"->"org.jppf.management.NodeSelector"[I];
	"org.jppf.management.UuidSelector";
	"org.jppf.management.UuidSelector"->"org.jppf.management.NodeSelector"[I];
	"org.jppf.management.__NodeSelector";
	"org.jppf.management.__NodeSelector"->"org.jppf.management.NodeSelector"[I];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel";
	"org.jppf.client.monitoring.topology.TopologyListener";
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.ui.monitoring.job.JobDataPanel";
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler";
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.ui.monitoring.node.NodeDataPanel";
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter";
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.client.monitoring.topology.__TopologyListener";
	"org.jppf.client.monitoring.topology.__TopologyListener"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper";
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyListener"[I];
	"org.jppf.ui.options.AbstractOption";
	"org.jppf.ui.options.Option";
	"org.jppf.ui.options.AbstractOption"->"org.jppf.ui.options.Option"[I];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy";
	"org.jppf.server.job.management.DriverJobManagementMBean";
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.server.job.management.DriverJobManagementMBean"[I];
	"org.jppf.server.job.management.__DriverJobManagementMBean";
	"org.jppf.server.job.management.__DriverJobManagementMBean"->"org.jppf.server.job.management.DriverJobManagementMBean"[I];
	"org.jppf.server.job.management.DriverJobManagement";
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.job.management.DriverJobManagementMBean"[I];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy";
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBean";
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.node.provisioning.JPPFNodeProvisioningMBean"[I];
	"org.jppf.node.provisioning.__JPPFNodeProvisioningMBean";
	"org.jppf.node.provisioning.__JPPFNodeProvisioningMBean"->"org.jppf.node.provisioning.JPPFNodeProvisioningMBean"[I];
	"org.jppf.node.provisioning.JPPFNodeProvisioning";
	"org.jppf.node.provisioning.JPPFNodeProvisioning"->"org.jppf.node.provisioning.JPPFNodeProvisioningMBean"[I];
	"org.jppf.management.JMXConnectionWrapper";
	"org.jppf.management.JPPFAdminMBean";
	"org.jppf.management.JMXConnectionWrapper"->"org.jppf.management.JPPFAdminMBean"[I];
	"org.jppf.management.__JPPFAdminMBean";
	"org.jppf.management.__JPPFAdminMBean"->"org.jppf.management.JPPFAdminMBean"[I];
	"org.jppf.scripting.ScriptRunnerImpl";
	"org.jppf.scripting.ScriptRunner";
	"org.jppf.scripting.ScriptRunnerImpl"->"org.jppf.scripting.ScriptRunner"[I];
	"org.jppf.ui.treetable.AbstractTreeTableModel";
	"org.jppf.ui.treetable.TreeTableModel";
	"org.jppf.ui.treetable.AbstractTreeTableModel"->"org.jppf.ui.treetable.TreeTableModel"[I];
	"org.jppf.node.protocol.AbstractTask";
	"org.jppf.node.protocol.Task";
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.Task"[I];
	"org.jppf.node.protocol.__Task";
	"org.jppf.node.protocol.__Task"->"org.jppf.node.protocol.Task"[I];
	"org.jppf.client.AbstractClassServerDelegate";
	"org.jppf.client.ClassServerDelegate";
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.ClassServerDelegate"[I];
	"org.jppf.classloader.AbstractResourceProvider";
	"org.jppf.classloader.ResourceProvider";
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.classloader.ResourceProvider"[I];
	"org.jppf.comm.socket.AbstractSocketWrapper";
	"org.jppf.comm.socket.SocketWrapper";
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.comm.socket.SocketWrapper"[I];
	"org.jppf.comm.socket.SocketChannelClient";
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.comm.socket.SocketWrapper"[I];
	"org.jppf.client.AbstractClientConnectionHandler";
	"org.jppf.client.ClientConnectionHandler";
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.client.ClientConnectionHandler"[I];
	"org.jppf.comm.socket.AbstractSocketInitializer";
	"org.jppf.comm.socket.SocketInitializer";
	"org.jppf.comm.socket.AbstractSocketInitializer"->"org.jppf.comm.socket.SocketInitializer"[I];
	"org.jppf.client.AbstractConnectionPool";
	"org.jppf.client.ConnectionPool";
	"org.jppf.client.AbstractConnectionPool"->"org.jppf.client.ConnectionPool"[I];
	"org.jppf.client.AbstractGenericClient";
	"org.jppf.queue.QueueListener";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.queue.QueueListener"[I];
	"org.jppf.client.event.ClientQueueEventDispatcher";
	"org.jppf.client.event.ClientQueueEventDispatcher"->"org.jppf.queue.QueueListener"[I];
	"org.jppf.queue.QueueListenerAdapter";
	"org.jppf.queue.QueueListenerAdapter"->"org.jppf.queue.QueueListener"[I];
	"org.jppf.queue.__QueueListener";
	"org.jppf.queue.__QueueListener"->"org.jppf.queue.QueueListener"[I];
	"org.jppf.client.balancer.JobManagerClient";
	"org.jppf.client.JobManager";
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.JobManager"[I];
	"org.jppf.client.event.ClientQueueListenerAdapter";
	"org.jppf.client.event.ClientQueueListener";
	"org.jppf.client.event.ClientQueueListenerAdapter"->"org.jppf.client.event.ClientQueueListener"[I];
	"org.jppf.client.monitoring.topology.TopologyManager";
	"org.jppf.client.event.ClientListener";
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.event.ClientListener"[I];
	"org.jppf.node.protocol.JPPFTaskBundle";
	"org.jppf.node.protocol.TaskBundle";
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.TaskBundle"[I];
	"org.jppf.node.protocol.__TaskBundle";
	"org.jppf.node.protocol.__TaskBundle"->"org.jppf.node.protocol.TaskBundle"[I];
	"org.jppf.utils.collections.MetadataImpl";
	"org.jppf.utils.collections.Metadata";
	"org.jppf.utils.collections.MetadataImpl"->"org.jppf.utils.collections.Metadata"[I];
	"org.jppf.utils.collections.__Metadata";
	"org.jppf.utils.collections.__Metadata"->"org.jppf.utils.collections.Metadata"[I];
	"org.jppf.client.event.JobListenerAdapter";
	"org.jppf.client.event.JobListener";
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobListener"[I];
	"org.jppf.client.event.__JobListener";
	"org.jppf.client.event.__JobListener"->"org.jppf.client.event.JobListener"[I];
	"org.jppf.dotnet.DotnetJobListenerWrapper";
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.client.event.JobListener"[I];
	"org.jppf.client.persistence.DefaultFilePersistenceManager";
	"org.jppf.client.persistence.JobPersistence";
	"org.jppf.client.persistence.DefaultFilePersistenceManager"->"org.jppf.client.persistence.JobPersistence"[I];
	"org.jppf.client.AbstractJPPFJob";
	"org.jppf.node.protocol.JPPFDistributedJob";
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JPPFDistributedJob"[I];
	"org.jppf.node.protocol.__JPPFDistributedJob";
	"org.jppf.node.protocol.__JPPFDistributedJob"->"org.jppf.node.protocol.JPPFDistributedJob"[I];
	"org.jppf.node.protocol.JPPFJobClientSLA";
	"org.jppf.node.protocol.JobClientSLA";
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.protocol.JobClientSLA"[I];
	"org.jppf.node.protocol.__JobClientSLA";
	"org.jppf.node.protocol.__JobClientSLA"->"org.jppf.node.protocol.JobClientSLA"[I];
	"org.jppf.node.protocol.JPPFJobMetadata";
	"org.jppf.node.protocol.JobMetadata";
	"org.jppf.node.protocol.JPPFJobMetadata"->"org.jppf.node.protocol.JobMetadata"[I];
	"org.jppf.node.protocol.__JobMetadata";
	"org.jppf.node.protocol.__JobMetadata"->"org.jppf.node.protocol.JobMetadata"[I];
	"org.jppf.node.protocol.JPPFJobSLA";
	"org.jppf.node.protocol.JobSLA";
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.JobSLA"[I];
	"org.jppf.node.protocol.__JobSLA";
	"org.jppf.node.protocol.__JobSLA"->"org.jppf.node.protocol.JobSLA"[I];
	"org.jppf.client.balancer.ChannelWrapper";
	"org.jppf.execute.ExecutorChannel";
	"org.jppf.client.balancer.ChannelWrapper"->"org.jppf.execute.ExecutorChannel"[I];
	"org.jppf.execute.__ExecutorChannel";
	"org.jppf.execute.__ExecutorChannel"->"org.jppf.execute.ExecutorChannel"[I];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext";
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.execute.ExecutorChannel"[I];
	"org.jppf.node.protocol.AbstractCommonSLA";
	"org.jppf.node.protocol.JobCommonSLA";
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.protocol.JobCommonSLA"[I];
	"org.jppf.node.protocol.__JobCommonSLA";
	"org.jppf.node.protocol.__JobCommonSLA"->"org.jppf.node.protocol.JobCommonSLA"[I];
	"org.jppf.load.balancer.AbstractBundler";
	"org.jppf.load.balancer.Bundler";
	"org.jppf.load.balancer.AbstractBundler"->"org.jppf.load.balancer.Bundler"[I];
	"org.jppf.execute.AbstractExecutionManager";
	"org.jppf.execute.ExecutionManager";
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.ExecutionManager"[I];
	"org.jppf.node.protocol.MemoryMapDataProvider";
	"org.jppf.node.protocol.DataProvider";
	"org.jppf.node.protocol.MemoryMapDataProvider"->"org.jppf.node.protocol.DataProvider"[I];
	"org.jppf.node.protocol.__DataProvider";
	"org.jppf.node.protocol.__DataProvider"->"org.jppf.node.protocol.DataProvider"[I];
	"org.jppf.queue.AbstractJPPFQueue";
	"org.jppf.queue.JPPFQueue";
	"org.jppf.queue.AbstractJPPFQueue"->"org.jppf.queue.JPPFQueue"[I];
	"org.jppf.client.concurrent.AbstractJobConfiguration";
	"org.jppf.client.concurrent.JobConfiguration";
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[I];
	"org.jppf.client.concurrent.__JobConfiguration";
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[I];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl";
	"org.jppf.client.concurrent.ExecutorServiceConfiguration";
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[I];
	"org.jppf.client.concurrent.__ExecutorServiceConfiguration";
	"org.jppf.client.concurrent.__ExecutorServiceConfiguration"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[I];
	"org.jppf.client.concurrent.TaskConfigurationImpl";
	"org.jppf.client.concurrent.TaskConfiguration";
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.concurrent.TaskConfiguration"[I];
	"org.jppf.client.concurrent.__TaskConfiguration";
	"org.jppf.client.concurrent.__TaskConfiguration"->"org.jppf.client.concurrent.TaskConfiguration"[I];
	"org.jppf.client.debug.Debug";
	"org.jppf.client.debug.DebugMBean";
	"org.jppf.client.debug.Debug"->"org.jppf.client.debug.DebugMBean"[I];
	"test.org.jppf.test.setup.common.ExecutingJobStatusListener";
	"org.jppf.client.event.JobStatusListener";
	"test.org.jppf.test.setup.common.ExecutingJobStatusListener"->"org.jppf.client.event.JobStatusListener"[I];
	"test.org.jppf.test.setup.common.GatheringStatusListener";
	"test.org.jppf.test.setup.common.GatheringStatusListener"->"org.jppf.client.event.JobStatusListener"[I];
	"org.jppf.client.JPPFResultCollector";
	"org.jppf.client.JobStatusHandler";
	"org.jppf.client.JPPFResultCollector"->"org.jppf.client.JobStatusHandler"[I];
	"org.jppf.caching.JPPFSimpleSetCache";
	"org.jppf.caching.JPPFCollectionCache";
	"org.jppf.caching.JPPFSimpleSetCache"->"org.jppf.caching.JPPFCollectionCache"[I];
	"org.jppf.caching.JPPFHashMapCache";
	"org.jppf.caching.JPPFMapCache";
	"org.jppf.caching.JPPFHashMapCache"->"org.jppf.caching.JPPFMapCache"[I];
	"org.jppf.caching.JPPFSynchronizedSoftCache";
	"org.jppf.caching.JPPFSynchronizedSoftCache"->"org.jppf.caching.JPPFMapCache"[I];
	"org.jppf.comm.socket.BootstrapObjectSerializer";
	"org.jppf.serialization.ObjectSerializer";
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.serialization.ObjectSerializer"[I];
	"org.jppf.utils.ObjectSerializerImpl";
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.serialization.ObjectSerializer"[I];
	"sample.test.jppfcallable.MyCallable";
	"org.jppf.utils.JPPFCallable";
	"sample.test.jppfcallable.MyCallable"->"org.jppf.utils.JPPFCallable"[I];
	"test.filecopy.FileCopyAction";
	"test.filecopy.FileCopyAction"->"org.jppf.utils.JPPFCallable"[I];
	"test.jmx.MyTask.MyCallable";
	"test.jmx.MyTask.MyCallable"->"org.jppf.utils.JPPFCallable"[I];
	"test.jobfromtask.SourceTask.MyCallable";
	"test.jobfromtask.SourceTask.MyCallable"->"org.jppf.utils.JPPFCallable"[I];
	"org.jppf.utils.__JPPFCallable";
	"org.jppf.utils.__JPPFCallable"->"org.jppf.utils.JPPFCallable"[I];
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallable";
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallable"->"org.jppf.utils.JPPFCallable"[I];
	"test.org.jppf.server.protocol.TestJPPFTask.MyExceptionalCallable";
	"test.org.jppf.server.protocol.TestJPPFTask.MyExceptionalCallable"->"org.jppf.utils.JPPFCallable"[I];
	"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper";
	"org.jppf.client.taskwrapper.TaskObjectWrapper";
	"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper"[I];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask";
	"org.jppf.client.taskwrapper.DataProviderHolder";
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask"->"org.jppf.client.taskwrapper.DataProviderHolder"[I];
	"org.jppf.server.node.remote.JPPFRemoteNode";
	"org.jppf.comm.recovery.ClientConnectionListener";
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.comm.recovery.ClientConnectionListener"[I];
	"org.jppf.server.peer.PeerNode";
	"org.jppf.server.peer.PeerNode"->"org.jppf.comm.recovery.ClientConnectionListener"[I];
	"org.jppf.server.nio.classloader.node.NodeClassNioServer";
	"org.jppf.comm.recovery.ReaperListener";
	"org.jppf.server.nio.classloader.node.NodeClassNioServer"->"org.jppf.comm.recovery.ReaperListener"[I];
	"org.jppf.server.nio.nodeserver.NodeNioServer";
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.comm.recovery.ReaperListener"[I];
	"org.jppf.serialization.DefaultJavaSerialization";
	"org.jppf.serialization.JPPFSerialization";
	"org.jppf.serialization.DefaultJavaSerialization"->"org.jppf.serialization.JPPFSerialization"[I];
	"org.jppf.serialization.DefaultJPPFSerialization";
	"org.jppf.serialization.DefaultJPPFSerialization"->"org.jppf.serialization.JPPFSerialization"[I];
	"org.jppf.serialization.XstreamSerialization";
	"org.jppf.serialization.XstreamSerialization"->"org.jppf.serialization.JPPFSerialization"[I];
	"org.jppf.execute.AbstractThreadManager";
	"org.jppf.execute.ThreadManager";
	"org.jppf.execute.AbstractThreadManager"->"org.jppf.execute.ThreadManager"[I];
	"org.jppf.dotnet.DotnetTaskWrapper";
	"org.jppf.node.protocol.CancellationHandler";
	"org.jppf.dotnet.DotnetTaskWrapper"->"org.jppf.node.protocol.CancellationHandler"[I];
	"org.jppf.node.protocol.TimeoutHandler";
	"org.jppf.dotnet.DotnetTaskWrapper"->"org.jppf.node.protocol.TimeoutHandler"[I];
	"org.jppf.node.protocol.__Interruptibility";
	"org.jppf.node.protocol.Interruptibility";
	"org.jppf.node.protocol.__Interruptibility"->"org.jppf.node.protocol.Interruptibility"[I];
	"org.jppf.io.AbstractDataLocation";
	"org.jppf.io.DataLocation";
	"org.jppf.io.AbstractDataLocation"->"org.jppf.io.DataLocation"[I];
	"org.jppf.io.ChannelInputSource";
	"org.jppf.io.InputSource";
	"org.jppf.io.ChannelInputSource"->"org.jppf.io.InputSource"[I];
	"org.jppf.io.SocketWrapperInputSource";
	"org.jppf.io.SocketWrapperInputSource"->"org.jppf.io.InputSource"[I];
	"org.jppf.io.StreamInputSource";
	"org.jppf.io.StreamInputSource"->"org.jppf.io.InputSource"[I];
	"org.jppf.io.ChannelOutputDestination";
	"org.jppf.io.OutputDestination";
	"org.jppf.io.ChannelOutputDestination"->"org.jppf.io.OutputDestination"[I];
	"org.jppf.io.SocketWrapperOutputDestination";
	"org.jppf.io.SocketWrapperOutputDestination"->"org.jppf.io.OutputDestination"[I];
	"org.jppf.io.StreamOutputDestination";
	"org.jppf.io.StreamOutputDestination"->"org.jppf.io.OutputDestination"[I];
	"org.jppf.io.OverflowDetectorCallback";
	"org.jppf.utils.streams.NotifyingStreamCallback";
	"org.jppf.io.OverflowDetectorCallback"->"org.jppf.utils.streams.NotifyingStreamCallback"[I];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier";
	"org.jppf.job.JobManagerListener";
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobManagerListener"[I];
	"org.jppf.server.job.JPPFJobManager";
	"org.jppf.job.JobNotificationEmitter";
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobNotificationEmitter"[I];
	"org.jppf.job.TaskReturnManager";
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnManager"[I];
	"org.jppf.location.AbstractLocation";
	"org.jppf.location.Location";
	"org.jppf.location.AbstractLocation"->"org.jppf.location.Location"[I];
	"org.jppf.location.__Location";
	"org.jppf.location.__Location"->"org.jppf.location.Location"[I];
	"org.jppf.load.balancer.AbstractAdaptiveBundler";
	"org.jppf.load.balancer.BundlerEx";
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.BundlerEx"[I];
	"org.jppf.load.balancer.NodeAwareness";
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.NodeAwareness"[I];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer";
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.NodeAwareness"[I];
	"org.jppf.load.balancer.ContextAwareness";
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.ContextAwareness"[I];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer";
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.ContextAwareness"[I];
	"org.jppf.load.balancer.impl.AbstractAutoTuneProfile";
	"org.jppf.load.balancer.LoadBalancingProfile";
	"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[I];
	"org.jppf.load.balancer.impl.FixedSizeProfile";
	"org.jppf.load.balancer.impl.FixedSizeProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[I];
	"org.jppf.load.balancer.impl.NodeThreadsProfile";
	"org.jppf.load.balancer.impl.NodeThreadsProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[I];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider";
	"org.jppf.load.balancer.spi.JPPFBundlerProvider";
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[I];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider";
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[I];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider";
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[I];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider";
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[I];
	"org.jppf.load.balancer.spi.RLBundlerProvider";
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[I];
	"org.jppf.logging.jmx.JmxLoggerImpl";
	"org.jppf.logging.jmx.JmxLogger";
	"org.jppf.logging.jmx.JmxLoggerImpl"->"org.jppf.logging.jmx.JmxLogger"[I];
	"org.jppf.management.AbstractJMXServer";
	"org.jppf.management.JMXServer";
	"org.jppf.management.AbstractJMXServer"->"org.jppf.management.JMXServer"[I];
	"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider";
	"org.jppf.management.spi.JPPFMBeanProvider";
	"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"->"org.jppf.management.spi.JPPFMBeanProvider"[I];
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter";
	"org.jppf.management.diagnostics.ThreadDumpWriter";
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDumpWriter"[I];
	"org.jppf.management.diagnostics.__ThreadDumpWriter";
	"org.jppf.management.diagnostics.__ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDumpWriter"[I];
	"org.jppf.management.diagnostics.HeapDumpCollectorIBM";
	"org.jppf.management.diagnostics.HeapDumpCollector";
	"org.jppf.management.diagnostics.HeapDumpCollectorIBM"->"org.jppf.management.diagnostics.HeapDumpCollector"[I];
	"org.jppf.management.diagnostics.HeapDumpCollectorOracle";
	"org.jppf.management.diagnostics.HeapDumpCollectorOracle"->"org.jppf.management.diagnostics.HeapDumpCollector"[I];
	"org.jppf.management.NodeSelectionHelper";
	"org.jppf.management.forwarding.NodeSelectionProvider";
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.forwarding.NodeSelectionProvider"[I];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy";
	"org.jppf.management.JPPFNodeAdminMBean";
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JPPFNodeAdminMBean"[I];
	"org.jppf.management.JMXNodeConnectionWrapper";
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JPPFNodeAdminMBean"[I];
	"org.jppf.management.__JPPFNodeAdminMBean";
	"org.jppf.management.__JPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeAdminMBean"[I];
	"org.jppf.management.JPPFNodeAdmin";
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.JPPFNodeAdminMBean"[I];
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy";
	"org.jppf.management.JPPFNodeMaintenanceMBean";
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy"->"org.jppf.management.JPPFNodeMaintenanceMBean"[I];
	"org.jppf.management.__JPPFNodeMaintenanceMBean";
	"org.jppf.management.__JPPFNodeMaintenanceMBean"->"org.jppf.management.JPPFNodeMaintenanceMBean"[I];
	"org.jppf.management.JPPFNodeMaintenance";
	"org.jppf.management.JPPFNodeMaintenance"->"org.jppf.management.JPPFNodeMaintenanceMBean"[I];
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy";
	"org.jppf.management.JPPFNodeTaskMonitorMBean";
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[I];
	"org.jppf.management.__JPPFNodeTaskMonitorMBean";
	"org.jppf.management.__JPPFNodeTaskMonitorMBean"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[I];
	"org.jppf.management.JPPFNodeTaskMonitor";
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[I];
	"org.jppf.management.JPPFSystemInformation";
	"org.jppf.utils.PropertiesCollection";
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.PropertiesCollection"[I];
	"org.jppf.utils.__PropertiesCollection";
	"org.jppf.utils.__PropertiesCollection"->"org.jppf.utils.PropertiesCollection"[I];
	"org.jppf.nio.AbstractChannelWrapper";
	"org.jppf.nio.ChannelWrapper";
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.ChannelWrapper"[I];
	"org.jppf.nio.LocalChannelSelector";
	"org.jppf.nio.ChannelSelector";
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.nio.ChannelSelector"[I];
	"org.jppf.nio.AbstractNioContext";
	"org.jppf.nio.NioContext";
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.NioContext"[I];
	"org.jppf.nio.AbstractNioMessage";
	"org.jppf.nio.NioMessage";
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.NioMessage"[I];
	"org.jppf.nio.AbstractNioObject";
	"org.jppf.nio.NioObject";
	"org.jppf.nio.AbstractNioObject"->"org.jppf.nio.NioObject"[I];
	"org.jppf.node.event.__TaskExecutionListener";
	"org.jppf.node.event.TaskExecutionListener";
	"org.jppf.node.event.__TaskExecutionListener"->"org.jppf.node.event.TaskExecutionListener"[I];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.node.event.TaskExecutionListener"[I];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener";
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionListener"[I];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionListener"[I];
	"org.jppf.node.idle.MacIdleTimeDetector";
	"org.jppf.node.idle.IdleTimeDetector";
	"org.jppf.node.idle.MacIdleTimeDetector"->"org.jppf.node.idle.IdleTimeDetector"[I];
	"org.jppf.node.idle.WindowsIdleTimeDetector";
	"org.jppf.node.idle.WindowsIdleTimeDetector"->"org.jppf.node.idle.IdleTimeDetector"[I];
	"org.jppf.node.idle.X11IdleTimeDetector";
	"org.jppf.node.idle.X11IdleTimeDetector"->"org.jppf.node.idle.IdleTimeDetector"[I];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl";
	"org.jppf.node.idle.IdleTimeDetectorFactory";
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.IdleTimeDetectorFactory"[I];
	"org.jppf.node.protocol.ClassPathImpl";
	"org.jppf.node.protocol.ClassPath";
	"org.jppf.node.protocol.ClassPathImpl"->"org.jppf.node.protocol.ClassPath"[I];
	"org.jppf.node.protocol.__ClassPath";
	"org.jppf.node.protocol.__ClassPath"->"org.jppf.node.protocol.ClassPath"[I];
	"org.jppf.node.protocol.ClassPathElementImpl";
	"org.jppf.node.protocol.ClassPathElement";
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.node.protocol.ClassPathElement"[I];
	"org.jppf.node.protocol.__ClassPathElement";
	"org.jppf.node.protocol.__ClassPathElement"->"org.jppf.node.protocol.ClassPathElement"[I];
	"org.jppf.node.protocol.CommandLineTask";
	"org.jppf.process.ProcessWrapperEventListener";
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.process.ProcessWrapperEventListener"[I];
	"org.jppf.process.ProcessLauncher";
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapperEventListener"[I];
	"sample.dist.commandline.CommandLineTaskEx";
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.process.ProcessWrapperEventListener"[I];
	"org.jppf.node.provisioning.SlaveNodeManager";
	"org.jppf.process.ProcessLauncherListener";
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.process.ProcessLauncherListener"[I];
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler";
	"org.jppf.process.LauncherListenerProtocolHandler";
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"->"org.jppf.process.LauncherListenerProtocolHandler"[I];
	"org.jppf.utils.pooling.AbstractObjectPoolImpl";
	"org.jppf.utils.pooling.ObjectPool";
	"org.jppf.utils.pooling.AbstractObjectPoolImpl"->"org.jppf.utils.pooling.ObjectPool"[I];
	"org.jppf.utils.pooling.AbstractObjectPoolQueue";
	"org.jppf.utils.pooling.AbstractObjectPoolQueue"->"org.jppf.utils.pooling.ObjectPool"[I];
	"org.jppf.utils.SerializationHelperImpl";
	"org.jppf.serialization.SerializationHelper";
	"org.jppf.utils.SerializationHelperImpl"->"org.jppf.serialization.SerializationHelper"[I];
	"org.jppf.test.addons.startups.TaskNotifier";
	"org.jppf.startup.JPPFNodeStartupSPI";
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.startup.JPPFNodeStartupSPI"[I];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.startup.JPPFNodeStartupSPI"[I];
	"org.jppf.utils.stats.AbstractJPPFSnapshot";
	"org.jppf.utils.stats.JPPFSnapshot";
	"org.jppf.utils.stats.AbstractJPPFSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[I];
	"org.jppf.utils.stats.SingleValueSnapshot";
	"org.jppf.utils.stats.SingleValueSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[I];
	"org.jppf.utils.stats.__JPPFSnapshot";
	"org.jppf.utils.stats.__JPPFSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[I];
	"org.jppf.utils.stats.__JPPFStatisticsListener";
	"org.jppf.utils.stats.JPPFStatisticsListener";
	"org.jppf.utils.stats.__JPPFStatisticsListener"->"org.jppf.utils.stats.JPPFStatisticsListener"[I];
	"test.counters.LongCounterAtomic";
	"test.counters.LongCounter";
	"test.counters.LongCounterAtomic"->"test.counters.LongCounter"[I];
	"test.counters.LongCounterLock";
	"test.counters.LongCounterLock"->"test.counters.LongCounter"[I];
	"test.counters.LongCounterSynchronized";
	"test.counters.LongCounterSynchronized"->"test.counters.LongCounter"[I];
	"test.jmx.MyNodeListener";
	"org.jppf.node.event.NodeLifeCycleListener";
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleListener"[I];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter";
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleListener"[I];
	"org.jppf.node.screensaver.DelegatingNodeListener";
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleListener"[I];
	"org.jppf.management.NodeStatusNotifier";
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleListener"[I];
	"org.jppf.dotnetbridge.nodehook.DotnetBridgeHook";
	"org.jppf.node.initialization.InitializationHook";
	"org.jppf.dotnetbridge.nodehook.DotnetBridgeHook"->"org.jppf.node.initialization.InitializationHook"[I];
	"org.jppf.node.initialization.OutputRedirectHook";
	"org.jppf.node.initialization.OutputRedirectHook"->"org.jppf.node.initialization.InitializationHook"[I];
	"org.jppf.node.screensaver.ScreenSaverMain";
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.initialization.InitializationHook"[I];
	"org.jppf.jca.cci.JPPFConnectionImpl";
	"org.jppf.jca.cci.JPPFConnection";
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.cci.JPPFConnection"[I];
	"org.jppf.jca.util.JPPFAccessorImpl";
	"org.jppf.jca.util.JPPFAccessor";
	"org.jppf.jca.util.JPPFAccessorImpl"->"org.jppf.jca.util.JPPFAccessor"[I];
	"org.jppf.classloader.AbstractClassLoaderConnection";
	"org.jppf.classloader.ClassLoaderConnection";
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ClassLoaderConnection"[I];
	"org.jppf.classloader.AbstractResourceRequest";
	"org.jppf.classloader.ResourceRequestRunner";
	"org.jppf.classloader.AbstractResourceRequest"->"org.jppf.classloader.ResourceRequestRunner"[I];
	"org.jppf.node.AbstractNodeConnection";
	"org.jppf.node.NodeConnection";
	"org.jppf.node.AbstractNodeConnection"->"org.jppf.node.NodeConnection"[I];
	"org.jppf.node.connection.JPPFDriverConnectionInfo";
	"org.jppf.node.connection.DriverConnectionInfo";
	"org.jppf.node.connection.JPPFDriverConnectionInfo"->"org.jppf.node.connection.DriverConnectionInfo"[I];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider";
	"org.jppf.management.spi.JPPFNodeMBeanProvider";
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider";
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.server.node.spi.JPPFDefaultNodeMBeanProvider";
	"org.jppf.server.node.spi.JPPFDefaultNodeMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider";
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider";
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider";
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[I];
	"org.jppf.node.AbstractNode";
	"org.jppf.node.NodeInternal";
	"org.jppf.node.AbstractNode"->"org.jppf.node.NodeInternal"[I];
	"org.jppf.node.connection.JPPFCsvFileConnectionStrategy";
	"org.jppf.node.connection.DriverConnectionStrategy";
	"org.jppf.node.connection.JPPFCsvFileConnectionStrategy"->"org.jppf.node.connection.DriverConnectionStrategy"[I];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy";
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionStrategy"[I];
	"org.jppf.node.connection.MyConnectionStrategy";
	"org.jppf.node.connection.MyConnectionStrategy"->"org.jppf.node.connection.DriverConnectionStrategy"[I];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler";
	"org.jppf.node.event.NodeLifeCycleErrorHandler";
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleErrorHandler"[I];
	"org.jppf.node.screensaver.NodeIntegrationAdapter";
	"org.jppf.node.screensaver.NodeIntegration";
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.screensaver.NodeIntegration"[I];
	"org.jppf.node.screensaver.impl.JPPFScreenSaverImpl";
	"org.jppf.node.screensaver.JPPFScreenSaver";
	"org.jppf.node.screensaver.impl.JPPFScreenSaverImpl"->"org.jppf.node.screensaver.JPPFScreenSaver"[I];
	"org.jppf.node.screensaver.impl.SimpleScreenSaver";
	"org.jppf.node.screensaver.impl.SimpleScreenSaver"->"org.jppf.node.screensaver.JPPFScreenSaver"[I];
	"org.jppf.server.node.AbstractNodeConnectionChecker";
	"org.jppf.server.node.NodeConnectionChecker";
	"org.jppf.server.node.AbstractNodeConnectionChecker"->"org.jppf.server.node.NodeConnectionChecker"[I];
	"org.jppf.server.node.AbstractNodeIO";
	"org.jppf.server.node.NodeIO";
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.server.node.NodeIO"[I];
	"org.jppf.server.node.DefaultSerializationExceptionHook";
	"org.jppf.server.node.SerializationExceptionHook";
	"org.jppf.server.node.DefaultSerializationExceptionHook"->"org.jppf.server.node.SerializationExceptionHook"[I];
	"org.jppf.server.node.JPPFNode";
	"org.jppf.server.node.ClassLoaderProvider";
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.ClassLoaderProvider"[I];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider";
	"org.jppf.management.spi.JPPFDriverMBeanProvider";
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[I];
	"org.jppf.server.job.management.DriverJobManagementMBeanProvider";
	"org.jppf.server.job.management.DriverJobManagementMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[I];
	"org.jppf.server.spi.JPPFDefaultDriverMBeanProvider";
	"org.jppf.server.spi.JPPFDefaultDriverMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[I];
	"org.jppf.server.spi.JPPFNodeForwardingMBeanProvider";
	"org.jppf.server.spi.JPPFNodeForwardingMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[I];
	"org.jppf.management.forwarding.ForwardingNotificationManager";
	"org.jppf.management.forwarding.ForwardingNotificationEventListener";
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.ForwardingNotificationEventListener"[I];
	"org.jppf.server.event.NodeConnectionListener";
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.event.NodeConnectionListener"[I];
	"org.jppf.server.debug.ServerDebug";
	"org.jppf.server.debug.ServerDebugMBean";
	"org.jppf.server.debug.ServerDebug"->"org.jppf.server.debug.ServerDebugMBean"[I];
	"org.jppf.server.queue.JPPFPriorityQueue";
	"org.jppf.server.job.JobManager";
	"org.jppf.server.queue.JPPFPriorityQueue"->"org.jppf.server.job.JobManager"[I];
	"org.jppf.server.protocol.ServerJobChangeListener";
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerJobChangeListener"[I];
	"org.jppf.server.protocol.SendResultsStrategy.SendAllResultsStrategy";
	"org.jppf.server.protocol.SendResultsStrategy";
	"org.jppf.server.protocol.SendResultsStrategy.SendAllResultsStrategy"->"org.jppf.server.protocol.SendResultsStrategy"[I];
	"org.jppf.server.protocol.SendResultsStrategy.SendNodeResultsStrategy";
	"org.jppf.server.protocol.SendResultsStrategy.SendNodeResultsStrategy"->"org.jppf.server.protocol.SendResultsStrategy"[I];
	"org.jppf.test.scenario.AbstractScenarioRunner";
	"org.jppf.test.scenario.ScenarioRunner";
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.scenario.ScenarioRunner"[I];
	"org.jppf.test.scenario.ScenarioConfigurationImpl";
	"org.jppf.test.scenario.ScenarioConfiguration";
	"org.jppf.test.scenario.ScenarioConfigurationImpl"->"org.jppf.test.scenario.ScenarioConfiguration"[I];
	"org.jppf.test.addons.mbeans.NodeTest";
	"org.jppf.test.addons.mbeans.NodeTestMBean";
	"org.jppf.test.addons.mbeans.NodeTest"->"org.jppf.test.addons.mbeans.NodeTestMBean"[I];
	"org.jppf.test.addons.mbeans.NodeTest"->"org.jppf.test.addons.mbeans.NodeTestMBean"[I];
	"test.org.jppf.test.runner.AbstractTestResultRenderer";
	"test.org.jppf.test.runner.TestResultRenderer";
	"test.org.jppf.test.runner.AbstractTestResultRenderer"->"test.org.jppf.test.runner.TestResultRenderer"[I];
	"org.jppf.ui.actions.JTreeTableActionHandler";
	"org.jppf.ui.actions.JTreeTableActionHandler"->"org.jppf.ui.actions.AbstractActionHandler"[C];
	"org.jppf.ui.monitoring.node.graph.GraphActionHandler";
	"org.jppf.ui.monitoring.node.graph.GraphActionHandler"->"org.jppf.ui.actions.AbstractActionHandler"[C];
	"org.jppf.ui.actions.JTreeTableActionHandler"->"org.jppf.ui.actions.AbstractActionHandler"[A];
	"org.jppf.ui.monitoring.node.graph.GraphActionHandler"->"org.jppf.ui.actions.AbstractActionHandler"[A];
	"org.jppf.ui.actions.ShowHideColumnsAction";
	"org.jppf.ui.actions.ShowHideColumnsAction"->"org.jppf.ui.actions.AbstractUpdatableAction"[C];
	"org.jppf.ui.monitoring.job.actions.AbstractJobAction";
	"org.jppf.ui.monitoring.job.actions.AbstractJobAction"->"org.jppf.ui.actions.AbstractUpdatableAction"[C];
	"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction";
	"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"->"org.jppf.ui.actions.AbstractUpdatableAction"[C];
	"org.jppf.ui.actions.ShowHideColumnsAction"->"org.jppf.ui.actions.AbstractUpdatableAction"[A];
	"org.jppf.ui.monitoring.job.actions.AbstractJobAction"->"org.jppf.ui.actions.AbstractUpdatableAction"[A];
	"org.jppf.ui.monitoring.job.JobTreeTableMouseListener";
	"org.jppf.ui.monitoring.job.JobTreeTableMouseListener"->"org.jppf.ui.actions.AbstractUpdatableAction"[A];
	"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"->"org.jppf.ui.actions.AbstractUpdatableAction"[A];
	"org.jppf.ui.monitoring.node.graph.PopupMenuMousePlugin";
	"org.jppf.ui.monitoring.node.graph.PopupMenuMousePlugin"->"org.jppf.ui.actions.AbstractUpdatableAction"[A];
	"org.jppf.ui.options.AbstractOptionElement"->"org.jppf.ui.options.AbstractOptionProperties"[C];
	"org.jppf.ui.actions.ActionsInitializer";
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.AbstractOptionProperties"[A];
	"org.jppf.ui.monitoring.data.StatusBarHandler";
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.ui.options.AbstractOptionProperties"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.treetable.AbstractTreeTableOption"[C];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.treetable.AbstractTreeTableOption"[C];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.treetable.AbstractTreeTableOption"[C];
	"org.jppf.ui.actions.ShowHideColumnsAction"->"org.jppf.ui.treetable.AbstractTreeTableOption"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.treetable.AbstractTreeTableOption"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer";
	"org.jppf.ui.treetable.AbstractTreeCellRenderer";
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[C];
	"org.jppf.ui.monitoring.job.JobRenderer";
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[C];
	"org.jppf.ui.monitoring.node.NodeRenderer";
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[C];
	"org.jppf.ui.monitoring.data.ClientHandler";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer";
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction";
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer";
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.node.NodeTableCellRenderer";
	"org.jppf.ui.monitoring.node.NodeTableCellRenderer"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.utils.TreeTableUtils";
	"org.jppf.ui.utils.TreeTableUtils"->"org.jppf.ui.treetable.AbstractTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.BooleanOption";
	"org.jppf.ui.options.BooleanOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.ButtonOption";
	"org.jppf.ui.options.ButtonOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.ComboBoxOption";
	"org.jppf.ui.options.ComboBoxOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.FileChooserOption";
	"org.jppf.ui.options.FileChooserOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.FillerOption";
	"org.jppf.ui.options.FillerOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.FormattedNumberOption";
	"org.jppf.ui.options.FormattedNumberOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.JavaOption";
	"org.jppf.ui.options.JavaOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.LabelOption";
	"org.jppf.ui.options.LabelOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.ListOption";
	"org.jppf.ui.options.ListOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.PluggableViewOption";
	"org.jppf.ui.options.PluggableViewOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.RadioButtonOption";
	"org.jppf.ui.options.RadioButtonOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.SpinnerNumberOption";
	"org.jppf.ui.options.SpinnerNumberOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.TextAreaOption";
	"org.jppf.ui.options.TextAreaOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.TextOption";
	"org.jppf.ui.options.TextOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.options.ToolbarSeparatorOption";
	"org.jppf.ui.options.ToolbarSeparatorOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.treetable.AbstractTreeTableOption"->"org.jppf.ui.options.AbstractOption"[C];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.monitoring.job.actions.UpdateMaxNodesAction";
	"org.jppf.ui.monitoring.job.actions.UpdateMaxNodesAction"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.monitoring.job.actions.UpdatePriorityAction";
	"org.jppf.ui.monitoring.job.actions.UpdatePriorityAction"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction";
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.BooleanOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.ButtonOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.ComboBoxOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.event.ScriptedMouseListener";
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.factory.OptionsHandler";
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.FileChooserOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.FillerOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.FormattedNumberOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.JavaOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.LabelOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.ListOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.PluggableViewOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.RadioButtonOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.SpinnerNumberOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.ui.options.TextAreaOption"->"org.jppf.ui.options.AbstractOption"[A];
	"org.jppf.client.AbstractJPPFClient";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.AbstractJPPFClient"[C];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.AbstractJPPFClient"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.AbstractJPPFClient"[A];
	"org.jppf.client.monitoring.topology.TopologyDriver";
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent";
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[C];
	"org.jppf.client.monitoring.topology.TopologyNode";
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[C];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[A];
	"org.jppf.client.JPPFClient";
	"org.jppf.client.JPPFClient"->"org.jppf.client.AbstractGenericClient"[C];
	"org.jppf.ui.monitoring.data.ConnectionFailedTask";
	"org.jppf.utils.ThreadSynchronization";
	"org.jppf.ui.monitoring.data.ConnectionFailedTask"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.ui.monitoring.data.NewConnectionTask";
	"org.jppf.ui.monitoring.data.NewConnectionTask"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.ui.monitoring.job.JobData.ProxySetting";
	"org.jppf.ui.monitoring.job.JobData.ProxySetting"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.client.balancer.queue.TaskQueueChecker";
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.client.concurrent.BatchHandler";
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.client.JobResults";
	"org.jppf.client.JobResults"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.client.JPPFMulticastReceiverThread";
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.comm.discovery.JPPFBroadcaster";
	"org.jppf.comm.discovery.JPPFBroadcaster"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.comm.discovery.JPPFMulticastReceiver";
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.comm.recovery.AbstractRecoveryConnection";
	"org.jppf.comm.recovery.AbstractRecoveryConnection"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.comm.recovery.RecoveryServer";
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.comm.socket.AbstractSocketInitializer"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.management.diagnostics.CPUTimeCollector";
	"org.jppf.management.diagnostics.CPUTimeCollector"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.management.JMXConnectionThread";
	"org.jppf.management.JMXConnectionThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.management.JMXConnectionWrapper"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.nio.ChannelSelectorThread";
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.process.AbstractProcessLauncher";
	"org.jppf.process.AbstractProcessLauncher"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.utils.SimpleObjectLock";
	"org.jppf.utils.SimpleObjectLock"->"org.jppf.utils.ThreadSynchronization"[C];
	"sample.test.deadlock.MasterNodeMonitoringThread";
	"sample.test.deadlock.MasterNodeMonitoringThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"sample.test.deadlock.ProvisioningThread";
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"sample.test.jppfcallable.MyLoggingHandler";
	"sample.test.jppfcallable.MyLoggingHandler"->"org.jppf.utils.ThreadSynchronization"[C];
	"sample.test.largedata.SubmitQueue";
	"sample.test.largedata.SubmitQueue"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask";
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.node.AbstractNode"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker";
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread";
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.server.peer.PeerDiscoveryThread";
	"org.jppf.server.peer.PeerDiscoveryThread"->"org.jppf.utils.ThreadSynchronization"[C];
	"org.jppf.ui.monitoring.data.ConnectionFailedTask"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.ui.monitoring.data.NewConnectionTask"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.ui.monitoring.job.JobData";
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.ui.monitoring.job.JobData.ProxySetting"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.client.JobResults"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.comm.discovery.JPPFBroadcaster"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.comm.discovery.JPPFMulticastReceiver.Receiver";
	"org.jppf.comm.discovery.JPPFMulticastReceiver.Receiver"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.comm.recovery.AbstractRecoveryConnection"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.comm.socket.AbstractSocketInitializer"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.management.diagnostics.CPUTimeCollector"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.management.JMXConnectionThread"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.management.JMXConnectionWrapper"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.process.AbstractProcessLauncher"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.utils.ConcurrentUtils";
	"org.jppf.utils.ConcurrentUtils"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.utils.SimpleObjectLock"->"org.jppf.utils.ThreadSynchronization"[A];
	"sample.test.deadlock.DeadlockRunner";
	"sample.test.deadlock.DeadlockRunner"->"org.jppf.utils.ThreadSynchronization"[A];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"org.jppf.utils.ThreadSynchronization"[A];
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.utils.ThreadSynchronization"[A];
	"sample.test.jppfcallable.MyLoggingHandler"->"org.jppf.utils.ThreadSynchronization"[A];
	"sample.test.largedata.SubmitQueue"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler";
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.classloader.LocalResourceRequest";
	"org.jppf.classloader.LocalResourceRequest"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.node.NodeRunner";
	"org.jppf.node.NodeRunner"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.server.DriverInitializer";
	"org.jppf.server.DriverInitializer"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.server.nio.classloader.LocalClassContext";
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext";
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.utils.ThreadSynchronization"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction";
	"org.jppf.ui.monitoring.diagnostics.GCAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction";
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction";
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction";
	"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction";
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction";
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.ResetTaskCounterAction";
	"org.jppf.ui.monitoring.node.actions.ResetTaskCounterAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.ServerShutdownRestartAction";
	"org.jppf.ui.monitoring.node.actions.ServerShutdownRestartAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.ServerStatisticsResetAction";
	"org.jppf.ui.monitoring.node.actions.ServerStatisticsResetAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.ShutdownOrRestartNodeAction";
	"org.jppf.ui.monitoring.node.actions.ShutdownOrRestartNodeAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction";
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.actions.ToggleNodeActiveAction";
	"org.jppf.ui.monitoring.node.actions.ToggleNodeActiveAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction";
	"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[C];
	"org.jppf.ui.monitoring.diagnostics.GCAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction";
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction";
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableModel";
	"org.jppf.ui.treetable.AbstractJPPFTreeTableModel";
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableModel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[C];
	"org.jppf.ui.monitoring.job.JobTreeTableModel";
	"org.jppf.ui.monitoring.job.JobTreeTableModel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[C];
	"org.jppf.ui.monitoring.node.NodeTreeTableModel";
	"org.jppf.ui.monitoring.node.NodeTreeTableModel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[C];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableModel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.monitoring.job.JobTreeTableModel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.monitoring.node.NodeTreeTableModel"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.treetable.AbstractTreeTableOption"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.treetable.JPPFTreeTable";
	"org.jppf.ui.treetable.JPPFTreeTable"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableMouseListener";
	"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener";
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableMouseListener"->"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener"[C];
	"org.jppf.ui.monitoring.node.NodeTreeTableMouseListener";
	"org.jppf.ui.monitoring.node.NodeTreeTableMouseListener"->"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener"[C];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableMouseListener"->"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener"[A];
	"org.jppf.ui.monitoring.node.NodeTreeTableMouseListener"->"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener"[A];
	"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction";
	"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction"->"org.jppf.ui.monitoring.job.actions.AbstractJobAction"[C];
	"org.jppf.ui.monitoring.job.actions.CancelJobAction";
	"org.jppf.ui.monitoring.job.actions.CancelJobAction"->"org.jppf.ui.monitoring.job.actions.AbstractJobAction"[C];
	"org.jppf.ui.monitoring.job.actions.ResumeJobAction";
	"org.jppf.ui.monitoring.job.actions.ResumeJobAction"->"org.jppf.ui.monitoring.job.actions.AbstractJobAction"[C];
	"org.jppf.ui.monitoring.job.actions.UpdateMaxNodesAction"->"org.jppf.ui.monitoring.job.actions.AbstractJobAction"[C];
	"org.jppf.ui.monitoring.job.actions.UpdatePriorityAction"->"org.jppf.ui.monitoring.job.actions.AbstractJobAction"[C];
	"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction"->"org.jppf.ui.monitoring.job.actions.AbstractJobAction"[A];
	"org.jppf.ui.monitoring.job.actions.SuspendJobAction";
	"org.jppf.ui.monitoring.job.actions.SuspendJobAction"->"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction"[C];
	"org.jppf.ui.monitoring.job.actions.SuspendRequeueJobAction";
	"org.jppf.ui.monitoring.job.actions.SuspendRequeueJobAction"->"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction"[C];
	"org.jppf.ui.monitoring.node.actions.SelectAllAction";
	"org.jppf.ui.monitoring.node.actions.SelectAllAction"->"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"[C];
	"org.jppf.ui.monitoring.node.actions.SelectDriversAction";
	"org.jppf.ui.monitoring.node.actions.SelectDriversAction"->"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"[C];
	"org.jppf.ui.monitoring.node.actions.SelectNodesAction";
	"org.jppf.ui.monitoring.node.actions.SelectNodesAction"->"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"[C];
	"org.jppf.ui.monitoring.node.actions.SelectAllAction"->"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"[A];
	"org.jppf.ui.monitoring.node.actions.SelectDriversAction"->"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"[A];
	"org.jppf.ui.monitoring.node.actions.SelectNodesAction"->"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"[A];
	"org.jppf.utils.HTMLPropertiesTableFormat";
	"org.jppf.utils.PropertiesTableFormat";
	"org.jppf.utils.HTMLPropertiesTableFormat"->"org.jppf.utils.PropertiesTableFormat"[C];
	"org.jppf.utils.TextPropertiesTableFormat";
	"org.jppf.utils.TextPropertiesTableFormat"->"org.jppf.utils.PropertiesTableFormat"[C];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.utils.PropertiesTableFormat"[A];
	"org.jppf.utils.HTMLPropertiesTableFormat"->"org.jppf.utils.PropertiesTableFormat"[A];
	"org.jppf.utils.TextPropertiesTableFormat"->"org.jppf.utils.PropertiesTableFormat"[A];
	"org.jppf.ui.monitoring.node.graph.ExpandOrCollapseGraphAction";
	"org.jppf.ui.monitoring.node.graph.ExpandOrCollapseGraphAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[C];
	"org.jppf.ui.monitoring.node.graph.SelectGraphDriversAction";
	"org.jppf.ui.monitoring.node.graph.SelectGraphDriversAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[C];
	"org.jppf.ui.monitoring.node.graph.SelectGraphNodesAction";
	"org.jppf.ui.monitoring.node.graph.SelectGraphNodesAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[C];
	"org.jppf.ui.monitoring.node.graph.ToggleLayoutAction";
	"org.jppf.ui.monitoring.node.graph.ToggleLayoutAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[C];
	"org.jppf.ui.monitoring.node.graph.ToggleModeAction";
	"org.jppf.ui.monitoring.node.graph.ToggleModeAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[C];
	"org.jppf.ui.monitoring.node.graph.ExpandOrCollapseGraphAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[A];
	"org.jppf.ui.monitoring.node.graph.SelectGraphDriversAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[A];
	"org.jppf.ui.monitoring.node.graph.SelectGraphNodesAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[A];
	"org.jppf.ui.monitoring.node.graph.ToggleLayoutAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[A];
	"org.jppf.ui.monitoring.node.graph.ToggleModeAction"->"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"[A];
	"org.jppf.ui.options.AbstractOption"->"org.jppf.ui.options.AbstractOptionElement"[C];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.AbstractOptionElement"[C];
	"org.jppf.ui.options.AbstractOption"->"org.jppf.ui.options.AbstractOptionElement"[A];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.AbstractOptionElement"[A];
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.ui.options.AbstractOptionElement"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder";
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.AbstractOptionElement"[A];
	"org.jppf.ui.options.OptionPanel";
	"org.jppf.ui.options.OptionPanel"->"org.jppf.ui.options.AbstractOptionContainer"[C];
	"org.jppf.ui.options.SplitPaneOption";
	"org.jppf.ui.options.SplitPaneOption"->"org.jppf.ui.options.AbstractOptionContainer"[C];
	"org.jppf.ui.options.TabbedPaneOption";
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.options.AbstractOptionContainer"[C];
	"org.jppf.ui.options.ToolbarOption";
	"org.jppf.ui.options.ToolbarOption"->"org.jppf.ui.options.AbstractOptionContainer"[C];
	"org.jppf.ui.options.OptionPanel"->"org.jppf.ui.options.AbstractOptionContainer"[A];
	"org.jppf.ui.options.SplitPaneOption"->"org.jppf.ui.options.AbstractOptionContainer"[A];
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.options.AbstractOptionContainer"[A];
	"org.jppf.ui.options.ToolbarOption"->"org.jppf.ui.options.AbstractOptionContainer"[A];
	"org.jppf.ui.options.xml.OptionElementFactory";
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.AbstractOptionContainer"[A];
	"org.jppf.ui.options.docking.DockToExistingViewAction";
	"org.jppf.ui.options.docking.AbstractDockingAction";
	"org.jppf.ui.options.docking.DockToExistingViewAction"->"org.jppf.ui.options.docking.AbstractDockingAction"[C];
	"org.jppf.ui.options.docking.DockToInitialContainerAction";
	"org.jppf.ui.options.docking.DockToInitialContainerAction"->"org.jppf.ui.options.docking.AbstractDockingAction"[C];
	"org.jppf.ui.options.docking.DockToNewViewAction";
	"org.jppf.ui.options.docking.DockToNewViewAction"->"org.jppf.ui.options.docking.AbstractDockingAction"[C];
	"org.jppf.ui.options.docking.DockToExistingViewAction"->"org.jppf.ui.options.docking.AbstractDockingAction"[A];
	"org.jppf.ui.options.docking.DockToInitialContainerAction"->"org.jppf.ui.options.docking.AbstractDockingAction"[A];
	"org.jppf.ui.options.docking.DockToNewViewAction"->"org.jppf.ui.options.docking.AbstractDockingAction"[A];
	"org.jppf.ui.options.JavaOption.JavaOptionMouseListener";
	"org.jppf.ui.options.JavaOption"->"org.jppf.ui.options.JavaOption.JavaOptionMouseListener"[A];
	"org.jppf.ui.options.PasswordOption";
	"org.jppf.ui.options.PasswordOption"->"org.jppf.ui.options.TextOption"[C];
	"org.jppf.ui.options.PlainTextOption";
	"org.jppf.ui.options.PlainTextOption"->"org.jppf.ui.options.TextOption"[C];
	"org.jppf.ui.options.PasswordOption"->"org.jppf.ui.options.TextOption"[A];
	"org.jppf.ui.options.PlainTextOption"->"org.jppf.ui.options.TextOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.TextOption"[A];
	"org.jppf.ui.plugin.PluggableView";
	"org.jppf.ui.options.PluggableViewOption"->"org.jppf.ui.plugin.PluggableView"[A];
	"org.jppf.ui.treetable.JTreeTable.TreeTableCellEditor";
	"org.jppf.ui.treetable.AbstractCellEditor";
	"org.jppf.ui.treetable.JTreeTable.TreeTableCellEditor"->"org.jppf.ui.treetable.AbstractCellEditor"[C];
	"org.jppf.ui.treetable.JTreeTable.TreeTableCellEditor"->"org.jppf.ui.treetable.AbstractCellEditor"[A];
	"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"->"org.jppf.ui.treetable.AbstractTreeTableModel"[C];
	"org.jppf.ui.treetable.FileSystemModel";
	"org.jppf.ui.treetable.FileSystemModel"->"org.jppf.ui.treetable.AbstractTreeTableModel"[C];
	"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"->"org.jppf.ui.treetable.AbstractTreeTableModel"[A];
	"org.jppf.ui.treetable.FileSystemModel"->"org.jppf.ui.treetable.AbstractTreeTableModel"[A];
	"org.jppf.client.ClassServerDelegateImpl";
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.client.AbstractClassServerDelegate"[C];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.client.AbstractClassServerDelegate"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.AbstractClientConnectionHandler"[C];
	"org.jppf.client.TaskServerConnectionHandler";
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.client.AbstractClientConnectionHandler"[C];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.AbstractClientConnectionHandler"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.client.AbstractClientConnectionHandler"[A];
	"org.jppf.client.JPPFClientConnectionImpl";
	"org.jppf.client.AbstractJPPFClientConnection";
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.AbstractJPPFClientConnection"[C];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.AbstractJPPFClientConnection"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.AbstractJPPFClientConnection"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.AbstractJPPFClientConnection"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable";
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.AbstractJPPFClientConnection"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.AbstractJPPFClientConnection"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.AbstractJPPFClientConnection"[A];
	"org.jppf.client.JMXConnectionPool";
	"org.jppf.client.JMXConnectionPool"->"org.jppf.client.AbstractConnectionPool"[C];
	"org.jppf.client.JPPFConnectionPool";
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.AbstractConnectionPool"[C];
	"org.jppf.client.JMXConnectionPool"->"org.jppf.client.AbstractConnectionPool"[A];
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.AbstractConnectionPool"[A];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.BaseJPPFClientConnection"[C];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.BaseJPPFClientConnection"[A];
	"org.jppf.client.JPPFJob";
	"org.jppf.client.JPPFJob"->"org.jppf.client.AbstractJPPFJob"[C];
	"org.jppf.client.balancer.ClientJob";
	"org.jppf.client.balancer.AbstractClientJob";
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.balancer.AbstractClientJob"[C];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.ClientTaskBundle";
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.queue.JobExpirationAction";
	"org.jppf.client.balancer.queue.JobExpirationAction"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.queue.JobPriorityComparator";
	"org.jppf.client.balancer.queue.JobPriorityComparator"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.queue.JobScheduleAction";
	"org.jppf.client.balancer.queue.JobScheduleAction"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.balancer.AbstractClientJob"[A];
	"org.jppf.node.policy.ExecutionPolicy.LogicalRule";
	"org.jppf.node.policy.ExecutionPolicy";
	"org.jppf.node.policy.ExecutionPolicy.LogicalRule"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.ExecutionPolicy.NotRule";
	"org.jppf.node.policy.ExecutionPolicy.NotRule"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.AtLeast";
	"org.jppf.node.policy.AtLeast"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.AtMost";
	"org.jppf.node.policy.AtMost"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.BetweenPolicy";
	"org.jppf.node.policy.BetweenPolicy"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.Contains";
	"org.jppf.node.policy.Contains"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.CustomPolicy";
	"org.jppf.node.policy.CustomPolicy"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.Equal";
	"org.jppf.node.policy.Equal"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.IsInIPv4Subnet";
	"org.jppf.node.policy.IsInIPv4Subnet"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.IsInIPv6Subnet";
	"org.jppf.node.policy.IsInIPv6Subnet"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.LessThan";
	"org.jppf.node.policy.LessThan"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.MoreThan";
	"org.jppf.node.policy.MoreThan"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.OneOf";
	"org.jppf.node.policy.OneOf"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.PolicyRuleTest";
	"org.jppf.node.policy.PolicyRuleTest"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.RegExp";
	"org.jppf.node.policy.RegExp"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.ScriptedPolicy";
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.node.policy.ExecutionPolicy"[C];
	"org.jppf.node.policy.ExecutionPolicy.LogicalRule"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.ExecutionPolicy.NotRule"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.management.ExecutionPolicySelector"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.management.NodeSelector.ExecutionPolicySelector";
	"org.jppf.management.NodeSelector.ExecutionPolicySelector"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.AtLeast"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.AtMost"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.BetweenPolicy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.Contains"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.CustomPolicy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.Equal"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.IsInIPv4Subnet"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.IsInIPv6Subnet"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.LessThan"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.MoreThan"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.OneOf"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.PolicyBuilder";
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.PolicyParser";
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.PolicyRuleTest"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.RegExp"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"sample.dist.matrix.MatrixRunner";
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"sample.test.job.management.JobManagementTestRunner";
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.management.__JPPFDriverAdminMBean"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.protocol.__JobClientSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.protocol.__JobCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.node.protocol.__JobSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup";
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy";
	"test.org.jppf.node.policy.TestExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy";
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy";
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA";
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.node.policy.ExecutionPolicy"[A];
	"org.jppf.client.balancer.ChannelWrapperLocal"->"org.jppf.client.balancer.ChannelWrapper"[C];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.ChannelWrapper"[C];
	"org.jppf.client.balancer.ChannelWrapperLocal"->"org.jppf.client.balancer.ChannelWrapper"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.ChannelWrapper"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.balancer.ChannelWrapper"[A];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.balancer.ChannelWrapper"[A];
	"org.jppf.client.balancer.queue.ChannelPriorityComparator";
	"org.jppf.client.balancer.queue.ChannelPriorityComparator"->"org.jppf.client.balancer.ChannelWrapper"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.balancer.ChannelWrapper"[A];
	"org.jppf.client.balancer.ClientExecutionManager";
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.execute.AbstractExecutionManager"[C];
	"org.jppf.server.node.NodeExecutionManager";
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.execute.AbstractExecutionManager"[C];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.execute.AbstractExecutionManager"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.execute.AbstractExecutionManager"[A];
	"org.jppf.execute.ThreadManagerForkJoin.FJUsedClassLoader";
	"org.jppf.execute.ThreadManager.UsedClassLoader";
	"org.jppf.execute.ThreadManagerForkJoin.FJUsedClassLoader"->"org.jppf.execute.ThreadManager.UsedClassLoader"[C];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.execute.ThreadManager.UsedClassLoader"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.ThreadManager.UsedClassLoader"[A];
	"org.jppf.execute.ThreadManagerForkJoin";
	"org.jppf.execute.ThreadManagerForkJoin"->"org.jppf.execute.ThreadManager.UsedClassLoader"[A];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory";
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.ThreadManager.UsedClassLoader"[A];
	"org.jppf.execute.ThreadManagerForkJoin.FJUsedClassLoader"->"org.jppf.execute.ThreadManager.UsedClassLoader"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.execute.ThreadManager.UsedClassLoader"[A];
	"org.jppf.client.balancer.queue.JPPFPriorityQueue";
	"org.jppf.client.balancer.queue.JPPFPriorityQueue"->"org.jppf.queue.AbstractJPPFQueue"[C];
	"org.jppf.server.queue.JPPFPriorityQueue"->"org.jppf.queue.AbstractJPPFQueue"[C];
	"org.jppf.client.balancer.queue.JPPFPriorityQueue"->"org.jppf.queue.AbstractJPPFQueue"[A];
	"org.jppf.queue.QueueEvent";
	"org.jppf.queue.QueueEvent"->"org.jppf.queue.AbstractJPPFQueue"[A];
	"org.jppf.server.queue.JPPFPriorityQueue"->"org.jppf.queue.AbstractJPPFQueue"[A];
	"org.jppf.utils.collections.LinkedListSortedMap";
	"org.jppf.utils.collections.AbstractCollectionSortedMap";
	"org.jppf.utils.collections.LinkedListSortedMap"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[C];
	"org.jppf.utils.collections.SetSortedMap";
	"org.jppf.utils.collections.SetSortedMap"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[C];
	"org.jppf.utils.collections.SortedSetSortedMap";
	"org.jppf.utils.collections.SortedSetSortedMap"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[C];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[A];
	"org.jppf.utils.collections.LinkedListSortedMap"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[A];
	"org.jppf.utils.collections.SetSortedMap"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[A];
	"org.jppf.utils.collections.SortedSetSortedMap"->"org.jppf.utils.collections.AbstractCollectionSortedMap"[A];
	"org.jppf.client.JPPFContextClient";
	"org.jppf.load.balancer.JPPFContext";
	"org.jppf.client.JPPFContextClient"->"org.jppf.load.balancer.JPPFContext"[C];
	"org.jppf.server.JPPFContextDriver";
	"org.jppf.server.JPPFContextDriver"->"org.jppf.load.balancer.JPPFContext"[C];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.client.JPPFContextClient"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.load.balancer.impl.AutoTunedBundler";
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.load.balancer.impl.ProportionalBundler";
	"org.jppf.load.balancer.impl.ProportionalBundler"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.load.balancer.impl.RLBundler";
	"org.jppf.load.balancer.impl.RLBundler"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.execute.__ExecutorChannel"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.server.JPPFContextDriver"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.JPPFContext"[A];
	"org.jppf.utils.collections.AbstractCollectionConcurrentMap";
	"org.jppf.utils.collections.AbstractCollectionConcurrentMap"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.AbstractCollectionHashtable";
	"org.jppf.utils.collections.AbstractCollectionHashtable"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.AbstractCollectionSortedMap"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.ArrayListHashMap";
	"org.jppf.utils.collections.ArrayListHashMap"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.EnumSetEnumMap";
	"org.jppf.utils.collections.EnumSetEnumMap"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.SetHashMap";
	"org.jppf.utils.collections.SetHashMap"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.SetIdentityMap";
	"org.jppf.utils.collections.SetIdentityMap"->"org.jppf.utils.collections.AbstractCollectionMap"[C];
	"org.jppf.utils.collections.AbstractCollectionMap.CollectionMapIterator";
	"org.jppf.utils.collections.AbstractCollectionMap.CollectionMapIterator"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.AbstractCollectionConcurrentMap"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.AbstractCollectionHashtable"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.AbstractCollectionSortedMap"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.ArrayListHashMap"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.EnumSetEnumMap"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.SetHashMap"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.utils.collections.SetIdentityMap"->"org.jppf.utils.collections.AbstractCollectionMap"[A];
	"org.jppf.client.concurrent.JobConfigurationImpl";
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.client.concurrent.AbstractJobConfiguration"[C];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.client.concurrent.AbstractJobConfiguration"[A];
	"org.jppf.client.concurrent.JPPFTaskFuture";
	"org.jppf.client.concurrent.AbstractJPPFFuture";
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.client.concurrent.AbstractJPPFFuture"[C];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.client.concurrent.AbstractJPPFFuture"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTaskCallback";
	"org.jppf.client.taskwrapper.JPPFTaskCallback";
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTaskCallback"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[C];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask";
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[A];
	"org.jppf.client.concurrent.__TaskConfiguration"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTaskCallback"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[A];
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler";
	"org.jppf.client.monitoring.topology.AbstractRefreshHandler";
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"->"org.jppf.client.monitoring.topology.AbstractRefreshHandler"[C];
	"org.jppf.client.monitoring.topology.NodeRefreshHandler";
	"org.jppf.client.monitoring.topology.NodeRefreshHandler"->"org.jppf.client.monitoring.topology.AbstractRefreshHandler"[C];
	"sample.test.deadlock.JobStreamImpl";
	"org.jppf.client.utils.AbstractJPPFJobStream";
	"sample.test.deadlock.JobStreamImpl"->"org.jppf.client.utils.AbstractJPPFJobStream"[C];
	"sample.test.deadlock.DeadlockRunner"->"org.jppf.client.utils.AbstractJPPFJobStream"[A];
	"sample.test.deadlock.JobStreamImpl"->"org.jppf.client.utils.AbstractJPPFJobStream"[A];
	"org.jppf.classloader.ResourceProviderImpl";
	"org.jppf.classloader.ResourceProviderImpl"->"org.jppf.classloader.AbstractResourceProvider"[C];
	"org.jppf.classloader.ResourceProvider.Factory";
	"org.jppf.classloader.ResourceProvider.Factory"->"org.jppf.classloader.AbstractResourceProvider"[A];
	"org.jppf.classloader.ResourceProviderImpl"->"org.jppf.classloader.AbstractResourceProvider"[A];
	"org.jppf.client.taskwrapper.PrivilegedConstructorAction";
	"org.jppf.client.taskwrapper.AbstractPrivilegedAction";
	"org.jppf.client.taskwrapper.PrivilegedConstructorAction"->"org.jppf.client.taskwrapper.AbstractPrivilegedAction"[C];
	"org.jppf.client.taskwrapper.PrivilegedMethodAction";
	"org.jppf.client.taskwrapper.PrivilegedMethodAction"->"org.jppf.client.taskwrapper.AbstractPrivilegedAction"[C];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper";
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.client.taskwrapper.AbstractPrivilegedAction"[A];
	"org.jppf.client.taskwrapper.PojoTaskWrapper";
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.client.taskwrapper.AbstractPrivilegedAction"[A];
	"org.jppf.client.taskwrapper.PrivilegedConstructorAction"->"org.jppf.client.taskwrapper.AbstractPrivilegedAction"[A];
	"org.jppf.client.taskwrapper.PrivilegedMethodAction"->"org.jppf.client.taskwrapper.AbstractPrivilegedAction"[A];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[C];
	"org.jppf.client.taskwrapper.CallableTaskWrapper";
	"org.jppf.client.taskwrapper.CallableTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[C];
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[C];
	"org.jppf.client.taskwrapper.RunnableTaskWrapper";
	"org.jppf.client.taskwrapper.RunnableTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[C];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[A];
	"org.jppf.client.taskwrapper.CallableTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[A];
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[A];
	"org.jppf.client.taskwrapper.RunnableTaskWrapper"->"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"[A];
	"org.jppf.net.IPv4AddressPattern";
	"org.jppf.net.AbstractIPAddressPattern";
	"org.jppf.net.IPv4AddressPattern"->"org.jppf.net.AbstractIPAddressPattern"[C];
	"org.jppf.net.IPv6AddressPattern";
	"org.jppf.net.IPv6AddressPattern"->"org.jppf.net.AbstractIPAddressPattern"[C];
	"org.jppf.comm.discovery.IPFilter";
	"org.jppf.comm.discovery.IPFilter"->"org.jppf.net.AbstractIPAddressPattern"[A];
	"org.jppf.net.IPv4AddressPattern"->"org.jppf.net.AbstractIPAddressPattern"[A];
	"org.jppf.net.IPv6AddressPattern"->"org.jppf.net.AbstractIPAddressPattern"[A];
	"org.jppf.comm.recovery.ClientConnection";
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.recovery.AbstractRecoveryConnection"[C];
	"org.jppf.comm.recovery.ServerConnection";
	"org.jppf.comm.recovery.ServerConnection"->"org.jppf.comm.recovery.AbstractRecoveryConnection"[C];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.recovery.AbstractRecoveryConnection"[A];
	"org.jppf.comm.recovery.ServerConnection"->"org.jppf.comm.recovery.AbstractRecoveryConnection"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.comm.recovery.AbstractRecoveryConnection"[A];
	"org.jppf.comm.socket.SocketInitializerImpl";
	"org.jppf.comm.socket.SocketInitializerImpl"->"org.jppf.comm.socket.AbstractSocketInitializer"[C];
	"org.jppf.comm.socket.SocketInitializerImpl"->"org.jppf.comm.socket.AbstractSocketInitializer"[A];
	"org.jppf.comm.socket.BootstrapSocketClient";
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.comm.socket.AbstractSocketWrapper"[C];
	"org.jppf.comm.socket.SocketClient";
	"org.jppf.comm.socket.SocketClient"->"org.jppf.comm.socket.AbstractSocketWrapper"[C];
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.comm.socket.AbstractSocketWrapper"[A];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.comm.socket.AbstractSocketWrapper"[A];
	"test.socket.SocketPerformance.Client";
	"test.socket.SocketPerformance.Client"->"org.jppf.comm.socket.AbstractSocketWrapper"[A];
	"org.jppf.doc.JPPFDirFilter";
	"org.jppf.doc.AbstractFileFilter";
	"org.jppf.doc.JPPFDirFilter"->"org.jppf.doc.AbstractFileFilter"[C];
	"org.jppf.doc.JPPFFileFilter";
	"org.jppf.doc.JPPFFileFilter"->"org.jppf.doc.AbstractFileFilter"[C];
	"org.jppf.doc.JPPFDirFilter"->"org.jppf.doc.AbstractFileFilter"[A];
	"org.jppf.doc.JPPFFileFilter"->"org.jppf.doc.AbstractFileFilter"[A];
	"org.jppf.execute.ThreadManagerForkJoin"->"org.jppf.execute.AbstractThreadManager"[C];
	"org.jppf.execute.ThreadManagerThreadPool";
	"org.jppf.execute.ThreadManagerThreadPool"->"org.jppf.execute.AbstractThreadManager"[C];
	"org.jppf.execute.ThreadManagerForkJoin"->"org.jppf.execute.AbstractThreadManager"[A];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.AbstractThreadManager"[A];
	"org.jppf.execute.ThreadManagerThreadPool"->"org.jppf.execute.AbstractThreadManager"[A];
	"org.jppf.io.FileDataLocation";
	"org.jppf.io.FileDataLocation"->"org.jppf.io.AbstractDataLocation"[C];
	"org.jppf.io.MultipleBuffersLocation";
	"org.jppf.io.MultipleBuffersLocation"->"org.jppf.io.AbstractDataLocation"[C];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.AbstractDataLocation"[A];
	"org.jppf.io.MultipleBuffersLocation"->"org.jppf.io.AbstractDataLocation"[A];
	"org.jppf.io.BoundedByteArrayPool";
	"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue";
	"org.jppf.io.BoundedByteArrayPool"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[C];
	"org.jppf.io.BoundedByteArrayPool"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.io.FileDataLocation"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.io.SocketWrapperInputSource"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.io.SocketWrapperOutputDestination"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.io.StreamInputSource"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.io.StreamOutputDestination"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.serialization.SerializationUtils";
	"org.jppf.serialization.SerializationUtils"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.utils.streams.MultipleBuffersOutputStream";
	"org.jppf.utils.streams.MultipleBuffersOutputStream"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.utils.streams.StreamUtils";
	"org.jppf.utils.streams.StreamUtils"->"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"[A];
	"org.jppf.load.balancer.impl.AbstractAutoTunedBundler";
	"org.jppf.load.balancer.impl.AbstractAutoTunedBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[C];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler";
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[C];
	"org.jppf.load.balancer.impl.AbstractRLBundler";
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[C];
	"org.jppf.load.balancer.impl.AbstractAutoTunedBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[A];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[A];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[A];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler";
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.AbstractAdaptiveBundler"[A];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.AbstractBundler"[C];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.AbstractBundler"[C];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.AbstractBundler"[C];
	"org.jppf.load.balancer.impl.FixedSizeBundler";
	"org.jppf.load.balancer.impl.FixedSizeBundler"->"org.jppf.load.balancer.AbstractBundler"[C];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.AbstractBundler"[A];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.AbstractBundler"[A];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.AbstractBundler"[A];
	"org.jppf.load.balancer.impl.FixedSizeBundler"->"org.jppf.load.balancer.AbstractBundler"[A];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.impl.AbstractAutoTunedBundler"[C];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.impl.AbstractAutoTunedBundler"[A];
	"org.jppf.load.balancer.impl.AnnealingTuneProfile";
	"org.jppf.load.balancer.impl.AnnealingTuneProfile"->"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"[C];
	"org.jppf.load.balancer.impl.ProportionalTuneProfile";
	"org.jppf.load.balancer.impl.ProportionalTuneProfile"->"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"[C];
	"org.jppf.load.balancer.impl.RLProfile";
	"org.jppf.load.balancer.impl.RLProfile"->"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"[C];
	"org.jppf.load.balancer.impl.AnnealingTuneProfile"->"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"[A];
	"org.jppf.load.balancer.impl.ProportionalTuneProfile"->"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"[A];
	"org.jppf.load.balancer.impl.RLProfile"->"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"[A];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"[C];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"[A];
	"org.jppf.load.balancer.impl.ProportionalBundler"->"org.jppf.load.balancer.impl.AbstractProportionalBundler"[C];
	"org.jppf.load.balancer.impl.ProportionalBundler"->"org.jppf.load.balancer.impl.AbstractProportionalBundler"[A];
	"org.jppf.load.balancer.impl.RLBundler"->"org.jppf.load.balancer.impl.AbstractRLBundler"[C];
	"org.jppf.load.balancer.impl.RLBundler"->"org.jppf.load.balancer.impl.AbstractRLBundler"[A];
	"org.jppf.location.BufferListLocation";
	"org.jppf.location.BufferListLocation"->"org.jppf.location.AbstractLocation"[C];
	"org.jppf.location.FileLocation";
	"org.jppf.location.FileLocation"->"org.jppf.location.AbstractLocation"[C];
	"org.jppf.location.MemoryLocation";
	"org.jppf.location.MemoryLocation"->"org.jppf.location.AbstractLocation"[C];
	"org.jppf.location.URLLocation";
	"org.jppf.location.URLLocation"->"org.jppf.location.AbstractLocation"[C];
	"org.jppf.location.BufferListLocation"->"org.jppf.location.AbstractLocation"[A];
	"org.jppf.location.FileLocation"->"org.jppf.location.AbstractLocation"[A];
	"org.jppf.location.MemoryLocation"->"org.jppf.location.AbstractLocation"[A];
	"org.jppf.location.URLLocation"->"org.jppf.location.AbstractLocation"[A];
	"org.jppf.management.JMXMPServer";
	"org.jppf.management.JMXMPServer"->"org.jppf.management.AbstractJMXServer"[C];
	"org.jppf.management.JMXMPServer"->"org.jppf.management.AbstractJMXServer"[A];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"[C];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"[C];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"[A];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"[A];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter";
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.AbstractThreadDumpWriter"[C];
	"org.jppf.management.diagnostics.TextThreadDumpWriter";
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.AbstractThreadDumpWriter"[C];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.AbstractThreadDumpWriter"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.AbstractThreadDumpWriter"[A];
	"org.jppf.nio.AbstractLocalChannelWrapper";
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.nio.AbstractChannelWrapper"[C];
	"org.jppf.nio.SelectionKeyWrapper";
	"org.jppf.nio.SelectionKeyWrapper"->"org.jppf.nio.AbstractChannelWrapper"[C];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.nio.AbstractChannelWrapper"[A];
	"org.jppf.nio.PlainNioObject";
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.AbstractChannelWrapper"[A];
	"org.jppf.nio.SelectionKeyWrapper"->"org.jppf.nio.AbstractChannelWrapper"[A];
	"org.jppf.server.nio.client.CompletionListener";
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.nio.AbstractChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState";
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.nio.AbstractChannelWrapper"[A];
	"org.jppf.nio.SimpleNioContext";
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.AbstractNioContext"[C];
	"org.jppf.server.nio.client.ClientContext";
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.AbstractNioContext"[C];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.nio.AbstractNioContext"[C];
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.classloader.LocalClassLoaderChannel";
	"org.jppf.classloader.LocalClassLoaderChannel"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher";
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.debug.ServerDebug"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState";
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer";
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.IdleProviderState";
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState";
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState";
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState";
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState";
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState";
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState";
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState";
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerState";
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState";
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState";
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState";
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState";
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState";
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState";
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.nodeserver.NodeContextFuture";
	"org.jppf.server.nio.nodeserver.NodeContextFuture"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState";
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState";
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.nio.AbstractNioContext"[A];
	"org.jppf.nio.BaseNioMessage";
	"org.jppf.nio.BaseNioMessage"->"org.jppf.nio.AbstractNioMessage"[C];
	"org.jppf.server.nio.AbstractTaskBundleMessage";
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.nio.AbstractNioMessage"[C];
	"org.jppf.nio.BaseNioMessage"->"org.jppf.nio.AbstractNioMessage"[A];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.nio.AbstractNioMessage"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext";
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.AbstractNioMessage"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.AbstractNioMessage"[A];
	"org.jppf.server.node.local.JPPFLocalContainer";
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.nio.AbstractNioMessage"[A];
	"org.jppf.server.node.local.LocalNodeIO";
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.nio.AbstractNioMessage"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.AbstractNioObject"[C];
	"org.jppf.nio.SSLNioObject";
	"org.jppf.nio.SSLNioObject"->"org.jppf.nio.AbstractNioObject"[C];
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.AbstractNioObject"[A];
	"org.jppf.nio.SSLNioObject"->"org.jppf.nio.AbstractNioObject"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer";
	"org.jppf.nio.NioServer";
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioServer"[C];
	"org.jppf.server.nio.classloader.ClassNioServer";
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.nio.NioServer"[C];
	"org.jppf.server.nio.client.ClientNioServer";
	"org.jppf.server.nio.client.ClientNioServer"->"org.jppf.nio.NioServer"[C];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.nio.NioServer"[C];
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.nio.NioServer"[A];
	"org.jppf.nio.NioServerFactory";
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioServer"[A];
	"org.jppf.nio.StateTransitionManager";
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.NioServer"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioServer"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.nio.NioServer"[A];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.nio.NioServer"[A];
	"org.jppf.server.nio.client.ClientNioServer"->"org.jppf.nio.NioServer"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.nio.NioServer"[A];
	"org.jppf.server.nio.acceptor.AcceptorServerFactory";
	"org.jppf.server.nio.acceptor.AcceptorServerFactory"->"org.jppf.nio.NioServerFactory"[C];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory";
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.nio.NioServerFactory"[C];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory";
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.nio.NioServerFactory"[C];
	"org.jppf.server.nio.client.ClientServerFactory";
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.nio.NioServerFactory"[C];
	"org.jppf.server.nio.nodeserver.NodeServerFactory";
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.nio.NioServerFactory"[C];
	"org.jppf.nio.NioServer"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.nio.StateTransitionTask";
	"org.jppf.nio.StateTransitionTask"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.acceptor.AcceptorServerFactory"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.nio.NioServerFactory"[A];
	"org.jppf.server.nio.acceptor.AcceptorServerState";
	"org.jppf.nio.NioState";
	"org.jppf.server.nio.acceptor.AcceptorServerState"->"org.jppf.nio.NioState"[C];
	"org.jppf.server.nio.classloader.client.ClientClassServerState";
	"org.jppf.server.nio.classloader.client.ClientClassServerState"->"org.jppf.nio.NioState"[C];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.nio.NioState"[C];
	"org.jppf.server.nio.client.ClientServerState";
	"org.jppf.server.nio.client.ClientServerState"->"org.jppf.nio.NioState"[C];
	"org.jppf.server.nio.nodeserver.NodeServerState";
	"org.jppf.server.nio.nodeserver.NodeServerState"->"org.jppf.nio.NioState"[C];
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioState"[A];
	"org.jppf.nio.StateTransitionTask"->"org.jppf.nio.NioState"[A];
	"org.jppf.server.nio.acceptor.AcceptorServerState"->"org.jppf.nio.NioState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerState"->"org.jppf.nio.NioState"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.nio.NioState"[A];
	"org.jppf.server.nio.client.ClientServerState"->"org.jppf.nio.NioState"[A];
	"org.jppf.server.nio.nodeserver.NodeServerState"->"org.jppf.nio.NioState"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext";
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.SimpleNioContext"[C];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.SimpleNioContext"[C];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.SimpleNioContext"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.SimpleNioContext"[A];
	"org.jppf.node.policy.BetweenEE";
	"org.jppf.node.policy.BetweenEE"->"org.jppf.node.policy.BetweenPolicy"[C];
	"org.jppf.node.policy.BetweenEI";
	"org.jppf.node.policy.BetweenEI"->"org.jppf.node.policy.BetweenPolicy"[C];
	"org.jppf.node.policy.BetweenIE";
	"org.jppf.node.policy.BetweenIE"->"org.jppf.node.policy.BetweenPolicy"[C];
	"org.jppf.node.policy.BetweenII";
	"org.jppf.node.policy.BetweenII"->"org.jppf.node.policy.BetweenPolicy"[C];
	"org.jppf.node.policy.BetweenEE"->"org.jppf.node.policy.BetweenPolicy"[A];
	"org.jppf.node.policy.BetweenEI"->"org.jppf.node.policy.BetweenPolicy"[A];
	"org.jppf.node.policy.BetweenIE"->"org.jppf.node.policy.BetweenPolicy"[A];
	"org.jppf.node.policy.BetweenII"->"org.jppf.node.policy.BetweenPolicy"[A];
	"sample.dist.matrix.MyCustomPolicy";
	"sample.dist.matrix.MyCustomPolicy"->"org.jppf.node.policy.CustomPolicy"[C];
	"test.org.jppf.node.policy.TestExecutionPolicy.TestCustomPolicy";
	"test.org.jppf.node.policy.TestExecutionPolicy.TestCustomPolicy"->"org.jppf.node.policy.CustomPolicy"[C];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.CustomPolicy"[A];
	"sample.dist.matrix.MyCustomPolicy"->"org.jppf.node.policy.CustomPolicy"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy.TestCustomPolicy"->"org.jppf.node.policy.CustomPolicy"[A];
	"org.jppf.node.policy.ExecutionPolicy.AndRule";
	"org.jppf.node.policy.ExecutionPolicy.AndRule"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[C];
	"org.jppf.node.policy.ExecutionPolicy.OrRule";
	"org.jppf.node.policy.ExecutionPolicy.OrRule"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[C];
	"org.jppf.node.policy.ExecutionPolicy.XorRule";
	"org.jppf.node.policy.ExecutionPolicy.XorRule"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[C];
	"org.jppf.node.policy.Preference";
	"org.jppf.node.policy.Preference"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[C];
	"org.jppf.node.policy.ExecutionPolicy.AndRule"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[A];
	"org.jppf.node.policy.ExecutionPolicy.OrRule"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[A];
	"org.jppf.node.policy.ExecutionPolicy.XorRule"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[A];
	"org.jppf.node.policy.Preference"->"org.jppf.node.policy.ExecutionPolicy.LogicalRule"[A];
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.protocol.AbstractCommonSLA"[C];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.AbstractCommonSLA"[C];
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.protocol.AbstractCommonSLA"[A];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.AbstractCommonSLA"[A];
	"test.run.jboss.JBossTask";
	"test.run.jboss.JBossTask"->"org.jppf.node.protocol.CommandLineTask"[C];
	"test.run.jboss.JBossTask"->"org.jppf.node.protocol.CommandLineTask"[A];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.AbstractProcessLauncher"[C];
	"org.jppf.node.provisioning.SlaveNodeLauncher";
	"org.jppf.node.provisioning.SlaveNodeLauncher"->"org.jppf.process.AbstractProcessLauncher"[C];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.AbstractProcessLauncher"[A];
	"org.jppf.process.ProcessLauncherEvent";
	"org.jppf.process.ProcessLauncherEvent"->"org.jppf.process.AbstractProcessLauncher"[A];
	"org.jppf.node.provisioning.SlaveNodeLauncher"->"org.jppf.process.AbstractProcessLauncher"[A];
	"org.jppf.scripting.ScriptRunnerPool";
	"org.jppf.scripting.ScriptRunnerPool"->"org.jppf.utils.pooling.AbstractObjectPoolQueue"[C];
	"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"->"org.jppf.utils.pooling.AbstractObjectPoolQueue"[C];
	"org.jppf.utils.pooling.DirectBufferPoolQueue";
	"org.jppf.utils.pooling.DirectBufferPoolQueue"->"org.jppf.utils.pooling.AbstractObjectPoolQueue"[C];
	"org.jppf.scripting.ScriptRunnerPool"->"org.jppf.utils.pooling.AbstractObjectPoolQueue"[A];
	"org.jppf.utils.pooling.AbstractBoundedObjectPoolQueue"->"org.jppf.utils.pooling.AbstractObjectPoolQueue"[A];
	"org.jppf.utils.pooling.DirectBufferPoolQueue"->"org.jppf.utils.pooling.AbstractObjectPoolQueue"[A];
	"org.jppf.utils.collections.CopyOnWriteListConcurrentMap";
	"org.jppf.utils.collections.CopyOnWriteListConcurrentMap"->"org.jppf.utils.collections.AbstractCollectionConcurrentMap"[C];
	"org.jppf.utils.collections.CopyOnWriteListConcurrentMap"->"org.jppf.utils.collections.AbstractCollectionConcurrentMap"[A];
	"org.jppf.utils.collections.VectorHashtable";
	"org.jppf.utils.collections.VectorHashtable"->"org.jppf.utils.collections.AbstractCollectionHashtable"[C];
	"org.jppf.utils.collections.VectorHashtable"->"org.jppf.utils.collections.AbstractCollectionHashtable"[A];
	"org.jppf.utils.configuration.SubstitutionsHandler";
	"org.jppf.utils.configuration.SubstitutionsHandler.PropertyProvider";
	"org.jppf.utils.configuration.SubstitutionsHandler"->"org.jppf.utils.configuration.SubstitutionsHandler.PropertyProvider"[A];
	"org.jppf.utils.stats.CumulativeSnapshot";
	"org.jppf.utils.stats.CumulativeSnapshot"->"org.jppf.utils.stats.AbstractJPPFSnapshot"[C];
	"org.jppf.utils.stats.NonCumulativeSnapshot";
	"org.jppf.utils.stats.NonCumulativeSnapshot"->"org.jppf.utils.stats.AbstractJPPFSnapshot"[C];
	"org.jppf.utils.stats.CumulativeSnapshot"->"org.jppf.utils.stats.AbstractJPPFSnapshot"[A];
	"org.jppf.utils.stats.NonCumulativeSnapshot"->"org.jppf.utils.stats.AbstractJPPFSnapshot"[A];
	"org.jppf.utils.stats.JPPFSnapshot.LabelExcludingFilter";
	"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter";
	"org.jppf.utils.stats.JPPFSnapshot.LabelExcludingFilter"->"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"[C];
	"org.jppf.utils.stats.JPPFSnapshot.LabelIncludingFilter";
	"org.jppf.utils.stats.JPPFSnapshot.LabelIncludingFilter"->"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"[C];
	"org.jppf.utils.stats.JPPFSnapshot.LabelExcludingFilter"->"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"[A];
	"org.jppf.utils.stats.JPPFSnapshot.LabelIncludingFilter"->"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"[A];
	"sample.dist.matrix.MatrixTask";
	"sample.BaseDemoTask";
	"sample.dist.matrix.MatrixTask"->"sample.BaseDemoTask"[C];
	"sample.dist.matrix.MatrixTask"->"sample.BaseDemoTask"[A];
	"sample.dist.commandline.ListDirectoryTask";
	"sample.dist.commandline.ListDirectoryTask"->"sample.dist.commandline.CommandLineTaskEx"[C];
	"sample.dist.commandline.TestTask";
	"sample.dist.commandline.TestTask"->"sample.dist.commandline.CommandLineTaskEx"[C];
	"sample.dist.commandline.ListDirectoryTask"->"sample.dist.commandline.CommandLineTaskEx"[A];
	"sample.dist.commandline.TestTask"->"sample.dist.commandline.CommandLineTaskEx"[A];
	"sample.dist.taskcommunication.MyTask1";
	"sample.dist.taskcommunication.AbstractMyTask";
	"sample.dist.taskcommunication.MyTask1"->"sample.dist.taskcommunication.AbstractMyTask"[C];
	"sample.dist.taskcommunication.MyTask2";
	"sample.dist.taskcommunication.MyTask2"->"sample.dist.taskcommunication.AbstractMyTask"[C];
	"sample.dist.taskcommunication.MyTask1"->"sample.dist.taskcommunication.AbstractMyTask"[A];
	"sample.dist.taskcommunication.MyTask2"->"sample.dist.taskcommunication.AbstractMyTask"[A];
	"sample.test.executor.MyTask";
	"sample.test.executor.JPPFCallableTask";
	"sample.test.executor.MyTask"->"sample.test.executor.JPPFCallableTask"[C];
	"sample.test.executor.MyTask"->"sample.test.executor.JPPFCallableTask"[A];
	"org.jppf.classloader.JPPFClassLoader";
	"org.jppf.classloader.AbstractJPPFClassLoader";
	"org.jppf.classloader.JPPFClassLoader"->"org.jppf.classloader.AbstractJPPFClassLoader"[C];
	"org.jppf.classloader.JPPFLocalClassLoader";
	"org.jppf.classloader.JPPFLocalClassLoader"->"org.jppf.classloader.AbstractJPPFClassLoader"[C];
	"test.localexecution.MyTask";
	"test.localexecution.MyTask"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"test.run.jboss.JBossTask"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.classloader.ClassLoaderEvent";
	"org.jppf.classloader.ClassLoaderEvent"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.classloader.JPPFClassLoader"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.classloader.JPPFLocalClassLoader"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.node.event.JobClassPathHandler";
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.node.event.NodeLifeCycleEvent";
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.AbstractClassLoaderManager";
	"org.jppf.server.node.AbstractClassLoaderManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.AbstractCommonNode";
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.JPPFContainer";
	"org.jppf.server.node.JPPFContainer"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.server.node.local.LocalClassLoaderManager";
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle";
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[C];
	"test.localexecution.MyTask"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"test.run.jboss.JBossTask"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"org.jppf.server.node.JPPFContainer"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"org.jppf.server.node.remote.RemoteNodeIO";
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"[A];
	"org.jppf.jca.spi.JPPFManagedConnection";
	"org.jppf.jca.spi.JPPFManagedConnection"->"org.jppf.jca.util.JPPFAccessorImpl"[C];
	"org.jppf.jca.spi.JPPFManagedConnectionFactory";
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.jca.util.JPPFAccessorImpl"[C];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.util.JPPFAccessorImpl"[A];
	"org.jppf.jca.spi.JPPFManagedConnection"->"org.jppf.jca.util.JPPFAccessorImpl"[A];
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.jca.util.JPPFAccessorImpl"[A];
	"org.jppf.classloader.LocalClassLoaderConnection";
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.AbstractClassLoaderConnection"[C];
	"org.jppf.classloader.RemoteClassLoaderConnection";
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.classloader.AbstractClassLoaderConnection"[C];
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.AbstractClassLoaderConnection"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.classloader.AbstractClassLoaderConnection"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.node.AbstractNodeConnection"[C];
	"org.jppf.server.node.local.LocalNodeConnection";
	"org.jppf.server.node.local.LocalNodeConnection"->"org.jppf.node.AbstractNodeConnection"[C];
	"org.jppf.server.node.remote.RemoteNodeConnection";
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.node.AbstractNodeConnection"[C];
	"org.jppf.server.peer.RemotePeerConnection";
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.node.AbstractNodeConnection"[C];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.node.AbstractNodeConnection"[A];
	"org.jppf.server.node.local.LocalNodeConnection"->"org.jppf.node.AbstractNodeConnection"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.node.AbstractNodeConnection"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.node.AbstractNodeConnection"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker";
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.node.AbstractNodeConnection"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.node.AbstractNodeConnection"[A];
	"org.jppf.classloader.LocalResourceRequest"->"org.jppf.classloader.AbstractResourceRequest"[C];
	"org.jppf.classloader.RemoteResourceRequest";
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.classloader.AbstractResourceRequest"[C];
	"org.jppf.classloader.LocalResourceRequest"->"org.jppf.classloader.AbstractResourceRequest"[A];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.classloader.AbstractResourceRequest"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.node.AbstractNode"[C];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.node.AbstractNode"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.node.AbstractNode"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.node.AbstractNode"[A];
	"org.jppf.server.node.remote.RemoteClassLoaderManager";
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.node.AbstractNode"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.node.AbstractNode"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.node.AbstractNode"[A];
	"org.jppf.server.node.local.JPPFLocalNode";
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.JPPFNode"[C];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.server.node.JPPFNode"[C];
	"org.jppf.node.NodeRunner"->"org.jppf.server.node.JPPFNode"[A];
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"->"org.jppf.server.node.JPPFNode"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.server.node.JPPFNode"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.server.node.JPPFNode"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.server.node.JPPFNode"[A];
	"org.jppf.node.screensaver.impl.NodeState";
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.screensaver.NodeIntegrationAdapter"[C];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.screensaver.NodeIntegrationAdapter"[A];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.AbstractClassLoaderManager"[C];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.AbstractClassLoaderManager"[C];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.server.node.AbstractClassLoaderManager"[A];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.AbstractClassLoaderManager"[A];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.AbstractClassLoaderManager"[A];
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.server.node.JPPFContainer"[C];
	"org.jppf.server.node.remote.JPPFRemoteContainer";
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.server.node.JPPFContainer"[C];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask";
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.JPPFContainer"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.AbstractCommonNode"[C];
	"org.jppf.server.peer.PeerNode"->"org.jppf.server.node.AbstractCommonNode"[C];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.management.JPPFNodeMaintenance"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.server.peer.PeerDiscoveryThread"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.server.node.AbstractCommonNode"[A];
	"org.jppf.server.node.local.LocalNodeConnectionChecker";
	"org.jppf.server.node.local.LocalNodeConnectionChecker"->"org.jppf.server.node.AbstractNodeConnectionChecker"[C];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.server.node.AbstractNodeConnectionChecker"[C];
	"org.jppf.server.node.local.LocalNodeConnectionChecker"->"org.jppf.server.node.AbstractNodeConnectionChecker"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.server.node.AbstractNodeConnectionChecker"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread"->"org.jppf.server.node.AbstractNodeConnectionChecker"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.AbstractNodeIO"[C];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.AbstractNodeIO"[C];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.AbstractNodeIO"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.AbstractNodeIO"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[C];
	"org.jppf.server.nio.nodeserver.RemoteNodeContext";
	"org.jppf.server.nio.nodeserver.RemoteNodeContext"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[C];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[A];
	"org.jppf.server.protocol.AbstractServerJobBase";
	"org.jppf.server.protocol.AbstractServerJob";
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.AbstractServerJob"[C];
	"org.jppf.server.job.ChannelJobPair";
	"org.jppf.server.job.ChannelJobPair"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.job.JobEventTask";
	"org.jppf.server.job.JobEventTask"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.nio.nodeserver.NodeContextFuture"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener";
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode";
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.queue.JobExpirationAction";
	"org.jppf.server.queue.JobExpirationAction"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.queue.JobPriorityComparator";
	"org.jppf.server.queue.JobPriorityComparator"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.queue.JobScheduleAction";
	"org.jppf.server.queue.JobScheduleAction"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.queue.ScheduleManager";
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.server.protocol.AbstractServerJob"[A];
	"org.jppf.server.nio.client.ClientMessage";
	"org.jppf.server.nio.client.ClientMessage"->"org.jppf.server.nio.AbstractTaskBundleMessage"[C];
	"org.jppf.server.nio.nodeserver.LocalNodeMessage";
	"org.jppf.server.nio.nodeserver.LocalNodeMessage"->"org.jppf.server.nio.AbstractTaskBundleMessage"[C];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage";
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.server.nio.AbstractTaskBundleMessage"[C];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.AbstractTaskBundleMessage"[A];
	"org.jppf.server.nio.client.ClientMessage"->"org.jppf.server.nio.AbstractTaskBundleMessage"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.server.nio.AbstractTaskBundleMessage"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeMessage"->"org.jppf.server.nio.AbstractTaskBundleMessage"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeContext"->"org.jppf.server.nio.AbstractTaskBundleMessage"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.server.nio.AbstractTaskBundleMessage"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorServerState"[C];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorServerState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassContext";
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.AbstractClassContext"[C];
	"org.jppf.server.nio.classloader.node.NodeClassContext";
	"org.jppf.server.nio.classloader.node.NodeClassContext"->"org.jppf.server.nio.classloader.AbstractClassContext"[C];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.NodeClassContext"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState";
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.AbstractClassContext"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.ClassNioServer"[C];
	"org.jppf.server.nio.classloader.node.NodeClassNioServer"->"org.jppf.server.nio.classloader.ClassNioServer"[C];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.NodeClassNioServer"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.peer.AbstractSocketChannelHandler";
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.server.nio.classloader.ClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[C];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassServerState"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[C];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[C];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[C];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[C];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[C];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassServerState"[A];
	"org.jppf.server.nio.client.IdleState";
	"org.jppf.server.nio.client.IdleState"->"org.jppf.server.nio.client.ClientServerState"[C];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientServerState"[C];
	"org.jppf.server.nio.client.SendingResultsState";
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientServerState"[C];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientServerState"[C];
	"org.jppf.server.nio.client.WaitingJobState";
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientServerState"[C];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.server.nio.client.ClientServerState"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientServerState"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientServerState"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientServerState"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientServerState"[A];
	"org.jppf.server.nio.nodeserver.IdleState";
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[C];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[C];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[C];
	"org.jppf.server.nio.nodeserver.WaitingResultsState";
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeServerState"[C];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[C];
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[A];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeServerState"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeServerState"[A];
	"org.jppf.test.scenario.classloading.Runner";
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner";
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner";
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner";
	"org.jppf.test.scenario.nodesmix.NodeMixRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.offline.OfflineNodeRunner";
	"org.jppf.test.scenario.offline.OfflineNodeRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.resubmit.ResubmitRunner";
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.s1.S1Runner";
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.s2.S2Runner";
	"org.jppf.test.scenario.s2.S2Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.s3.S3Runner";
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[C];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner.MyConnectionListener";
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner.MyConnectionListener"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.offline.OfflineNodeRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.s2.S2Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.test.scenario.AbstractScenarioRunner"[A];
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber";
	"org.jppf.test.setup.JmxAwareCallable";
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"->"org.jppf.test.setup.JmxAwareCallable"[C];
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"->"org.jppf.test.setup.JmxAwareCallable"[A];
	"test.org.jppf.test.runner.TextResultRenderer";
	"test.org.jppf.test.runner.TextResultRenderer"->"test.org.jppf.test.runner.AbstractTestResultRenderer"[C];
	"test.org.jppf.test.runner.TextResultRenderer"->"test.org.jppf.test.runner.AbstractTestResultRenderer"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean";
	"test.org.jppf.management.forwarding.AbstractTestJPPFNodeForwardingMBean";
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"test.org.jppf.management.forwarding.AbstractTestJPPFNodeForwardingMBean"[C];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2";
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"test.org.jppf.management.forwarding.AbstractTestJPPFNodeForwardingMBean"[C];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"test.org.jppf.management.forwarding.AbstractTestJPPFNodeForwardingMBean"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"test.org.jppf.management.forwarding.AbstractTestJPPFNodeForwardingMBean"[A];
	"org.jppf.ui.options.event.ValueChangeEvent";
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.ui.options.event.ValueChangeEvent"[A];
	"org.jppf.ui.utils.GuiUtils";
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.charts.AreaChartHandler.CategorySeriesLabelGeneratorInvocationHandler";
	"org.jppf.ui.monitoring.charts.AreaChartHandler.CategorySeriesLabelGeneratorInvocationHandler"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler.LegendLabelGeneratorInvocationHandler";
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler.LegendLabelGeneratorInvocationHandler"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher";
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.ConsoleLoader";
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.monitoring.UILauncher";
	"org.jppf.ui.monitoring.UILauncher"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.ButtonOption"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.docking.AbstractDockingAction"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.FillerOption"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.LabelOption"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.ListOption"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.options.TextAreaOption"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.ui.utils.JPPFSplash";
	"org.jppf.ui.utils.JPPFSplash"->"org.jppf.ui.utils.GuiUtils"[A];
	"test.console.EmbeddedConsole";
	"test.console.EmbeddedConsole"->"org.jppf.ui.utils.GuiUtils"[A];
	"org.jppf.utils.LocalizationUtils";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.ui.monitoring.data.Fields";
	"org.jppf.ui.monitoring.data.Fields"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.management.JPPFNodeState.ConnectionState";
	"org.jppf.management.JPPFNodeState.ConnectionState"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.management.JPPFNodeState.ExecutionState";
	"org.jppf.management.JPPFNodeState.ExecutionState"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.utils.stats.JPPFStatisticsHelper";
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.utils.LocalizationUtils"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.actions.ActionsInitializer"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.actions.ActionsInitializer"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.actions.ActionsInitializer"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.actions.ActionsInitializer"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.ButtonOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.ButtonOption"[A];
	"org.jppf.ui.actions.EditorMouseListener.ClipboardAction";
	"org.jppf.ui.actions.EditorMouseListener";
	"org.jppf.ui.actions.EditorMouseListener.ClipboardAction"->"org.jppf.ui.actions.EditorMouseListener"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.ui.actions.EditorMouseListener"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.ui.actions.EditorMouseListener"[A];
	"org.jppf.ui.actions.EditorMouseListener"->"org.jppf.ui.actions.EditorMouseListener.ClipboardAction"[A];
	"org.jppf.ui.treetable.JTreeTable";
	"org.jppf.ui.treetable.JPPFTreeTable"->"org.jppf.ui.treetable.JTreeTable"[C];
	"org.jppf.ui.treetable.JTreeTable.ListToTreeSelectionModelWrapper";
	"org.jppf.ui.treetable.JTreeTable.ListToTreeSelectionModelWrapper"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.treetable.JTreeTable.TreeTableCellEditor"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.actions.JTreeTableActionHandler"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.treetable.JPPFTreeTable"->"org.jppf.ui.treetable.JTreeTable"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.actions.ShowHideColumnsAction"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.actions.ShowHideColumnsAction"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.actions.ShowHideColumnsAction"[A];
	"org.jppf.ui.monitoring.charts.config.PreferencesStorage";
	"org.jppf.ui.monitoring.charts.config.PreferencesStorage"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver";
	"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.job.actions.UpdateMaxNodesAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.job.actions.UpdatePriorityAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.node.actions.ServerShutdownRestartAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.monitoring.UILauncher"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.options.docking.DockToNewViewAction"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.options.event.WindowClosingListener";
	"org.jppf.ui.options.event.WindowClosingListener"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.factory.OptionsHandler"[A];
	"org.jppf.ui.console.JPPFAdminConsole";
	"test.console.EmbeddedConsole"->"org.jppf.ui.console.JPPFAdminConsole"[A];
	"org.jppf.ui.layout.WrapLayout";
	"org.jppf.ui.monitoring.MonitoringPanel"->"org.jppf.ui.layout.WrapLayout"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.AreaChartHandler"[A];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.AreaChartHandler.CategorySeriesLabelGeneratorInvocationHandler"[A];
	"org.jppf.utils.ReflectionHelper";
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.RingChartHandler";
	"org.jppf.ui.monitoring.charts.RingChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler.CategoryItemLabelGeneratorInvocationHandler";
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler.CategoryItemLabelGeneratorInvocationHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.utils.ReflectionHelper"[A];
	"org.jppf.ui.monitoring.charts.config.ChartConfiguration";
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[A];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[A];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[A];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.AreaChartHandler.CategorySeriesLabelGeneratorInvocationHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.config.ChartConfiguration"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler.LegendLabelGeneratorInvocationHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.MonitorTableModel";
	"org.jppf.ui.monitoring.MonitorTableModel"->"org.jppf.ui.monitoring.data.Fields"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.Bar3DChartHandler"[A];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.StackedAreaChartHandler.CategoryItemLabelGeneratorInvocationHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"[A];
	"org.jppf.ui.monitoring.charts.StackedBarSeries3DChartHandler";
	"org.jppf.ui.monitoring.charts.StackedBarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"[C];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"[A];
	"org.jppf.ui.monitoring.charts.StackedBarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"[A];
	"org.jppf.ui.monitoring.data.ConnectionDataHolder";
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.data.ConnectionDataHolder"[A];
	"org.jppf.ui.monitoring.data.NewConnectionTask"->"org.jppf.ui.monitoring.data.ConnectionDataHolder"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.ConnectionDataHolder"[A];
	"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask";
	"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask"->"org.jppf.ui.monitoring.data.ClientHandler"[A];
	"org.jppf.ui.monitoring.charts.ChartType";
	"org.jppf.ui.monitoring.charts.config.ChartConfiguration"->"org.jppf.ui.monitoring.charts.ChartType"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.ChartType"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.PreferencesStorage"[A];
	"org.jppf.ui.monitoring.charts.config.TabConfiguration";
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.TabConfiguration"[A];
	"org.jppf.ui.monitoring.charts.config.PreferencesStorage"->"org.jppf.ui.monitoring.charts.config.TabConfiguration"[A];
	"org.jppf.ui.monitoring.event.StatsHandlerEvent";
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.event.StatsHandlerEvent"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.PlotXYChartHandler"[A];
	"org.jppf.ui.monitoring.charts.RingChartHandler"->"org.jppf.ui.monitoring.charts.Pie3DChartHandler"[C];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.Pie3DChartHandler"[A];
	"org.jppf.ui.monitoring.charts.RingChartHandler"->"org.jppf.ui.monitoring.charts.Pie3DChartHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.RingChartHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.DifferenceChartHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.StackedBarSeries3DChartHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.MeterChartHandler"[A];
	"org.jppf.ui.monitoring.event.StatsHandlerEvent.Type";
	"org.jppf.ui.monitoring.event.StatsHandlerEvent"->"org.jppf.ui.monitoring.event.StatsHandlerEvent.Type"[A];
	"org.jppf.utils.FileUtils";
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.ui.options.xml.OptionDescriptorParser";
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.doc.HtmlDocGenerator";
	"org.jppf.doc.HtmlDocGenerator"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.doc.JPPFFileFilter"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.doc.SamplesPHPReadmeProcessor";
	"org.jppf.doc.SamplesPHPReadmeProcessor"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.libmanagement.Downloader";
	"org.jppf.libmanagement.Downloader"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.node.protocol.ScriptedTask";
	"org.jppf.node.protocol.ScriptedTask"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.ssl.FileStoreSource";
	"org.jppf.ssl.FileStoreSource"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.utils.configuration.ScriptHandler";
	"org.jppf.utils.configuration.ScriptHandler"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.utils.FileReplacer";
	"org.jppf.utils.FileReplacer"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.utils.FileReplacerEx";
	"org.jppf.utils.FileReplacerEx"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator";
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.utils.SchemaValidator";
	"org.jppf.utils.SchemaValidator"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.utils.TexFileSplitter";
	"org.jppf.utils.TexFileSplitter"->"org.jppf.utils.FileUtils"[A];
	"test.filecopy.FileCopyAction"->"org.jppf.utils.FileUtils"[A];
	"test.generic.GenericRunner";
	"test.generic.GenericRunner"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.classloader.resource.SaveResourceAction";
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.utils.FileUtils"[A];
	"test.org.jppf.test.runner.JPPFTestRunner";
	"test.org.jppf.test.runner.JPPFTestRunner"->"org.jppf.utils.FileUtils"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.utils.FileUtils"[A];
	"test.org.jppf.server.protocol.TestLocation";
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.utils.FileUtils"[A];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.PlotXYChartHandler.LegendLabelGeneratorInvocationHandler"[A];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.PlotXYChartHandler.LegendLabelGeneratorInvocationHandler"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver"[A];
	"org.jppf.ui.options.docking.DockingManager";
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor";
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.options.docking.DockingMouseAdapter";
	"org.jppf.ui.options.docking.DockingMouseAdapter"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.options.docking.DockToExistingViewAction"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.options.docking.DockToInitialContainerAction"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.options.docking.DockToNewViewAction"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.options.docking.DockingManager"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.options.event.WindowClosingListener"[A];
	"org.jppf.ui.monitoring.UILauncher"->"org.jppf.ui.options.event.WindowClosingListener"[A];
	"org.jppf.utils.JPPFConfiguration";
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper";
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.monitoring.UILauncher"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.treetable.AbstractTreeCellRenderer"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.utils.JPPFSplash"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.JPPFConfiguration"[A];
	"org.jppf.ui.utils.JPPFSplash.ScrollTask";
	"org.jppf.ui.utils.JPPFSplash.ScrollTask"->"org.jppf.ui.utils.JPPFSplash"[A];
	"org.jppf.ui.options.xml.OptionDescriptor";
	"org.jppf.utils.TypedProperties";
	"org.jppf.ui.options.xml.OptionDescriptor"->"org.jppf.utils.TypedProperties"[C];
	"org.jppf.utils.UnmodifiableTypedProperties";
	"org.jppf.utils.UnmodifiableTypedProperties"->"org.jppf.utils.TypedProperties"[C];
	"org.jppf.test.scenario.ScenarioConfigurationImpl"->"org.jppf.utils.TypedProperties"[C];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.UILauncher"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.options.xml.OptionDescriptor"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.treetable.AbstractTreeCellRenderer"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.utils.JPPFSplash"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.TypedProperties"[A];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.libmanagement.Downloader"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask"[A];
	"org.jppf.load.balancer.LoadBalancingInformation";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.load.balancer.LoadBalancingInformation"[A];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.load.balancer.LoadBalancingInformation"[A];
	"org.jppf.management.__JPPFDriverAdminMBean"->"org.jppf.load.balancer.LoadBalancingInformation"[A];
	"org.jppf.management.JPPFDriverAdmin"->"org.jppf.load.balancer.LoadBalancingInformation"[A];
	"test.org.jppf.io.TestFileDataLocation";
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.load.balancer.LoadBalancingInformation"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean";
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.load.balancer.LoadBalancingInformation"[A];
	"org.jppf.ui.monitoring.diagnostics.Thresholds";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.diagnostics.Thresholds"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.monitoring.diagnostics.Thresholds"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyListenerAdapter"[C];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyListenerAdapter"[C];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyListenerAdapter"[A];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyListenerAdapter"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[A];
	"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask"->"org.jppf.client.monitoring.topology.TopologyDriver"[A];
	"org.jppf.client.monitoring.topology.TopologyManager.StatusListener";
	"org.jppf.client.monitoring.topology.TopologyManager.StatusListener"->"org.jppf.client.monitoring.topology.TopologyManager"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.client.concurrent.JPPFExecutorService";
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.client.debug.Debug"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.client.event.ClientQueueEvent";
	"org.jppf.client.event.ClientQueueEvent"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.JPPFClient"[A];
	"sample.cascading.CascadingTestRunner";
	"sample.cascading.CascadingTestRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.cascading.Task1";
	"sample.cascading.Task1"->"org.jppf.client.JPPFClient"[A];
	"sample.datasize.DataSizeRunner";
	"sample.datasize.DataSizeRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.broadcastjob.BroadcastJobRunner";
	"sample.dist.broadcastjob.BroadcastJobRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.commandline.CommandLineTaskRunner";
	"sample.dist.commandline.CommandLineTaskRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.manyjobs.ManyConnections";
	"sample.dist.manyjobs.ManyConnections"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.manyjobs.ManyJobsRunner";
	"sample.dist.manyjobs.ManyJobsRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner";
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.matrix.NonBlockingMatrixRunner";
	"sample.dist.matrix.NonBlockingMatrixRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.taskcommunication.MyTaskRunner";
	"sample.dist.taskcommunication.MyTaskRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.tasklength.LongTaskRunner";
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.dist.xstream.XstreamRunner";
	"sample.dist.xstream.XstreamRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.helloworld.HelloWorldRunner";
	"sample.helloworld.HelloWorldRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.prime.PrimeRunner";
	"sample.prime.PrimeRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.clientpool.ConnectionPoolRunner";
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.ClientTest";
	"sample.test.ClientTest"->"org.jppf.client.JPPFClient"[A];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"org.jppf.client.JPPFClient"[A];
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.client.JPPFClient"[A];
	"sample.test.executor.JPPFCallableTask"->"org.jppf.client.JPPFClient"[A];
	"sample.test.executor.Main";
	"sample.test.executor.Main"->"org.jppf.client.JPPFClient"[A];
	"sample.test.HelloJPPF";
	"sample.test.HelloJPPF"->"org.jppf.client.JPPFClient"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.jppfcallable.JPPFCallableRunner";
	"sample.test.jppfcallable.JPPFCallableRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.largedata.LargeDataRunner";
	"sample.test.largedata.LargeDataRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.largedata.SubmitQueue"->"org.jppf.client.JPPFClient"[A];
	"sample.test.profiling.ProfilingRunner";
	"sample.test.profiling.ProfilingRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.redirect.RedirectOutputRunner";
	"sample.test.redirect.RedirectOutputRunner"->"org.jppf.client.JPPFClient"[A];
	"sample.test.TestTaskRunner";
	"sample.test.TestTaskRunner"->"org.jppf.client.JPPFClient"[A];
	"test.annotated.AnnotatedRunner";
	"test.annotated.AnnotatedRunner"->"org.jppf.client.JPPFClient"[A];
	"test.driver.restart.TestDriverRestart";
	"test.driver.restart.TestDriverRestart"->"org.jppf.client.JPPFClient"[A];
	"test.generic.GenericRunner"->"org.jppf.client.JPPFClient"[A];
	"test.jmx.canceljob.CancelJobRunner";
	"test.jmx.canceljob.CancelJobRunner"->"org.jppf.client.JPPFClient"[A];
	"test.jmx.JmxLogging";
	"test.jmx.JmxLogging"->"org.jppf.client.JPPFClient"[A];
	"test.jmx.TestJMX";
	"test.jmx.TestJMX"->"org.jppf.client.JPPFClient"[A];
	"test.job.priority.JobPriorityRunner";
	"test.job.priority.JobPriorityRunner"->"org.jppf.client.JPPFClient"[A];
	"test.job.priority.JobPriorityRunner.JobRunner";
	"test.job.priority.JobPriorityRunner.JobRunner"->"org.jppf.client.JPPFClient"[A];
	"test.jobfromtask.JobFromTaskRunner";
	"test.jobfromtask.JobFromTaskRunner"->"org.jppf.client.JPPFClient"[A];
	"test.localexecution.LocalExecutionRunner";
	"test.localexecution.LocalExecutionRunner"->"org.jppf.client.JPPFClient"[A];
	"test.node.nativelib.NativeLibRunner";
	"test.node.nativelib.NativeLibRunner"->"org.jppf.client.JPPFClient"[A];
	"test.run.jboss.JBossTestRunner";
	"test.run.jboss.JBossTestRunner"->"org.jppf.client.JPPFClient"[A];
	"test.serialization.overflow.SerializationOverflowRunner";
	"test.serialization.overflow.SerializationOverflowRunner"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.client.JPPFClient"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.management.JMXDriverConnectionWrapper"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.management.JMXDriverConnectionWrapper"[A];
	"org.jppf.client.monitoring.topology.TopologyEvent";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[A];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler.NodeAdded";
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler.NodeAdded"->"org.jppf.client.monitoring.topology.TopologyEvent"[A];
	"org.jppf.ui.monitoring.diagnostics.Thresholds.Name";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.diagnostics.Thresholds.Name"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.monitoring.diagnostics.Thresholds.Name"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.monitoring.diagnostics.Thresholds.Name"[A];
	"org.jppf.ui.monitoring.data.NewConnectionTask.ComboUpdate";
	"org.jppf.ui.monitoring.data.NewConnectionTask.ComboUpdate"->"org.jppf.ui.monitoring.data.NewConnectionTask"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.data.NewConnectionTask"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.data.ConnectionFailedTask"[A];
	"org.jppf.utils.StringUtils";
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.ui.options.SpinnerNumberOption"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.comm.discovery.JPPFConnectionInformation";
	"org.jppf.comm.discovery.JPPFConnectionInformation"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.comm.recovery.ServerConnection"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.logging.jdk.JPPFLogFormatter";
	"org.jppf.logging.jdk.JPPFLogFormatter"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.management.diagnostics.HealthSnapshot";
	"org.jppf.management.diagnostics.HealthSnapshot"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.serialization.Deserializer";
	"org.jppf.serialization.Deserializer"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.FileReplacerEx"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.JPPFBuffer";
	"org.jppf.utils.JPPFBuffer"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.Pair";
	"org.jppf.utils.Pair"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.ReflectionUtils";
	"org.jppf.utils.ReflectionUtils"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.SystemUtils";
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.TimeMarker";
	"org.jppf.utils.TimeMarker"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.utils.VersionUtils";
	"org.jppf.utils.VersionUtils"->"org.jppf.utils.StringUtils"[A];
	"sample.cascading.CascadingTestRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.datasize.DataSizeRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.dist.commandline.CommandLineTaskRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.dist.manyjobs.ManyJobsRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.prime.PrimeRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.test.profiling.ProfilingRunner"->"org.jppf.utils.StringUtils"[A];
	"sample.test.TestTaskRunner"->"org.jppf.utils.StringUtils"[A];
	"test.generic.TestScheduledExecutor";
	"test.generic.TestScheduledExecutor"->"org.jppf.utils.StringUtils"[A];
	"test.job.priority.JobPriorityRunner"->"org.jppf.utils.StringUtils"[A];
	"test.jobfromtask.JobFromTaskRunner"->"org.jppf.utils.StringUtils"[A];
	"test.jobfromtask.SourceTask";
	"test.jobfromtask.SourceTask"->"org.jppf.utils.StringUtils"[A];
	"test.localexecution.LocalExecutionRunner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.server.nio.classloader.ClassCache";
	"org.jppf.server.nio.classloader.ClassCache"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.Scenario";
	"org.jppf.test.scenario.Scenario"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.s2.S2Runner"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.utils.StringUtils"[A];
	"test.org.jppf.test.runner.TextResultRenderer"->"org.jppf.utils.StringUtils"[A];
	"org.jppf.client.JPPFClientConnectionStatus";
	"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask"->"org.jppf.client.JPPFClientConnectionStatus"[A];
	"org.jppf.ui.monitoring.data.StatsRefreshTask";
	"org.jppf.ui.monitoring.data.StatsRefreshTask"->"org.jppf.client.JPPFClientConnectionStatus"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"->"org.jppf.client.JPPFClientConnectionStatus"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.JPPFClientConnectionStatus"[A];
	"org.jppf.utils.stats.JPPFStatistics";
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.node.policy.PolicyContext";
	"org.jppf.node.policy.PolicyContext"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"sample.prime.PrimeRunner"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.management.__JPPFDriverAdminMBean"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.server.JPPFDriver";
	"org.jppf.server.JPPFDriver"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics.TaskAndJobCountTester";
	"test.org.jppf.utils.stats.TestJPPFStatistics.TaskAndJobCountTester"->"org.jppf.utils.stats.JPPFStatistics"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.CsvStatsExporter"[A];
	"org.jppf.ui.monitoring.data.NewConnectionTask"->"org.jppf.ui.monitoring.data.NewConnectionTask.ComboUpdate"[A];
	"org.jppf.ui.monitoring.data.NewConnectionTask"->"org.jppf.ui.monitoring.data.StatsRefreshTask"[A];
	"org.jppf.utils.collections.CollectionUtils";
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.utils.collections.CollectionUtils"[A];
	"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"->"org.jppf.utils.collections.CollectionUtils"[A];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.utils.collections.CollectionUtils"[A];
	"test.localexecution.MyTask"->"org.jppf.utils.collections.CollectionUtils"[A];
	"test.org.jppf.test.runner.ResultHolder";
	"test.org.jppf.test.runner.ResultHolder"->"org.jppf.utils.collections.CollectionUtils"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.utils.collections.CollectionUtils"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.StatsFormatter"[A];
	"org.jppf.ui.monitoring.MonitorTableModel"->"org.jppf.ui.monitoring.data.StatsFormatter"[A];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.ui.monitoring.MonitorTableModel"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.utils.stats.AbstractJPPFSnapshot"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.utils.stats.SingleValueSnapshot"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.utils.stats.JPPFStatisticsHelper"[A];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableModel"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"test.driver.restart.TestDriverRestart"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.management.diagnostics.__DiagnosticsMBean"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.test.setup.DiagnosticsResult";
	"org.jppf.test.setup.DiagnosticsResult"->"org.jppf.management.diagnostics.HealthSnapshot"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.TextStatsExporter"[A];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.ui.options.FormattedNumberOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.FormattedNumberOption"[A];
	"org.jppf.client.monitoring.topology.TopologyPeer";
	"org.jppf.client.monitoring.topology.TopologyPeer"->"org.jppf.client.monitoring.topology.TopologyNode"[C];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyNode"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyNode"[A];
	"org.jppf.ui.monitoring.node.actions.AbstractTopologyAction"->"org.jppf.client.monitoring.topology.TopologyNode"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.client.monitoring.topology.TopologyNode"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.ui.monitoring.diagnostics.GCAction"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.diagnostics.GCAction"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction"->"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"[A];
	"org.jppf.management.NodeSelector.UuidSelector";
	"org.jppf.management.NodeSelector.UuidSelector"->"org.jppf.management.UuidSelector"[C];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.management.UuidSelector"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.management.UuidSelector"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.UuidSelector"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.management.UuidSelector"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.treetable.JPPFTreeTable"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.treetable.JPPFTreeTable"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.treetable.JPPFTreeTable"[A];
	"org.jppf.ui.monitoring.job.JobDataPanelManager";
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.ui.treetable.JPPFTreeTable"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableModel"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableModel"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.ui.utils.TreeTableUtils"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.ui.monitoring.diagnostics.HeapDumpAction"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.diagnostics.HeapDumpAction"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction"->"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"[A];
	"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType";
	"org.jppf.client.monitoring.topology.TopologyEvent"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[A];
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.node.actions.SelectDriversAction"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.monitoring.node.actions.SelectDriversAction"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.node.actions.SelectNodesAction"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.monitoring.node.actions.SelectNodesAction"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.node.actions.SelectAllAction"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableMouseListener"[A];
	"org.jppf.management.diagnostics.ThreadDump";
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"test.jmx.TestJMX"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.diagnostics.__DiagnosticsMBean"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.management.diagnostics.__ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.diagnostics.HTMLThreadDumpWriter"[A];
	"test.jmx.TestJMX"->"org.jppf.management.diagnostics.HTMLThreadDumpWriter"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.diagnostics.TextThreadDumpWriter"[A];
	"org.jppf.management.diagnostics.ThreadDump"->"org.jppf.management.diagnostics.TextThreadDumpWriter"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver";
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob";
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode";
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.MyTimerTask";
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.MyTimerTask"[A];
	"org.jppf.job.JobInformation";
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.job.JobInformation"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"->"org.jppf.job.JobInformation"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"->"org.jppf.job.JobInformation"[A];
	"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction"->"org.jppf.job.JobInformation"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel.JobNotificationTask";
	"org.jppf.ui.monitoring.job.JobDataPanel.JobNotificationTask"->"org.jppf.ui.monitoring.job.JobDataPanel"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel.RefreshTask";
	"org.jppf.ui.monitoring.job.JobDataPanel.RefreshTask"->"org.jppf.ui.monitoring.job.JobDataPanel"[A];
	"org.jppf.ui.monitoring.job.JobAccumulator";
	"org.jppf.ui.monitoring.job.JobAccumulator.Type";
	"org.jppf.ui.monitoring.job.JobAccumulator"->"org.jppf.ui.monitoring.job.JobAccumulator.Type"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.JobAccumulator.Type"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"->"org.jppf.ui.monitoring.job.JobAccumulator.Type"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"->"org.jppf.ui.monitoring.job.JobAccumulator.Type"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"->"org.jppf.ui.monitoring.job.JobAccumulator.Type"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobAccumulator.Type"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"->"org.jppf.ui.monitoring.job.JobAccumulator"[C];
	"org.jppf.ui.monitoring.job.JobAccumulatorBranch";
	"org.jppf.ui.monitoring.job.JobAccumulatorBranch"->"org.jppf.ui.monitoring.job.JobAccumulator"[C];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.JobAccumulator"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"->"org.jppf.ui.monitoring.job.JobAccumulator"[A];
	"org.jppf.ui.monitoring.job.JobAccumulatorBranch"->"org.jppf.ui.monitoring.job.JobAccumulator"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobAccumulator"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"->"org.jppf.ui.monitoring.job.JobAccumulatorBranch"[C];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"->"org.jppf.ui.monitoring.job.JobAccumulatorBranch"[C];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"->"org.jppf.ui.monitoring.job.JobAccumulatorBranch"[A];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"->"org.jppf.ui.monitoring.job.JobAccumulatorBranch"[A];
	"org.jppf.ui.monitoring.job.JobData.ProxySetting"->"org.jppf.ui.monitoring.job.JobData"[A];
	"org.jppf.ui.monitoring.job.actions.AbstractJobAction"->"org.jppf.ui.monitoring.job.JobData"[A];
	"org.jppf.ui.monitoring.job.actions.AbstractSuspendJobAction"->"org.jppf.ui.monitoring.job.JobData"[A];
	"org.jppf.ui.monitoring.job.JobDataType";
	"org.jppf.ui.monitoring.job.actions.AbstractJobAction"->"org.jppf.ui.monitoring.job.JobDataType"[A];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.ui.monitoring.job.JobDataType"[A];
	"org.jppf.ui.monitoring.job.JobRenderer"->"org.jppf.ui.monitoring.job.JobDataType"[A];
	"org.jppf.ui.monitoring.job.JobTreeTableModel"->"org.jppf.ui.monitoring.job.JobDataType"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.actions.SuspendJobAction"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.actions.SuspendRequeueJobAction"[A];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.ui.monitoring.job.JobData.ProxySetting"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobDataPanel.JobNotificationTask"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobDataPanel.RefreshTask"[A];
	"org.jppf.ui.monitoring.job.JobDataPanelManager.ConnectionStatusListener";
	"org.jppf.ui.monitoring.job.JobDataPanelManager.ConnectionStatusListener"->"org.jppf.ui.monitoring.job.JobDataPanelManager"[A];
	"org.jppf.job.JobNotification";
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.job.JobNotification"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel.JobNotificationTask"->"org.jppf.job.JobNotification"[A];
	"org.jppf.ui.monitoring.job.JobNotificationListener";
	"org.jppf.ui.monitoring.job.JobNotificationListener"->"org.jppf.job.JobNotification"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.job.JobNotification"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobNotification"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.job.JobNotification"[A];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobNotification"[A];
	"org.jppf.server.job.management.NodeJobInformation";
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.server.job.management.NodeJobInformation"[A];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.server.job.management.NodeJobInformation"[A];
	"org.jppf.server.job.management.__DriverJobManagementMBean"->"org.jppf.server.job.management.NodeJobInformation"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.job.management.NodeJobInformation"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobTreeTableModel"[A];
	"org.jppf.ui.monitoring.job.JobTableCellRenderer";
	"org.jppf.ui.monitoring.job.JobTableCellRenderer"->"org.jppf.ui.monitoring.job.JobTreeTableModel"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobRenderer"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobTableCellRenderer"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.JobTreeTableMouseListener"[A];
	"org.jppf.job.JobEventType";
	"org.jppf.ui.monitoring.job.JobDataPanel.JobNotificationTask"->"org.jppf.job.JobEventType"[A];
	"org.jppf.ui.monitoring.job.JobNotificationListener"->"org.jppf.job.JobEventType"[A];
	"org.jppf.job.JobNotification"->"org.jppf.job.JobEventType"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.job.JobEventType"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobEventType"[A];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.ui.monitoring.job.JobDataPanelManager.ConnectionStatusListener"[A];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.ui.monitoring.job.JobNotificationListener"[A];
	"org.jppf.management.JPPFNodeState";
	"org.jppf.management.JPPFNodeState.ConnectionState"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.management.JPPFNodeState.ExecutionState"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.ui.monitoring.node.NodeTreeTableModel"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.management.__JPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.management.JPPFNodeState"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.JPPFNodeState"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean";
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeState"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2";
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.management.JPPFNodeState"[A];
	"org.jppf.ui.options.factory.OptionsHandler.OptionNode";
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.factory.OptionsHandler.OptionNode"[A];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.ui.options.factory.OptionsHandler.OptionNode"[A];
	"org.jppf.ui.monitoring.node.actions.ServerShutdownRestartAction"->"org.jppf.ui.options.factory.OptionsHandler.OptionNode"[A];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.utils.collections.ArrayListHashMap"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.utils.collections.ArrayListHashMap"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.utils.collections.ArrayListHashMap"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.utils.collections.ArrayListHashMap"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.utils.HTMLPropertiesTableFormat"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.utils.TextPropertiesTableFormat"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.client.monitoring.topology.TopologyPeer"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler.NodeAdded"->"org.jppf.client.monitoring.topology.TopologyPeer"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyPeer"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.monitoring.node.graph.ExpandOrCollapseGraphAction"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler.NodeAdded"->"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"[A];
	"org.jppf.ui.monitoring.node.graph.LayoutFactory";
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.monitoring.node.graph.LayoutFactory"[A];
	"org.jppf.ui.monitoring.node.graph.RadialLayout";
	"org.jppf.ui.monitoring.node.graph.RadialLayout"->"org.jppf.ui.monitoring.node.graph.LayoutFactory"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.monitoring.node.graph.PopupMenuMousePlugin"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.monitoring.node.graph.SelectGraphDriversAction"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.monitoring.node.graph.SelectGraphNodesAction"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler.NodeAdded"[A];
	"org.jppf.client.monitoring.topology.TopologyNodeStatus";
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[A];
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[A];
	"org.jppf.ui.monitoring.node.NodeTableCellRenderer"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[A];
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[A];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[A];
	"org.jppf.ui.monitoring.node.graph.LayoutFactory"->"org.jppf.ui.monitoring.node.graph.RadialLayout"[A];
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.ui.monitoring.node.NodeDataPanel"[A];
	"org.jppf.ui.monitoring.node.NodeTableCellRenderer"->"org.jppf.ui.monitoring.node.NodeDataPanel"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.monitoring.node.NodeTreeTableModel"[A];
	"org.jppf.ui.monitoring.node.NodeTableCellRenderer"->"org.jppf.ui.monitoring.node.NodeTreeTableModel"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.monitoring.node.NodeRenderer"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.monitoring.node.NodeTableCellRenderer"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.ui.monitoring.node.NodeTreeTableMouseListener"[A];
	"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor";
	"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor";
	"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor"->"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor"[A];
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor"[A];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor"[A];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor"[A];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionDescriptor"[A];
	"org.jppf.ui.options.docking.DockingMouseAdapter"->"org.jppf.ui.options.docking.DetachableComponentDescriptor"[A];
	"org.jppf.ui.options.docking.DockToExistingViewAction"->"org.jppf.ui.options.docking.DetachableComponentDescriptor"[A];
	"org.jppf.ui.options.docking.DockToNewViewAction"->"org.jppf.ui.options.docking.DetachableComponentDescriptor"[A];
	"org.jppf.ui.options.docking.DockingManager"->"org.jppf.ui.options.docking.DockingMouseAdapter"[A];
	"org.jppf.ui.options.docking.ViewDescriptor";
	"org.jppf.ui.options.docking.DockToNewViewAction"->"org.jppf.ui.options.docking.ViewDescriptor"[A];
	"org.jppf.ui.options.docking.DockingMouseAdapter"->"org.jppf.ui.options.docking.DockToInitialContainerAction"[A];
	"org.jppf.ui.options.docking.DockingMouseAdapter"->"org.jppf.ui.options.docking.DockToNewViewAction"[A];
	"org.jppf.ui.options.docking.DockingMouseAdapter"->"org.jppf.ui.options.docking.DockToExistingViewAction"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.event.ScriptedMouseListener"[A];
	"org.jppf.utils.JPPFUuid";
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.management.JMXMPServer"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.utils.JPPFUuid"[A];
	"sample.test.TestUuid";
	"sample.test.TestUuid"->"org.jppf.utils.JPPFUuid"[A];
	"test.filecopy.FileCopyAction"->"org.jppf.utils.JPPFUuid"[A];
	"test.generic.TestScheduledExecutor"->"org.jppf.utils.JPPFUuid"[A];
	"org.jppf.scripting.JPPFScriptingException";
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.scripting.JPPFScriptingException"[A];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.scripting.JPPFScriptingException"[A];
	"org.jppf.scripting.ScriptRunnerImpl"->"org.jppf.scripting.JPPFScriptingException"[A];
	"org.jppf.scripting.ScriptRunnerPool"->"org.jppf.scripting.JPPFScriptingException"[A];
	"org.jppf.scripting.ScriptRunnerFactory";
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.scripting.ScriptRunnerFactory"[A];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.scripting.ScriptRunnerFactory"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.scripting.ScriptRunnerFactory"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.scripting.ScriptRunnerFactory"[A];
	"org.jppf.node.protocol.ScriptedTask"->"org.jppf.scripting.ScriptRunnerFactory"[A];
	"org.jppf.utils.configuration.ScriptHandler"->"org.jppf.scripting.ScriptRunnerFactory"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.event.ScriptedValueChangeListener"[A];
	"org.jppf.ui.plugin.PluggableViewHandler";
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.plugin.PluggableViewHandler"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.FileChooserOption"[A];
	"org.jppf.ui.options.SplitPaneOption"->"org.jppf.ui.options.FillerOption"[A];
	"org.jppf.ui.options.JavaOption.JavaOptionMouseListener"->"org.jppf.ui.options.JavaOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.JavaOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.LabelOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.ListOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.OptionPanel"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.PasswordOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.PlainTextOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.SplitPaneOption"[A];
	"org.jppf.ui.options.xml.DebugMouseListener";
	"org.jppf.ui.options.xml.DebugMouseListener"->"org.jppf.ui.options.TabbedPaneOption"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.TabbedPaneOption"[A];
	"org.jppf.ui.options.TextAreaOption.EditorMouseListener";
	"org.jppf.ui.options.TextAreaOption"->"org.jppf.ui.options.TextAreaOption.EditorMouseListener"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.ToolbarOption"[A];
	"org.jppf.ui.options.xml.OptionDescriptor.ItemDescriptor";
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor.ItemDescriptor"[A];
	"org.jppf.ui.options.xml.OptionDescriptor"->"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor"[A];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionDescriptorParser"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionElementFactory"[A];
	"org.jppf.utils.ServiceFinder";
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.utils.ServiceFinder"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher";
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.utils.ServiceFinder"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.ServiceFinder"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.utils.ServiceFinder"[A];
	"org.jppf.ui.treetable.FileNode";
	"org.jppf.ui.treetable.FileSystemModel"->"org.jppf.ui.treetable.FileNode"[A];
	"org.jppf.ui.treetable.JTreeTable"->"org.jppf.ui.treetable.JTreeTable.ListToTreeSelectionModelWrapper"[A];
	"org.jppf.ui.treetable.JTreeTable"->"org.jppf.ui.treetable.JTreeTable.TreeTableCellEditor"[A];
	"org.jppf.ui.treetable.JTreeTable.TreeTableCellRenderer";
	"org.jppf.ui.treetable.JTreeTable"->"org.jppf.ui.treetable.JTreeTable.TreeTableCellRenderer"[A];
	"org.jppf.ui.treetable.ListSelectionHandler";
	"org.jppf.ui.treetable.JTreeTable.ListToTreeSelectionModelWrapper"->"org.jppf.ui.treetable.ListSelectionHandler"[A];
	"org.jppf.ui.treetable.TreeSelectionHandler";
	"org.jppf.ui.treetable.JTreeTable.ListToTreeSelectionModelWrapper"->"org.jppf.ui.treetable.TreeSelectionHandler"[A];
	"org.jppf.ui.utils.JPPFSplash"->"org.jppf.ui.utils.JPPFSplash.ScrollTask"[A];
	"org.jppf.application.template.TemplateJPPFTask";
	"org.jppf.application.template.TemplateJPPFTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.node.protocol.JPPFExceptionResult";
	"org.jppf.node.protocol.JPPFExceptionResult"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.node.protocol.JPPFTask";
	"org.jppf.node.protocol.JPPFTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.node.protocol.ScriptedTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.BaseDemoTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.cascading.Task1"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.cascading.Task2";
	"sample.cascading.Task2"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.datasize.DataTask";
	"sample.datasize.DataTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.broadcastjob.BroadcastJobRunner.BroadcastTask";
	"sample.dist.broadcastjob.BroadcastJobRunner.BroadcastTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.matrix.ExtMatrixTask";
	"sample.dist.matrix.ExtMatrixTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.taskcommunication.AbstractMyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.taskcommunication.MyTask";
	"sample.dist.taskcommunication.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.tasklength.LongTask";
	"sample.dist.tasklength.LongTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.dist.xstream.XstreamTask";
	"sample.dist.xstream.XstreamTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.helloworld.HelloWorld";
	"sample.helloworld.HelloWorld"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.prime.PrimeTask";
	"sample.prime.PrimeTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.deadlock.DeadlockingTask";
	"sample.test.deadlock.DeadlockingTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.deadlock.MyTask";
	"sample.test.deadlock.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.executor.JPPFCallableTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.job.management.JobManagementTestRunner.MyBroadcastTask";
	"sample.test.job.management.JobManagementTestRunner.MyBroadcastTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.jppfcallable.MyTask";
	"sample.test.jppfcallable.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.JPPFTestTask";
	"sample.test.JPPFTestTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.largedata.LargeDataTask";
	"sample.test.largedata.LargeDataTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.MyTask";
	"sample.test.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.NonSerializableAttributeTask";
	"sample.test.NonSerializableAttributeTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.OutOfMemoryTestTask";
	"sample.test.OutOfMemoryTestTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.profiling.EmptyTask";
	"sample.test.profiling.EmptyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.redirect.RedirectOutputTask";
	"sample.test.redirect.RedirectOutputTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"sample.test.TemplateJPPFTask";
	"sample.test.TemplateJPPFTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.annotated.AnnotatedTask";
	"test.annotated.AnnotatedTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.filecopy.FileCopyTask";
	"test.filecopy.FileCopyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.generic.LotsOfOutputTask";
	"test.generic.LotsOfOutputTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.jmx.canceljob.LifeCycleTask";
	"test.jmx.canceljob.LifeCycleTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.jmx.JmxLogging.MyTask";
	"test.jmx.JmxLogging.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.jmx.MyTask";
	"test.jmx.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.jobfromtask.DestinationTask";
	"test.jobfromtask.DestinationTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.jobfromtask.SourceTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.localexecution.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.node.nativelib.NativeLibTask";
	"test.node.nativelib.NativeLibTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.serialization.NonSerializableTask";
	"test.serialization.NonSerializableTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.serialization.overflow.SerializationOverflowTask";
	"test.serialization.overflow.SerializationOverflowTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.dotnet.demo.JavaDemoTask";
	"org.jppf.dotnet.demo.JavaDemoTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.dotnet.DotnetTaskWrapper"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.jca.demo.DemoTask";
	"org.jppf.jca.demo.DemoTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.test.scenario.classloading.Runner.MyTask";
	"org.jppf.test.scenario.classloading.Runner.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Task";
	"org.jppf.test.scenario.jppf_130.JPPF_130_Task"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.test.scenario.nodesmix.NodeMixTask";
	"org.jppf.test.scenario.nodesmix.NodeMixTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.test.scenario.s1.ExtMatrixTask";
	"org.jppf.test.scenario.s1.ExtMatrixTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.test.scenario.s3.MyTask";
	"org.jppf.test.scenario.s3.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.test.setup.common.LifeCycleTask";
	"test.org.jppf.test.setup.common.LifeCycleTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.test.setup.common.NotifyingTask";
	"test.org.jppf.test.setup.common.NotifyingTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.test.setup.common.NotSerializableTask";
	"test.org.jppf.test.setup.common.NotSerializableTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.test.setup.common.SimpleTask";
	"test.org.jppf.test.setup.common.SimpleTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.classloader.ResourceLoadingTask";
	"test.org.jppf.classloader.ResourceLoadingTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader.MyTask";
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.classloader.TestResourceLookup.MyTask";
	"test.org.jppf.classloader.TestResourceLookup.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3.MyTask";
	"test.org.jppf.server.protocol.TestJPPFJobSLA3.MyTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallableTask";
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallableTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask";
	"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask2";
	"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask2"->"org.jppf.node.protocol.AbstractTask"[C];
	"test.org.jppf.server.protocol.TestJPPFTask.ResubmittingTask";
	"test.org.jppf.server.protocol.TestJPPFTask.ResubmittingTask"->"org.jppf.node.protocol.AbstractTask"[C];
	"org.jppf.application.template.TemplateJPPFTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.node.protocol.JPPFExceptionResult"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.node.protocol.JPPFTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.node.protocol.ScriptedTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.BaseDemoTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.cascading.Task1"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.cascading.Task2"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.datasize.DataTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.broadcastjob.BroadcastJobRunner.BroadcastTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.matrix.ExtMatrixTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.taskcommunication.AbstractMyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.taskcommunication.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.tasklength.LongTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.dist.xstream.XstreamTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.helloworld.HelloWorld"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.prime.PrimeTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.deadlock.DeadlockingTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.deadlock.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.executor.JPPFCallableTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.executor.Main"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.job.management.JobManagementTestRunner.MyBroadcastTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.jppfcallable.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.JPPFTestTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.largedata.LargeDataTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.NonSerializableAttributeTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.OutOfMemoryTestTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.profiling.EmptyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.redirect.RedirectOutputTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"sample.test.TemplateJPPFTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.annotated.AnnotatedTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.filecopy.FileCopyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.generic.LotsOfOutputTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.jmx.canceljob.LifeCycleTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.jmx.JmxLogging.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.jmx.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.job.priority.JobPriorityRunner"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.jobfromtask.DestinationTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.jobfromtask.SourceTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.localexecution.LocalExecutionRunner"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.localexecution.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.node.nativelib.NativeLibTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.serialization.NonSerializableTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.serialization.overflow.SerializationOverflowTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.dotnet.demo.JavaDemoTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.dotnet.DotnetTaskWrapper"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.jca.demo.DemoTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.jca.demo.J2EEDemo";
	"org.jppf.jca.demo.J2EEDemo"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.test.scenario.classloading.Runner.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Task"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.test.scenario.s1.ExtMatrixTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.test.scenario.s3.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.test.setup.common.LifeCycleTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.test.setup.common.NotifyingTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.test.setup.common.NotSerializableTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.test.setup.common.SimpleTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.classloader.ResourceLoadingTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader";
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.classloader.TestResourceLookup";
	"test.org.jppf.classloader.TestResourceLookup"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.classloader.TestResourceLookup.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA";
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3.MyTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask";
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallableTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask2"->"org.jppf.node.protocol.AbstractTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.ResubmittingTask"->"org.jppf.node.protocol.AbstractTask"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.comm.socket.SocketClient"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.comm.socket.SocketClient"[A];
	"test.socket.SocketPerformance.Client"->"org.jppf.comm.socket.SocketClient"[A];
	"test.socket.SocketPerformance.Connection";
	"test.socket.SocketPerformance.Connection"->"org.jppf.comm.socket.SocketClient"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.comm.socket.SocketClient"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.comm.socket.SocketClient"[A];
	"org.jppf.io.IOHelper";
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.io.IOHelper"[A];
	"org.jppf.management.CustomWrapping";
	"org.jppf.management.CustomWrapping"->"org.jppf.io.IOHelper"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.io.IOHelper"[A];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.nio.client.ClientMessage"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeMessage"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.io.IOHelper"[A];
	"org.jppf.server.peer.PeerNodeResultSender";
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.io.IOHelper"[A];
	"org.jppf.classloader.CompositeResourceWrapper";
	"org.jppf.classloader.JPPFResourceWrapper";
	"org.jppf.classloader.CompositeResourceWrapper"->"org.jppf.classloader.JPPFResourceWrapper"[C];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.CompositeResourceWrapper"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.AbstractResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.server.nio.classloader.ResourceRequest";
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.ResourceProvider.Factory"[A];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.classloader.ResourceProvider.Factory"[A];
	"org.jppf.utils.JPPFIdentifiers";
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.utils.JPPFIdentifiers"[A];
	"org.jppf.classloader.JPPFResourceWrapper.State";
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.classloader.JPPFResourceWrapper.State"[A];
	"org.jppf.classloader.ResourceIdentifier";
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.classloader.CompositeResourceWrapper"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.classloader.ResourceIdentifier"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.ResourceProviderImpl"[A];
	"org.jppf.classloader.ResourceProvider.Factory"->"org.jppf.classloader.ResourceProviderImpl"[A];
	"org.jppf.ssl.SSLHelper";
	"org.jppf.management.JMXMPServer"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.utils.JPPFConfiguration"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.server.peer.PeerResourceProvider";
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.ssl.SSLHelper"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.ssl.SSLHelper"[A];
	"test.org.jppf.test.setup.BaseSetup";
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.ssl.SSLHelper"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.balancer.queue.JPPFPriorityQueue"[A];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.balancer.queue.JPPFPriorityQueue"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.balancer.queue.JPPFPriorityQueue"[A];
	"org.jppf.client.event.ClientQueueEvent"->"org.jppf.client.balancer.queue.JPPFPriorityQueue"[A];
	"org.jppf.utils.configuration.ConfigurationHelper";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.configuration.ConfigurationHelper"[A];
	"org.jppf.utils.hooks.HookFactory";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.management.spi.JPPFMBeanProviderManager";
	"org.jppf.management.spi.JPPFMBeanProviderManager"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.utils.hooks.HookFactory"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.balancer.ClientJob"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.balancer.ClientJob"[A];
	"org.jppf.client.balancer.queue.JobExpirationAction"->"org.jppf.client.balancer.ClientJob"[A];
	"org.jppf.client.balancer.queue.JobPriorityComparator"->"org.jppf.client.balancer.ClientJob"[A];
	"org.jppf.client.balancer.queue.JobScheduleAction"->"org.jppf.client.balancer.ClientJob"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.balancer.ClientJob"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.ClientTaskBundle"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.balancer.ClientTaskBundle"[A];
	"org.jppf.client.ClassLoaderRegistrationHandler";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.ClassLoaderRegistrationHandler"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.JPPFMulticastReceiverThread"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.queue.QueueEvent"[A];
	"org.jppf.client.event.ClientQueueEventDispatcher"->"org.jppf.queue.QueueEvent"[A];
	"org.jppf.queue.QueueListenerAdapter"->"org.jppf.queue.QueueEvent"[A];
	"org.jppf.queue.__QueueListener"->"org.jppf.queue.QueueEvent"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.comm.discovery.JPPFConnectionInformation"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.JPPFConnectionPool"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.event.ClientQueueEvent"[A];
	"org.jppf.client.event.ClientQueueListenerAdapter"->"org.jppf.client.event.ClientQueueEvent"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.comm.discovery.IPFilter"[A];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.comm.discovery.IPFilter"[A];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.comm.discovery.IPFilter"[A];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.comm.discovery.IPFilter"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.comm.discovery.IPFilter"[A];
	"org.jppf.server.peer.PeerDiscoveryThread"->"org.jppf.comm.discovery.IPFilter"[A];
	"org.jppf.client.ConnectionInitializer";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.ConnectionInitializer"[A];
	"org.jppf.client.event.ClientEvent";
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.event.ClientEvent"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.event.ClientEvent"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.balancer.queue.JobPriorityComparator"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.concurrent.JPPFCompletionService";
	"org.jppf.client.concurrent.JPPFCompletionService"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.event.ClientQueueEvent"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.event.JobEvent";
	"org.jppf.client.event.JobEvent"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.JPPFResultCollector"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.persistence.DefaultFilePersistenceManager"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.JPPFJob"[A];
	"sample.cascading.CascadingTestRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.cascading.Task1"->"org.jppf.client.JPPFJob"[A];
	"sample.datasize.DataSizeRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.broadcastjob.BroadcastJobRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.commandline.CommandLineTaskRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.manyjobs.ManyJobsRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.taskcommunication.MyTaskRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.dist.xstream.XstreamRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.helloworld.HelloWorldRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.prime.PrimeRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.deadlock.DeadlockRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.deadlock.JobStreamImpl"->"org.jppf.client.JPPFJob"[A];
	"sample.test.HelloJPPF"->"org.jppf.client.JPPFJob"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.largedata.LargeDataRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.largedata.SubmitQueue"->"org.jppf.client.JPPFJob"[A];
	"sample.test.profiling.ProfilingRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.redirect.RedirectOutputRunner"->"org.jppf.client.JPPFJob"[A];
	"sample.test.TestTaskRunner"->"org.jppf.client.JPPFJob"[A];
	"test.annotated.AnnotatedRunner"->"org.jppf.client.JPPFJob"[A];
	"test.filecopy.FileCopyRunner";
	"test.filecopy.FileCopyRunner"->"org.jppf.client.JPPFJob"[A];
	"test.generic.GenericRunner"->"org.jppf.client.JPPFJob"[A];
	"test.jmx.canceljob.CancelJobRunner"->"org.jppf.client.JPPFJob"[A];
	"test.jmx.JmxLogging"->"org.jppf.client.JPPFJob"[A];
	"test.jmx.TestJMX"->"org.jppf.client.JPPFJob"[A];
	"test.job.priority.JobPriorityRunner"->"org.jppf.client.JPPFJob"[A];
	"test.job.priority.JobPriorityRunner.JobRunner"->"org.jppf.client.JPPFJob"[A];
	"test.jobfromtask.JobFromTaskRunner"->"org.jppf.client.JPPFJob"[A];
	"test.localexecution.LocalExecutionRunner"->"org.jppf.client.JPPFJob"[A];
	"test.node.nativelib.NativeLibRunner"->"org.jppf.client.JPPFJob"[A];
	"test.node.provisioning.NodeProvisioningRunner";
	"test.node.provisioning.NodeProvisioningRunner"->"org.jppf.client.JPPFJob"[A];
	"test.run.jboss.JBossTestRunner"->"org.jppf.client.JPPFJob"[A];
	"test.serialization.NonSerializableTaskRunner";
	"test.serialization.NonSerializableTaskRunner"->"org.jppf.client.JPPFJob"[A];
	"test.serialization.overflow.SerializationOverflowRunner"->"org.jppf.client.JPPFJob"[A];
	"test.serialization.Test";
	"test.serialization.Test"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.jca.demo.J2EEDemo"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection";
	"test.org.jppf.jca.cci.TestJPPFConnection"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask";
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.s2.S2Runner"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.test.setup.common.BaseTestHelper";
	"test.org.jppf.test.setup.common.BaseTestHelper"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.client.event.TestJobListener";
	"test.org.jppf.client.event.TestJobListener"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.client.event.TestJPPFResultCollector";
	"test.org.jppf.client.event.TestJPPFResultCollector"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.client.persistence.TestJobPersistence";
	"test.org.jppf.client.persistence.TestJobPersistence"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.client.TestConnectionPool";
	"test.org.jppf.client.TestConnectionPool"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.client.TestJPPFJob";
	"test.org.jppf.client.TestJPPFJob"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean";
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.node.protocol.TestScriptedTask";
	"test.org.jppf.node.protocol.TestScriptedTask"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.node.TestOfflineNode";
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean";
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3";
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.client.JPPFJob"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics";
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"org.jppf.client.JPPFJob"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.utils.collections.LinkedListSortedMap"[A];
	"org.jppf.queue.AbstractJPPFQueue"->"org.jppf.utils.collections.LinkedListSortedMap"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.utils.VersionUtils"[A];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.VersionUtils"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.utils.VersionUtils"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.utils.VersionUtils"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.utils.SystemUtils"[A];
	"org.jppf.io.IOHelper"->"org.jppf.utils.SystemUtils"[A];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.SystemUtils"[A];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.TaskServerConnectionHandler"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.TaskServerConnectionHandler"[A];
	"org.jppf.client.BaseJPPFClientConnection"->"org.jppf.client.TaskServerConnectionHandler"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.TaskServerConnectionHandler"[A];
	"org.jppf.node.protocol.BundleParameter";
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient";
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.BundleParameter"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.client.JobResults"[A];
	"org.jppf.client.JPPFResultCollector"->"org.jppf.client.JobResults"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JPPFJobSLA"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.JPPFJobSLA"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JPPFJobClientSLA"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.JPPFJobClientSLA"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JPPFJobMetadata"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.JPPFJobMetadata"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.utils.ConcurrentUtils"[A];
	"org.jppf.client.balancer.ClientJobStatus";
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.balancer.ClientJobStatus"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.event.JobEvent"[A];
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobEvent"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.event.JobEvent"[A];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.event.JobEvent"[A];
	"org.jppf.client.event.JobEvent.Type";
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.event.JobEvent.Type"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.event.JobEvent.Type"[A];
	"org.jppf.client.persistence.JobPersistenceException";
	"org.jppf.JPPFException";
	"org.jppf.client.persistence.JobPersistenceException"->"org.jppf.JPPFException"[C];
	"org.jppf.scripting.JPPFScriptingException"->"org.jppf.JPPFException"[C];
	"org.jppf.security.JPPFSecurityException";
	"org.jppf.security.JPPFSecurityException"->"org.jppf.JPPFException"[C];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.JPPFException"[A];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.JPPFException"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.JPPFException"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.JPPFException"[A];
	"org.jppf.client.persistence.JobPersistenceException"->"org.jppf.JPPFException"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.JPPFException"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.JPPFException"[A];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.JPPFException"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.JPPFException"[A];
	"org.jppf.comm.recovery.AbstractRecoveryConnection"->"org.jppf.JPPFException"[A];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.JPPFException"[A];
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.JPPFException"[A];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.JPPFException"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.JPPFException"[A];
	"org.jppf.management.diagnostics.HeapDumpCollectorIBM"->"org.jppf.JPPFException"[A];
	"org.jppf.management.diagnostics.HeapDumpCollectorOracle"->"org.jppf.JPPFException"[A];
	"org.jppf.node.idle.IdleDetector";
	"org.jppf.node.idle.IdleDetector"->"org.jppf.JPPFException"[A];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.JPPFException"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.JPPFException"[A];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.JPPFException"[A];
	"org.jppf.scripting.JPPFScriptingException"->"org.jppf.JPPFException"[A];
	"org.jppf.security.JPPFSecurityException"->"org.jppf.JPPFException"[A];
	"org.jppf.utils.ReflectionHelper"->"org.jppf.JPPFException"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.JPPFException"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.JPPFException"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.JPPFException"[A];
	"sample.prime.PrimeRunner"->"org.jppf.JPPFException"[A];
	"sample.test.TestTaskRunner"->"org.jppf.JPPFException"[A];
	"test.job.priority.JobPriorityRunner"->"org.jppf.JPPFException"[A];
	"test.localexecution.LocalExecutionRunner"->"org.jppf.JPPFException"[A];
	"test.serialization.Test"->"org.jppf.JPPFException"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.JPPFException"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.JPPFException"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.JPPFException"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.JPPFException"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.JPPFException"[A];
	"test.org.jppf.node.policy.TestIsInIPv4Subnet";
	"test.org.jppf.node.policy.TestIsInIPv4Subnet"->"org.jppf.JPPFException"[A];
	"test.org.jppf.node.policy.TestIsInIPv6Subnet";
	"test.org.jppf.node.policy.TestIsInIPv6Subnet"->"org.jppf.JPPFException"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.JPPFException"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.JPPFException"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.balancer.ChannelWrapperRemote"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.node.protocol.JPPFTaskBundle"[C];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.node.protocol.JPPFTaskBundle"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.node.protocol.JPPFTaskBundle"[A];
	"test.serialization.Test"->"org.jppf.node.protocol.JPPFTaskBundle"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher.NotificationTask";
	"org.jppf.node.protocol.TaskExecutionDispatcher.NotificationTask"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.node.protocol.TaskExecutionDispatcher"[A];
	"org.jppf.scheduling.JPPFScheduleHandler";
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.client.balancer.queue.JPPFPriorityQueue"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.execute.NodeTaskWrapper";
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.scheduling.JPPFScheduleHandler"[A];
	"org.jppf.client.balancer.TaskStateMap";
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.balancer.TaskStateMap"[A];
	"org.jppf.client.JobStatus";
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.JobStatus"[A];
	"org.jppf.client.event.JobStatusEvent";
	"org.jppf.client.event.JobStatusEvent"->"org.jppf.client.JobStatus"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.JobStatus"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.JobStatus"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"org.jppf.client.JobStatus"[A];
	"test.org.jppf.test.setup.common.ExecutingJobStatusListener"->"org.jppf.client.JobStatus"[A];
	"org.jppf.jca.work.JcaJobManager";
	"org.jppf.jca.work.JcaJobManager"->"org.jppf.client.balancer.JobManagerClient"[C];
	"org.jppf.client.balancer.queue.JPPFPriorityQueue"->"org.jppf.client.balancer.JobManagerClient"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.balancer.JobManagerClient"[A];
	"org.jppf.jca.work.JcaJobManager"->"org.jppf.client.balancer.JobManagerClient"[A];
	"org.jppf.load.balancer.spi.JPPFBundlerFactory";
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.load.balancer.spi.JPPFBundlerFactory"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.load.balancer.spi.JPPFBundlerFactory"[A];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.balancer.queue.TaskQueueChecker"[A];
	"org.jppf.load.balancer.spi.JPPFBundlerFactory.Defaults";
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.load.balancer.spi.JPPFBundlerFactory.Defaults"[A];
	"org.jppf.execute.ExecutorStatus";
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.execute.ExecutorStatus"[A];
	"org.jppf.execute.ExecutorChannelStatusEvent";
	"org.jppf.execute.ExecutorChannelStatusEvent"->"org.jppf.execute.ExecutorStatus"[A];
	"org.jppf.execute.__ExecutorChannel"->"org.jppf.execute.ExecutorStatus"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.execute.ExecutorStatus"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.execute.ExecutorStatus"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.impl.FixedSizeProfile"[A];
	"org.jppf.load.balancer.impl.FixedSizeBundler"->"org.jppf.load.balancer.impl.FixedSizeProfile"[A];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.impl.FixedSizeProfile"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.impl.FixedSizeProfile"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.utils.collections.SetSortedMap"[A];
	"org.jppf.queue.AbstractJPPFQueue"->"org.jppf.utils.collections.SetSortedMap"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.JPPFContextClient"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.impl.FixedSizeBundler"[A];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.impl.FixedSizeBundler"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.impl.FixedSizeBundler"[A];
	"org.jppf.server.protocol.ServerJob";
	"org.jppf.node.protocol.TaskState";
	"org.jppf.server.protocol.ServerJob"->"org.jppf.node.protocol.TaskState"[A];
	"org.jppf.server.protocol.ServerTask";
	"org.jppf.server.protocol.ServerTask"->"org.jppf.node.protocol.TaskState"[A];
	"org.jppf.client.ClassLoaderRegistrationHandler"->"org.jppf.utils.collections.SetHashMap"[A];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.utils.collections.SetHashMap"[A];
	"org.jppf.server.debug.DebugHelper";
	"org.jppf.server.debug.DebugHelper"->"org.jppf.utils.collections.SetHashMap"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.ClassServerDelegateImpl"[A];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.comm.socket.SocketInitializerImpl"[A];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.concurrent.BatchHandler"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.taskwrapper.JPPFAnnotatedTask"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.taskwrapper.JPPFAnnotatedTask"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"org.jppf.client.concurrent.JPPFCompletionService"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"sample.datasize.DataSizeRunner"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"sample.test.executor.JPPFCallableTask"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"sample.test.executor.Main"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration";
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"test.org.jppf.client.concurrent.TestJPPFCompletionService";
	"test.org.jppf.client.concurrent.TestJPPFCompletionService"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService";
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"org.jppf.client.concurrent.JPPFExecutorService"[A];
	"org.jppf.utils.HostIP";
	"org.jppf.utils.HostIP"->"org.jppf.utils.Pair"[C];
	"org.jppf.server.job.ChannelJobPair"->"org.jppf.utils.Pair"[C];
	"org.jppf.server.nio.classloader.CacheClassKey";
	"org.jppf.server.nio.classloader.CacheClassKey"->"org.jppf.utils.Pair"[C];
	"org.jppf.server.nio.nodeserver.BundleResults";
	"org.jppf.server.nio.nodeserver.BundleResults"->"org.jppf.utils.Pair"[C];
	"org.jppf.test.setup.DiagnosticsResult"->"org.jppf.utils.Pair"[C];
	"org.jppf.test.setup.JMXResult";
	"org.jppf.test.setup.JMXResult"->"org.jppf.utils.Pair"[C];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.utils.Pair"[A];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.utils.Pair"[A];
	"org.jppf.process.ProcessLauncher"->"org.jppf.utils.Pair"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.Pair"[A];
	"org.jppf.utils.HostIP"->"org.jppf.utils.Pair"[A];
	"sample.BaseDemoTask"->"org.jppf.utils.Pair"[A];
	"test.filecopy.FileCopyTask"->"org.jppf.utils.Pair"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.utils.Pair"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.utils.Pair"[A];
	"org.jppf.server.job.ChannelJobPair"->"org.jppf.utils.Pair"[A];
	"org.jppf.server.nio.classloader.CacheClassKey"->"org.jppf.utils.Pair"[A];
	"org.jppf.server.nio.nodeserver.BundleResults"->"org.jppf.utils.Pair"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.utils.Pair"[A];
	"org.jppf.test.setup.DiagnosticsResult"->"org.jppf.utils.Pair"[A];
	"org.jppf.test.setup.JMXResult"->"org.jppf.utils.Pair"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.JPPFTaskFuture"[A];
	"org.jppf.client.concurrent.JPPFCompletionService"->"org.jppf.client.concurrent.JPPFTaskFuture"[A];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.concurrent.JPPFTaskFuture"[A];
	"sample.datasize.DataSizeRunner"->"org.jppf.client.concurrent.JPPFTaskFuture"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.client.concurrent.JPPFTaskFuture"[A];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.JobConfigurationImpl"[A];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.TaskConfigurationImpl"[A];
	"test.org.jppf.client.concurrent.TestJPPFCompletionService"->"org.jppf.client.concurrent.JPPFCompletionService"[A];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.event.JobListenerAdapter"[C];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.event.JobListenerAdapter"[C];
	"sample.dist.matrix.NonBlockingMatrixRunner"->"org.jppf.client.event.JobListenerAdapter"[C];
	"org.jppf.test.scenario.resubmit.ResubmitRunner.MyJobListener";
	"org.jppf.test.scenario.resubmit.ResubmitRunner.MyJobListener"->"org.jppf.client.event.JobListenerAdapter"[C];
	"test.org.jppf.test.setup.common.CountingJobListener";
	"test.org.jppf.test.setup.common.CountingJobListener"->"org.jppf.client.event.JobListenerAdapter"[C];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.event.JobListenerAdapter"[A];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.event.JobListenerAdapter"[A];
	"sample.dist.matrix.NonBlockingMatrixRunner"->"org.jppf.client.event.JobListenerAdapter"[A];
	"org.jppf.utils.DateTimeUtils";
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.utils.DateTimeUtils"[A];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.utils.DateTimeUtils"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.utils.DateTimeUtils"[A];
	"org.jppf.scheduling.JPPFSchedule";
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.scheduling.JPPFScheduleHandler"->"org.jppf.scheduling.JPPFSchedule"[A];
	"sample.test.executor.JPPFCallableTask"->"org.jppf.scheduling.JPPFSchedule"[A];
	"sample.test.executor.Main"->"org.jppf.scheduling.JPPFSchedule"[A];
	"sample.test.TimeoutTask";
	"sample.test.TimeoutTask"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.jmx.TestJMX"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.client.concurrent.__TaskConfiguration"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.__JobClientSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.__JobCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.__JobSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.node.protocol.__Task"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.scheduling.JPPFSchedule"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.scheduling.JPPFSchedule"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.debug.Debug"[A];
	"test.org.jppf.test.setup.common.ExecutingJobStatusListener"->"org.jppf.client.event.JobStatusEvent"[A];
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.JMXConnectionPool"[A];
	"org.jppf.utils.MutableReference";
	"org.jppf.client.JPPFClient"->"org.jppf.utils.MutableReference"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFClientConnectionImpl"[A];
	"org.jppf.JPPFReconnectionNotification";
	"org.jppf.JPPFError";
	"org.jppf.JPPFReconnectionNotification"->"org.jppf.JPPFError"[C];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.JPPFError"[A];
	"org.jppf.JPPFReconnectionNotification"->"org.jppf.JPPFError"[A];
	"org.jppf.serialization.JPPFSerialization.Factory";
	"org.jppf.serialization.JPPFSerialization.Factory"->"org.jppf.JPPFError"[A];
	"org.jppf.serialization.XstreamSerialization"->"org.jppf.JPPFError"[A];
	"org.jppf.node.idle.X11IdleTimeDetector"->"org.jppf.JPPFError"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.JPPFError"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.JPPFResultCollector"[A];
	"org.jppf.comm.discovery.JPPFMulticastReceiver.Receiver"->"org.jppf.comm.discovery.JPPFMulticastReceiver"[A];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.comm.discovery.JPPFMulticastReceiver"[A];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.comm.discovery.JPPFMulticastReceiver"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.NodeRefreshHandler"[A];
	"org.jppf.client.monitoring.topology.TopologyEvent.Type";
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyManager.StatusListener"[A];
	"org.jppf.client.Operator";
	"test.node.provisioning.NodeProvisioningRunner"->"org.jppf.client.Operator"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.client.Operator"[A];
	"org.jppf.io.ChannelInputSource"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.io.ChannelOutputDestination"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.io.StreamInputSource"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.io.StreamOutputDestination"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.serialization.JPPFObjectOutputStream";
	"org.jppf.serialization.JPPFObjectOutputStream"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.serialization.SerializationUtils"[A];
	"org.jppf.jca.serialization.JcaObjectSerializerImpl";
	"org.jppf.jca.serialization.JcaObjectSerializerImpl"->"org.jppf.utils.ObjectSerializerImpl"[C];
	"org.jppf.client.persistence.DefaultFilePersistenceManager"->"org.jppf.utils.ObjectSerializerImpl"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.utils.ObjectSerializerImpl"[A];
	"org.jppf.jca.serialization.JcaObjectSerializerImpl"->"org.jppf.utils.ObjectSerializerImpl"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.utils.ObjectSerializerImpl"[A];
	"org.jppf.client.persistence.DefaultFilePersistenceManager"->"org.jppf.client.persistence.JobPersistenceException"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.caching.JPPFSimpleSetCache"[A];
	"org.jppf.utils.hooks.HookInstance";
	"org.jppf.utils.hooks.HookInstance"->"org.jppf.caching.JPPFSynchronizedSoftCache"[A];
	"org.jppf.utils.collections.SoftReferenceValuesMap";
	"org.jppf.caching.JPPFSynchronizedSoftCache"->"org.jppf.utils.collections.SoftReferenceValuesMap"[A];
	"org.jppf.scripting.ScriptRunnerImpl"->"org.jppf.utils.collections.SoftReferenceValuesMap"[A];
	"org.jppf.server.nio.classloader.ClassCache"->"org.jppf.utils.collections.SoftReferenceValuesMap"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.data.transform.JPPFDataTransformFactory";
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.io.IOHelper"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.libmanagement.Downloader"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.management.CustomWrapping"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.nio.SSLNioObject"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.security.PermissionsFactory";
	"org.jppf.security.PermissionsFactory"->"org.jppf.utils.streams.StreamUtils"[A];
	"sample.test.largedata.DataReader";
	"sample.test.largedata.DataReader"->"org.jppf.utils.streams.StreamUtils"[A];
	"test.filecopy.FileCopyAction"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.jca.spi.JPPFConfigurationParser";
	"org.jppf.jca.spi.JPPFConfigurationParser"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.test.scenario.Scenario"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.test.scenario.offline.OfflineNodeRunner"->"org.jppf.utils.streams.StreamUtils"[A];
	"test.org.jppf.test.runner.TestRunListener";
	"test.org.jppf.test.runner.TestRunListener"->"org.jppf.utils.streams.StreamUtils"[A];
	"test.org.jppf.test.runner.TextResultRenderer"->"org.jppf.utils.streams.StreamUtils"[A];
	"test.org.jppf.test.setup.GenericProcessLauncher";
	"test.org.jppf.test.setup.GenericProcessLauncher"->"org.jppf.utils.streams.StreamUtils"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.comm.recovery.AbstractRecoveryConnection"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.io.MultipleBuffersLocation"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.location.BufferListLocation"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.utils.streams.MultipleBuffersInputStream";
	"org.jppf.utils.streams.MultipleBuffersInputStream"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.utils.streams.MultipleBuffersOutputStream"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.utils.JPPFBuffer"[A];
	"test.org.jppf.utils.TestJPPFConfiguration.TestConfigurationSource";
	"test.org.jppf.utils.TestJPPFConfiguration.TestConfigurationSource"->"org.jppf.utils.JPPFBuffer"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.CompositeResourceWrapper"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.classloader.CompositeResourceWrapper"[A];
	"org.jppf.classloader.ResourceFuture";
	"org.jppf.classloader.CompositeResourceWrapper"->"org.jppf.classloader.ResourceFuture"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ResourceFuture"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.classloader.ResourceFuture"[A];
	"org.jppf.classloader.DelegationModel";
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.management.forwarding.__JPPFNodeForwardingMBean"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.management.__JPPFNodeAdminMBean"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.classloader.DelegationModel"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.classloader.DelegationModel"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.classloader.DelegationModel"[A];
	"org.jppf.utils.TraversalList";
	"org.jppf.classloader.JPPFResourceWrapper"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.utils.TraversalList"[A];
	"test.serialization.Test"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.node.protocol.__TaskBundle"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.utils.TraversalList"[A];
	"org.jppf.JPPFUnsupportedOperationException";
	"org.jppf.classloader.ResourceFuture"->"org.jppf.JPPFUnsupportedOperationException"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.JPPFUnsupportedOperationException"[A];
	"org.jppf.client.taskwrapper.TaskObjectWrapper.MethodType";
	"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper.MethodType"[A];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper.MethodType"[A];
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper.MethodType"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"[A];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.client.taskwrapper.PrivilegedConstructorAction"[A];
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.client.taskwrapper.PrivilegedConstructorAction"[A];
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.client.taskwrapper.PrivilegedMethodAction"[A];
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.client.taskwrapper.PrivilegedMethodAction"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.CallableTaskWrapper"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.RunnableTaskWrapper"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.PojoTaskWrapper"[A];
	"org.jppf.client.taskwrapper.PojoTaskWrapper"->"org.jppf.utils.ReflectionUtils"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"org.jppf.utils.ReflectionUtils"[A];
	"org.jppf.server.nio.classloader.ClassCache"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.classloader.TestResourceLookup"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.client.event.TestJobListener"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.client.TestConnectionPool"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.client.TestJPPFJob"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.node.protocol.TestScriptedTask"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.utils.ReflectionUtils"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"org.jppf.utils.ReflectionUtils"[A];
	"org.jppf.net.IPv4AddressNetmask";
	"org.jppf.comm.discovery.IPFilter"->"org.jppf.net.IPv4AddressNetmask"[A];
	"org.jppf.net.IPv6AddressNetmask";
	"org.jppf.comm.discovery.IPFilter"->"org.jppf.net.IPv6AddressNetmask"[A];
	"org.jppf.net.RangePattern";
	"org.jppf.net.AbstractIPAddressPattern"->"org.jppf.net.RangePattern"[C];
	"org.jppf.comm.discovery.IPFilter"->"org.jppf.net.RangePattern"[A];
	"org.jppf.net.AbstractIPAddressPattern"->"org.jppf.net.RangePattern"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.comm.discovery.JPPFBroadcaster"[A];
	"org.jppf.utils.ComparisonUtils";
	"org.jppf.comm.discovery.JPPFConnectionInformation"->"org.jppf.utils.ComparisonUtils"[A];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.comm.discovery.JPPFMulticastReceiver.Receiver"[A];
	"org.jppf.comm.recovery.ClientConnectionEvent";
	"org.jppf.comm.recovery.ClientConnectionEvent"->"org.jppf.comm.recovery.ClientConnection"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.comm.recovery.ClientConnection"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.comm.recovery.ClientConnection"[A];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.recovery.ClientConnectionEvent"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.comm.recovery.ClientConnectionEvent"[A];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.socket.BootstrapSocketClient"[A];
	"org.jppf.comm.recovery.ServerConnection"->"org.jppf.comm.socket.BootstrapSocketClient"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.comm.socket.BootstrapSocketClient"[A];
	"org.jppf.comm.recovery.Reaper";
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.comm.recovery.Reaper"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.comm.recovery.Reaper"[A];
	"org.jppf.comm.recovery.Reaper"->"org.jppf.comm.recovery.RecoveryServer"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.comm.recovery.RecoveryServer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.comm.recovery.RecoveryServer"[A];
	"org.jppf.comm.recovery.ReaperEvent";
	"org.jppf.comm.recovery.ReaperEvent"->"org.jppf.comm.recovery.ServerConnection"[A];
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.comm.recovery.ServerConnection"[A];
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.comm.socket.BootstrapObjectSerializer"[A];
	"org.jppf.management.CustomWrapping"->"org.jppf.comm.socket.BootstrapObjectSerializer"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.comm.socket.BootstrapObjectSerializer"[A];
	"org.jppf.utils.streams.JPPFByteArrayOutputStream";
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.utils.streams.JPPFByteArrayOutputStream"[A];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.utils.streams.JPPFByteArrayOutputStream"[A];
	"org.jppf.utils.streams.StreamUtils"->"org.jppf.utils.streams.JPPFByteArrayOutputStream"[A];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.serialization.JPPFSerialization.Factory"[A];
	"org.jppf.utils.JPPFConfiguration"->"org.jppf.serialization.JPPFSerialization.Factory"[A];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.serialization.JPPFSerialization.Factory"[A];
	"org.jppf.jca.serialization.JcaObjectSerializerImpl"->"org.jppf.serialization.JPPFSerialization.Factory"[A];
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.comm.socket.SocketChannelClient"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.comm.socket.SocketChannelClient"[A];
	"org.jppf.io.IOHelper"->"org.jppf.data.transform.JPPFDataTransformFactory"[A];
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.utils.streams.MultipleBuffersOutputStream"[A];
	"org.jppf.io.IOHelper"->"org.jppf.utils.streams.MultipleBuffersOutputStream"[A];
	"org.jppf.location.BufferListLocation"->"org.jppf.utils.streams.MultipleBuffersOutputStream"[A];
	"org.jppf.doc.ParametersHandler";
	"org.jppf.doc.ParameterNames";
	"org.jppf.doc.ParametersHandler"->"org.jppf.doc.ParameterNames"[A];
	"org.jppf.JPPFNodeReconnectionNotification";
	"org.jppf.JPPFNodeReconnectionNotification"->"org.jppf.JPPFReconnectionNotification"[C];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.JPPFReconnectionNotification"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.JPPFReconnectionNotification"[A];
	"org.jppf.JPPFNodeReconnectionNotification"->"org.jppf.JPPFReconnectionNotification"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.NodeTaskWrapper"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.ThreadManagerThreadPool"[A];
	"org.jppf.execute.ExecutionInfo";
	"org.jppf.execute.AbstractThreadManager"->"org.jppf.execute.ExecutionInfo"[A];
	"org.jppf.execute.CpuTimeCollector";
	"org.jppf.execute.CpuTimeCollector"->"org.jppf.execute.ExecutionInfo"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.execute.ExecutionInfo"[A];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.ExecutionInfo"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.execute.ExecutionInfo"[A];
	"org.jppf.execute.AbstractThreadManager"->"org.jppf.execute.CpuTimeCollector"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.execute.CpuTimeCollector"[A];
	"org.jppf.execute.ThreadManagerForkJoin"->"org.jppf.execute.CpuTimeCollector"[A];
	"org.jppf.execute.ThreadManagerThreadPool"->"org.jppf.execute.CpuTimeCollector"[A];
	"org.jppf.execute.TimeoutTimerTask";
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.execute.TimeoutTimerTask"[A];
	"org.jppf.execute.ThreadManagerForkJoin"->"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"[A];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.ThreadManagerForkJoin.FJUsedClassLoader"[A];
	"org.jppf.io.FileInputSource";
	"org.jppf.io.FileInputSource"->"org.jppf.io.ChannelInputSource"[C];
	"org.jppf.io.FileInputSource"->"org.jppf.io.ChannelInputSource"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.io.ChannelInputSource"[A];
	"org.jppf.utils.pooling.DirectBufferPool";
	"org.jppf.io.ChannelInputSource"->"org.jppf.utils.pooling.DirectBufferPool"[A];
	"org.jppf.io.ChannelOutputDestination"->"org.jppf.utils.pooling.DirectBufferPool"[A];
	"org.jppf.io.FileOutputDestination";
	"org.jppf.io.FileOutputDestination"->"org.jppf.io.ChannelOutputDestination"[C];
	"org.jppf.io.FileOutputDestination"->"org.jppf.io.ChannelOutputDestination"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.io.ChannelOutputDestination"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.FileDataLocation"[A];
	"org.jppf.utils.streams.NotifyingOutputStream";
	"org.jppf.io.IOHelper"->"org.jppf.utils.streams.NotifyingOutputStream"[A];
	"org.jppf.io.IOHelper"->"org.jppf.utils.streams.MultipleBuffersInputStream"[A];
	"org.jppf.location.BufferListLocation"->"org.jppf.utils.streams.MultipleBuffersInputStream"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.MultipleBuffersLocation"[A];
	"org.jppf.management.CustomWrapping"->"org.jppf.io.MultipleBuffersLocation"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.io.MultipleBuffersLocation"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.io.MultipleBuffersLocation"[A];
	"org.jppf.nio.SSLNioObject"->"org.jppf.io.MultipleBuffersLocation"[A];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.io.MultipleBuffersLocation"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.SocketWrapperInputSource"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.io.SocketWrapperInputSource"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.SocketWrapperOutputDestination"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.io.SocketWrapperOutputDestination"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.OverflowDetectorCallback"[A];
	"org.jppf.io.SerializationOverflowException";
	"org.jppf.io.OverflowDetectorCallback"->"org.jppf.io.SerializationOverflowException"[A];
	"org.jppf.job.TaskReturnEvent";
	"org.jppf.job.JobReturnReason";
	"org.jppf.job.TaskReturnEvent"->"org.jppf.job.JobReturnReason"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.job.JobReturnReason"[A];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction";
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.job.JobReturnReason"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.job.JobReturnReason"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.job.JobReturnReason"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnEvent"[A];
	"org.jppf.JPPFInitializer";
	"org.jppf.node.NodeRunner"->"org.jppf.JPPFInitializer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.JPPFInitializer"[A];
	"org.jppf.JPPFRuntimeException";
	"org.jppf.server.peer.PeerNode"->"org.jppf.JPPFRuntimeException"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.JPPFRuntimeException"[A];
	"org.jppf.libmanagement.Downloader"->"org.jppf.location.URLLocation"[A];
	"org.jppf.utils.configuration.ScriptHandler"->"org.jppf.location.URLLocation"[A];
	"sample.test.FileDownloadTestTask";
	"sample.test.FileDownloadTestTask"->"org.jppf.location.URLLocation"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.location.URLLocation"[A];
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.location.URLLocation"[A];
	"org.jppf.libmanagement.Downloader"->"org.jppf.location.FileLocation"[A];
	"sample.dist.commandline.ListDirectoryTask"->"org.jppf.location.FileLocation"[A];
	"sample.dist.commandline.TestTask"->"org.jppf.location.FileLocation"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.location.FileLocation"[A];
	"test.filecopy.FileCopyRunner"->"org.jppf.location.FileLocation"[A];
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.location.FileLocation"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.location.FileLocation"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.location.FileLocation"[A];
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.location.FileLocation"[A];
	"org.jppf.load.balancer.BundleDataHolder";
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.BundleDataHolder"[A];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.BundleDataHolder"[A];
	"org.jppf.load.balancer.BundlePerformanceSample";
	"org.jppf.load.balancer.BundleDataHolder"->"org.jppf.load.balancer.BundlePerformanceSample"[A];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.BundlePerformanceSample"[A];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.BundlePerformanceSample"[A];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.BundlePerformanceSample"[A];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.impl.NodeThreadsProfile"[A];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.impl.NodeThreadsProfile"[A];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.impl.ProportionalTuneProfile"[A];
	"org.jppf.load.balancer.impl.NodeSimulator";
	"org.jppf.load.balancer.impl.NodeSimulator"->"org.jppf.load.balancer.impl.ProportionalTuneProfile"[A];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.impl.ProportionalTuneProfile"[A];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.impl.RLProfile"[A];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.impl.RLProfile"[A];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.impl.AnnealingTuneProfile"[A];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.impl.AnnealingTuneProfile"[A];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.impl.AnnealingTuneProfile"[A];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.impl.AutoTunedBundler"[A];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.impl.AutoTunedBundler"[A];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"[A];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.impl.ProportionalBundler"[A];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.impl.RLBundler"[A];
	"sample.dist.commandline.ListDirectoryTask"->"org.jppf.location.MemoryLocation"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.location.MemoryLocation"[A];
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.location.MemoryLocation"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.location.MemoryLocation"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.location.MemoryLocation"[A];
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.location.MemoryLocation"[A];
	"org.jppf.utils.streams.BoundedByteArrayOutputStream";
	"org.jppf.location.MemoryLocation"->"org.jppf.utils.streams.BoundedByteArrayOutputStream"[A];
	"org.jppf.logging.jdk.JmxHandler";
	"org.jppf.logging.jmx.JmxMessageNotifier";
	"org.jppf.logging.jdk.JmxHandler"->"org.jppf.logging.jmx.JmxMessageNotifier"[A];
	"org.jppf.logging.log4j.JmxAppender";
	"org.jppf.logging.log4j.JmxAppender"->"org.jppf.logging.jmx.JmxMessageNotifier"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.logging.jmx.JmxMessageNotifier"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.logging.jmx.JmxMessageNotifier"[A];
	"org.jppf.logging.jdk.JmxHandler"->"org.jppf.logging.jdk.JPPFLogFormatter"[A];
	"org.jppf.logging.jdk.JPPFFileHandler";
	"org.jppf.logging.jdk.JPPFFileHandler"->"org.jppf.logging.jdk.JPPFLogFormatter"[A];
	"org.jppf.logging.jmx.JmxMessageNotifier"->"org.jppf.logging.jmx.JmxLoggerImpl"[A];
	"org.jppf.management.AbstractMBeanStaticProxy";
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[C];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.management.AbstractMBeanStaticProxy"[A];
	"org.jppf.management.JMXDriverConnectionWrapper"->"org.jppf.management.JMXConnectionWrapper"[C];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JMXConnectionWrapper"[C];
	"org.jppf.management.AbstractMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.JMXConnectionThread"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.JMXDriverConnectionWrapper"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.JMXWrapperEvent";
	"org.jppf.management.JMXWrapperEvent"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.test.setup.JmxAwareCallable"->"org.jppf.management.JMXConnectionWrapper"[A];
	"org.jppf.management.NodeSelector.AllNodesSelector";
	"org.jppf.management.NodeSelector.AllNodesSelector"->"org.jppf.management.AllNodesSelector"[C];
	"org.jppf.management.NodeSelector.AllNodesSelector"->"org.jppf.management.AllNodesSelector"[A];
	"test.jmx.TestJMX"->"org.jppf.management.AllNodesSelector"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.AllNodesSelector"[A];
	"test.org.jppf.management.forwarding.AbstractTestJPPFNodeForwardingMBean"->"org.jppf.management.AllNodesSelector"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.AllNodesSelector"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.management.AllNodesSelector"[A];
	"org.jppf.management.JMXMPServer"->"org.jppf.management.CustomWrapping"[A];
	"org.jppf.management.diagnostics.ThreadInformation";
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[A];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[A];
	"org.jppf.management.diagnostics.__ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[A];
	"org.jppf.management.diagnostics.LockInformation";
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.LockInformation"[A];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.LockInformation"[A];
	"org.jppf.management.diagnostics.StackFrameInformation";
	"org.jppf.management.diagnostics.StackFrameInformation"->"org.jppf.management.diagnostics.LockInformation"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.LockInformation"[A];
	"org.jppf.management.diagnostics.ThreadInformation"->"org.jppf.management.diagnostics.LockInformation"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.CPUTimeCollector"[A];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.Diagnostics"[A];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.Diagnostics"[A];
	"org.jppf.management.diagnostics.MemoryUsageInformation";
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.MemoryUsageInformation"[A];
	"org.jppf.management.diagnostics.MemoryInformation";
	"org.jppf.management.diagnostics.MemoryInformation"->"org.jppf.management.diagnostics.MemoryUsageInformation"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.MemoryInformation"[A];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.MemoryInformation"[A];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.MemoryInformation"[A];
	"org.jppf.management.diagnostics.__DiagnosticsMBean"->"org.jppf.management.diagnostics.MemoryInformation"[A];
	"org.jppf.utils.CloseableHandler";
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.utils.CloseableHandler"[A];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.utils.CloseableHandler"[A];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.utils.CloseableHandler"[A];
	"org.jppf.management.diagnostics.HeapDumpCollector.Factory";
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.HeapDumpCollector.Factory"[A];
	"org.jppf.management.diagnostics.HeapDumpCollector.Factory"->"org.jppf.management.diagnostics.HeapDumpCollectorIBM"[A];
	"org.jppf.management.diagnostics.HeapDumpCollector.Factory"->"org.jppf.management.diagnostics.HeapDumpCollectorOracle"[A];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.StackFrameInformation"[A];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.StackFrameInformation"[A];
	"org.jppf.management.NodeSelector.ExecutionPolicySelector"->"org.jppf.management.ExecutionPolicySelector"[C];
	"org.jppf.management.NodeSelector.ExecutionPolicySelector"->"org.jppf.management.ExecutionPolicySelector"[A];
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.management.ExecutionPolicySelector"[A];
	"test.node.provisioning.NodeProvisioningRunner"->"org.jppf.management.ExecutionPolicySelector"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.ExecutionPolicySelector"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.ExecutionPolicySelector"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.management.ExecutionPolicySelector"[A];
	"org.jppf.management.forwarding.InternalNotificationFilter";
	"org.jppf.management.forwarding.NodeForwardingHelper";
	"org.jppf.management.forwarding.InternalNotificationFilter"->"org.jppf.management.forwarding.NodeForwardingHelper"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.NodeForwardingHelper"[A];
	"org.jppf.management.forwarding.JPPFNodeForwarding"->"org.jppf.management.forwarding.NodeForwardingHelper"[A];
	"org.jppf.management.forwarding.JPPFNodeForwardingNotification";
	"org.jppf.management.forwarding.InternalNotificationFilter"->"org.jppf.management.forwarding.JPPFNodeForwardingNotification"[A];
	"test.jmx.TestJMX.NodeNotificationListener";
	"test.jmx.TestJMX.NodeNotificationListener"->"org.jppf.management.forwarding.JPPFNodeForwardingNotification"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.JPPFNodeForwardingNotification"[A];
	"test.org.jppf.test.setup.common.NotifyingTaskListener";
	"test.org.jppf.test.setup.common.NotifyingTaskListener"->"org.jppf.management.forwarding.JPPFNodeForwardingNotification"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.management.forwarding.JPPFNodeForwardingNotification"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.management.forwarding.JPPFNodeForwardingNotification"[A];
	"org.jppf.management.forwarding.NotificationListenerWrapper";
	"org.jppf.management.forwarding.InternalNotificationFilter"->"org.jppf.management.forwarding.NotificationListenerWrapper"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.NotificationListenerWrapper"[A];
	"org.jppf.management.JMXServerFactory";
	"org.jppf.management.JMXServerFactory"->"org.jppf.management.JMXMPServer"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"test.jmx.JmxLogging"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.management.forwarding.JPPFNodeForwarding"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler";
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler.JMXInitializationTask";
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler.JMXInitializationTask"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"test.org.jppf.management.TestJMXConnectionWrapper";
	"test.org.jppf.management.TestJMXConnectionWrapper"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"org.jppf.management.JMXNodeConnectionWrapper"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.management.JMXServerFactory"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.management.JMXServerFactory"[A];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState.ConnectionState"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.management.JPPFNodeState.ConnectionState"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.JPPFNodeState.ConnectionState"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeState.ConnectionState"[A];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState.ExecutionState"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.management.JPPFNodeState.ExecutionState"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.JPPFNodeState.ExecutionState"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeState.ExecutionState"[A];
	"org.jppf.utils.VersionUtils.Version";
	"org.jppf.utils.VersionUtils"->"org.jppf.utils.VersionUtils.Version"[A];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.VersionUtils.Version"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.management.spi.JPPFMBeanProviderManager"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.management.spi.JPPFMBeanProviderManager"[A];
	"org.jppf.utils.hooks.Hook";
	"org.jppf.management.spi.JPPFMBeanProviderManager"->"org.jppf.utils.hooks.Hook"[A];
	"org.jppf.management.JPPFNodeTaskMonitor.NotificationSender";
	"org.jppf.management.TaskExecutionNotification";
	"org.jppf.management.JPPFNodeTaskMonitor.NotificationSender"->"org.jppf.management.TaskExecutionNotification"[A];
	"test.org.jppf.test.setup.common.NotifyingTaskListener"->"org.jppf.management.TaskExecutionNotification"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.NodeNotificationListener";
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.NodeNotificationListener"->"org.jppf.management.TaskExecutionNotification"[A];
	"org.jppf.management.TaskInformation";
	"org.jppf.management.TaskExecutionNotification"->"org.jppf.management.TaskInformation"[A];
	"org.jppf.node.event.TaskExecutionEvent";
	"org.jppf.node.event.TaskExecutionEvent"->"org.jppf.management.TaskInformation"[A];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.management.TaskInformation"[A];
	"org.jppf.management.JPPFNodeTaskMonitor.NotificationSender"->"org.jppf.management.TaskInformation"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"org.jppf.management.TaskInformation"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.NodeNotificationListener"->"org.jppf.management.TaskInformation"[A];
	"org.jppf.net.PatternConfiguration";
	"org.jppf.net.AbstractIPAddressPattern"->"org.jppf.net.PatternConfiguration"[A];
	"org.jppf.net.IPv4AddressPattern"->"org.jppf.net.PatternConfiguration"[A];
	"org.jppf.net.IPv6AddressPattern"->"org.jppf.net.PatternConfiguration"[A];
	"org.jppf.utils.RegexUtils";
	"org.jppf.net.IPv4AddressNetmask"->"org.jppf.utils.RegexUtils"[A];
	"org.jppf.net.IPv6AddressNetmask"->"org.jppf.utils.RegexUtils"[A];
	"org.jppf.net.RangePattern"->"org.jppf.utils.RegexUtils"[A];
	"org.jppf.net.IPv4AddressNetmask"->"org.jppf.net.IPv4AddressPattern"[C];
	"org.jppf.net.IPv4AddressNetmask"->"org.jppf.net.IPv4AddressPattern"[A];
	"org.jppf.net.IPv6AddressNetmask"->"org.jppf.net.IPv6AddressPattern"[C];
	"org.jppf.net.IPv6AddressNetmask"->"org.jppf.net.IPv6AddressPattern"[A];
	"org.jppf.utils.Range";
	"org.jppf.net.IPv6AddressPattern"->"org.jppf.utils.Range"[A];
	"org.jppf.net.PatternConfiguration"->"org.jppf.utils.Range"[A];
	"org.jppf.net.RangePattern"->"org.jppf.utils.Range"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.utils.Range"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.utils.Range"[A];
	"test.org.jppf.utils.TestRange";
	"test.org.jppf.utils.TestRange"->"org.jppf.utils.Range"[A];
	"org.jppf.classloader.LocalClassLoaderChannel"->"org.jppf.nio.AbstractLocalChannelWrapper"[C];
	"org.jppf.server.nio.nodeserver.LocalNodeChannel";
	"org.jppf.server.nio.nodeserver.LocalNodeChannel"->"org.jppf.nio.AbstractLocalChannelWrapper"[C];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.classloader.LocalClassLoaderChannel"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.classloader.LocalResourceRequest"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeChannel"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.nio.AbstractLocalChannelWrapper"[A];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.utils.SimpleObjectLock"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.utils.SimpleObjectLock"[A];
	"org.jppf.nio.SSLHandler";
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.SSLHandler"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.SSLHandler"[A];
	"org.jppf.nio.SSLNioObject"->"org.jppf.nio.SSLHandler"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.nio.SSLHandler"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.nio.SSLHandler"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.SSLNioObject"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.PlainNioObject"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.PlainNioObject"[A];
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.BaseNioMessage"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.BaseNioMessage"[A];
	"org.jppf.server.nio.classloader.node.NodeClassNioServer"->"org.jppf.nio.ChannelSelectorThread"[A];
	"org.jppf.nio.NioConstants";
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.nio.NioConstants"[A];
	"org.jppf.nio.NioServer"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.nio.StateTransitionTask"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeContext"->"org.jppf.nio.StateTransitionManager"[A];
	"org.jppf.nio.NioTransition";
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioTransition"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.NioTransition"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.SelectionKeyWrapper"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.SelectionKeyWrapper"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.nio.SelectionKeyWrapper"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.nio.SelectionKeyWrapper"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.nio.SelectionKeyWrapper"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.StateTransitionTask"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher.NotificationTask"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.node.event.__TaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[A];
	"org.jppf.node.idle.IdleDetectionTask";
	"org.jppf.node.idle.IdleDetector"->"org.jppf.node.idle.IdleDetectionTask"[A];
	"org.jppf.node.idle.IdleStateEvent";
	"org.jppf.node.idle.IdleStateEvent"->"org.jppf.node.idle.IdleDetectionTask"[A];
	"org.jppf.node.idle.IdleState";
	"org.jppf.node.idle.IdleDetectionTask"->"org.jppf.node.idle.IdleState"[A];
	"org.jppf.process.ProcessLauncher"->"org.jppf.node.idle.IdleDetector"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.AtLeast"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.node.policy.AtLeast"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.AtMost"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.BetweenEE"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.BetweenEI"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.BetweenIE"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.BetweenII"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.Contains"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.node.policy.Contains"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"org.jppf.node.policy.Contains"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.Equal"[A];
	"sample.cascading.CascadingTestRunner"->"org.jppf.node.policy.Equal"[A];
	"sample.cascading.Task1"->"org.jppf.node.policy.Equal"[A];
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.node.policy.Equal"[A];
	"test.node.provisioning.NodeProvisioningRunner"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.server.peer.TestMultiServer";
	"test.org.jppf.server.peer.TestMultiServer"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.server.peer.TestMultiServerWithSSL";
	"test.org.jppf.server.peer.TestMultiServerWithSSL"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.node.policy.Equal"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.node.policy.Equal"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy.AndRule"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy.AndRule"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy.NotRule"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy.NotRule"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy.OrRule"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy.OrRule"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy.XorRule"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy.XorRule"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.PolicyContext"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"org.jppf.node.policy.PolicyContext"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.IsInIPv4Subnet"[A];
	"test.org.jppf.node.policy.TestIsInIPv4Subnet"->"org.jppf.node.policy.IsInIPv4Subnet"[A];
	"org.jppf.node.policy.IsInIPv4Subnet"->"org.jppf.node.policy.IsInIPv6Subnet"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.IsInIPv6Subnet"[A];
	"test.org.jppf.node.policy.TestIsInIPv6Subnet"->"org.jppf.node.policy.IsInIPv6Subnet"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.LessThan"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.MoreThan"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.OneOf"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.node.policy.OneOf"[A];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.PolicyBuilder"[A];
	"org.jppf.node.policy.PolicyDescriptor";
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[A];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.PolicyDescriptor"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.RegExp"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ScriptedPolicy"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.policy.ScriptedPolicy"[A];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.Preference"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.policy.Preference"[A];
	"test.org.jppf.node.policy.TestIsInIPv4Subnet"->"org.jppf.node.policy.PolicyParser"[A];
	"test.org.jppf.node.policy.TestIsInIPv6Subnet"->"org.jppf.node.policy.PolicyParser"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.policy.PolicyParser"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.policy.PolicyParser"[A];
	"org.jppf.utils.JPPFErrorReporter";
	"org.jppf.node.policy.PolicyParser"->"org.jppf.utils.JPPFErrorReporter"[A];
	"org.jppf.utils.SchemaValidator"->"org.jppf.utils.JPPFErrorReporter"[A];
	"org.jppf.utils.SchemaValidator.ValidatorErrorHandler";
	"org.jppf.utils.SchemaValidator.ValidatorErrorHandler"->"org.jppf.utils.JPPFErrorReporter"[A];
	"org.jppf.utils.SchemaValidator.ValidatorErrorHandler"->"org.jppf.utils.SchemaValidator"[A];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.utils.SchemaValidator"[A];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.ClassPathImpl"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.ClassPathImpl"[A];
	"org.jppf.process.ProcessWrapperEvent";
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.process.ProcessWrapperEvent"[A];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapperEvent"[A];
	"org.jppf.process.ProcessWrapper";
	"org.jppf.process.ProcessWrapper"->"org.jppf.process.ProcessWrapperEvent"[A];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.process.ProcessWrapperEvent"[A];
	"test.run.jboss.JBossTask"->"org.jppf.process.ProcessWrapperEvent"[A];
	"org.jppf.process.ProcessWrapper.StreamHandler";
	"org.jppf.process.ProcessWrapper.StreamHandler"->"org.jppf.process.ProcessWrapper"[A];
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.process.ProcessWrapper"[A];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapper"[A];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.process.ProcessWrapper"[A];
	"test.org.jppf.test.setup.GenericProcessLauncher"->"org.jppf.process.ProcessWrapper"[A];
	"org.jppf.server.node.DefaultSerializationExceptionHook"->"org.jppf.node.protocol.JPPFExceptionResult"[A];
	"org.jppf.node.protocol.JPPFJobMetadata"->"org.jppf.utils.collections.MetadataImpl"[C];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.utils.collections.MetadataImpl"[C];
	"org.jppf.node.protocol.MemoryMapDataProvider"->"org.jppf.utils.collections.MetadataImpl"[C];
	"org.jppf.node.protocol.JPPFJobMetadata"->"org.jppf.utils.collections.MetadataImpl"[A];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.utils.collections.MetadataImpl"[A];
	"org.jppf.node.protocol.MemoryMapDataProvider"->"org.jppf.utils.collections.MetadataImpl"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"sample.test.executor.Main"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"sample.test.TestTaskRunner"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.node.protocol.MemoryMapDataProvider"[A];
	"test.org.jppf.node.protocol.TestScriptedTask"->"org.jppf.node.protocol.ScriptedTask"[A];
	"org.jppf.node.protocol.SendResultsStrategyConstants";
	"org.jppf.server.protocol.SendResultsStrategy.SendAllResultsStrategy"->"org.jppf.node.protocol.SendResultsStrategyConstants"[A];
	"org.jppf.server.protocol.SendResultsStrategy.SendNodeResultsStrategy"->"org.jppf.node.protocol.SendResultsStrategyConstants"[A];
	"org.jppf.server.protocol.SendResultsStrategyManager";
	"org.jppf.server.protocol.SendResultsStrategyManager"->"org.jppf.node.protocol.SendResultsStrategyConstants"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.protocol.TaskExecutionDispatcher.NotificationTask"[A];
	"org.jppf.process.LauncherListener";
	"org.jppf.node.NodeRunner"->"org.jppf.process.LauncherListener"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.process.LauncherListener"[A];
	"org.jppf.process.ProcessCommands";
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessCommands"[A];
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"->"org.jppf.process.ProcessCommands"[A];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.process.ProcessCommands"[A];
	"org.jppf.node.NodeLauncher";
	"org.jppf.node.NodeLauncher"->"org.jppf.process.ProcessLauncher"[A];
	"org.jppf.server.DriverLauncher";
	"org.jppf.server.DriverLauncher"->"org.jppf.process.ProcessLauncher"[A];
	"org.jppf.process.ProcessWrapper"->"org.jppf.process.ProcessWrapper.StreamHandler"[A];
	"org.jppf.scripting.ScriptRunnerFactory"->"org.jppf.scripting.ScriptRunnerPool"[A];
	"org.jppf.scripting.ScriptRunnerPool"->"org.jppf.scripting.ScriptRunnerImpl"[A];
	"org.jppf.security.JPPFPermissions";
	"org.jppf.security.PermissionsFactory"->"org.jppf.security.JPPFPermissions"[A];
	"org.jppf.security.JPPFPolicy";
	"org.jppf.security.JPPFPermissions"->"org.jppf.security.JPPFPolicy"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.security.JPPFPolicy"[A];
	"org.jppf.security.JPPFPolicy"->"org.jppf.security.PermissionsFactory"[A];
	"org.jppf.serialization.DeserializationCaches";
	"org.jppf.serialization.ClassDescriptor";
	"org.jppf.serialization.DeserializationCaches"->"org.jppf.serialization.ClassDescriptor"[A];
	"org.jppf.serialization.Deserializer"->"org.jppf.serialization.ClassDescriptor"[A];
	"org.jppf.serialization.FieldDescriptor";
	"org.jppf.serialization.FieldDescriptor"->"org.jppf.serialization.ClassDescriptor"[A];
	"org.jppf.serialization.Serializer";
	"org.jppf.serialization.Serializer"->"org.jppf.serialization.ClassDescriptor"[A];
	"org.jppf.serialization.ClassDescriptor"->"org.jppf.serialization.FieldDescriptor"[A];
	"org.jppf.serialization.DeserializationCaches"->"org.jppf.serialization.FieldDescriptor"[A];
	"org.jppf.serialization.SerializationReflectionHelper";
	"org.jppf.serialization.ClassDescriptor"->"org.jppf.serialization.SerializationReflectionHelper"[A];
	"org.jppf.serialization.Deserializer"->"org.jppf.serialization.SerializationReflectionHelper"[A];
	"org.jppf.serialization.Serializer"->"org.jppf.serialization.SerializationReflectionHelper"[A];
	"org.jppf.serialization.JPPFSerialization.Factory"->"org.jppf.serialization.DefaultJavaSerialization"[A];
	"org.jppf.serialization.DefaultJPPFSerialization"->"org.jppf.serialization.JPPFObjectOutputStream"[A];
	"test.serialization.Test"->"org.jppf.serialization.JPPFObjectOutputStream"[A];
	"org.jppf.serialization.JPPFObjectInputStream";
	"org.jppf.serialization.DefaultJPPFSerialization"->"org.jppf.serialization.JPPFObjectInputStream"[A];
	"test.serialization.Test"->"org.jppf.serialization.JPPFObjectInputStream"[A];
	"org.jppf.serialization.Deserializer"->"org.jppf.serialization.DeserializationCaches"[A];
	"org.jppf.serialization.SerializationCaches";
	"org.jppf.serialization.DeserializationCaches"->"org.jppf.serialization.SerializationCaches"[A];
	"org.jppf.serialization.Serializer"->"org.jppf.serialization.SerializationCaches"[A];
	"org.jppf.serialization.JPPFObjectInputStream"->"org.jppf.serialization.Deserializer"[A];
	"org.jppf.serialization.Deserializer"->"org.jppf.serialization.Serializer"[A];
	"org.jppf.serialization.JPPFObjectOutputStream"->"org.jppf.serialization.Serializer"[A];
	"org.jppf.serialization.JPPFGetField";
	"org.jppf.serialization.JPPFObjectInputStream"->"org.jppf.serialization.JPPFGetField"[A];
	"org.jppf.serialization.JPPFPutField";
	"org.jppf.serialization.JPPFObjectOutputStream"->"org.jppf.serialization.JPPFPutField"[A];
	"org.jppf.ssl.SSLConfigurationException";
	"org.jppf.ssl.FileStoreSource"->"org.jppf.ssl.SSLConfigurationException"[A];
	"org.jppf.ssl.PlainTextPassword";
	"org.jppf.ssl.PlainTextPassword"->"org.jppf.ssl.SSLConfigurationException"[A];
	"org.jppf.utils.base64.Base64Decoding";
	"org.jppf.utils.base64.Base64";
	"org.jppf.utils.base64.Base64Decoding"->"org.jppf.utils.base64.Base64"[A];
	"org.jppf.utils.base64.Base64Encoding";
	"org.jppf.utils.base64.Base64Encoding"->"org.jppf.utils.base64.Base64"[A];
	"org.jppf.utils.base64.Base64InputStream";
	"org.jppf.utils.base64.Base64InputStream"->"org.jppf.utils.base64.Base64"[A];
	"org.jppf.utils.base64.Base64OutputStream";
	"org.jppf.utils.base64.Base64OutputStream"->"org.jppf.utils.base64.Base64"[A];
	"org.jppf.utils.base64.Base64Decoding"->"org.jppf.utils.base64.Base64InputStream"[A];
	"org.jppf.utils.base64.Base64Decoding"->"org.jppf.utils.base64.Base64OutputStream"[A];
	"org.jppf.utils.base64.Base64Encoding"->"org.jppf.utils.base64.Base64OutputStream"[A];
	"org.jppf.utils.base64.Base64InputStream"->"org.jppf.utils.base64.Base64Encoding"[A];
	"org.jppf.utils.base64.Base64OutputStream"->"org.jppf.utils.base64.Base64Encoding"[A];
	"org.jppf.utils.CloseableHandler"->"org.jppf.utils.collections.CopyOnWriteListConcurrentMap"[A];
	"org.jppf.utils.collections.AbstractCollectionMap"->"org.jppf.utils.collections.AbstractCollectionMap.CollectionMapIterator"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.utils.collections.EnumSetEnumMap"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.utils.collections.EnumSetEnumMap"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.utils.collections.EnumSetEnumMap"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.utils.collections.SetIdentityMap"[A];
	"org.jppf.utils.collections.SoftReferenceValuesMap.SoftValue";
	"org.jppf.utils.collections.SoftReferenceValuesMap"->"org.jppf.utils.collections.SoftReferenceValuesMap.SoftValue"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.utils.collections.VectorHashtable"[A];
	"org.jppf.utils.compilation.SourceCompiler";
	"org.jppf.utils.compilation.CustomClassLoader";
	"org.jppf.utils.compilation.SourceCompiler"->"org.jppf.utils.compilation.CustomClassLoader"[A];
	"org.jppf.utils.compilation.ErrorReporter";
	"org.jppf.utils.compilation.SourceCompiler"->"org.jppf.utils.compilation.ErrorReporter"[A];
	"org.jppf.utils.compilation.InMemoryFileManager";
	"org.jppf.utils.compilation.SourceCompiler"->"org.jppf.utils.compilation.InMemoryFileManager"[A];
	"test.compilation.JPPFSourceCompiler";
	"test.compilation.JPPFSourceCompiler"->"org.jppf.utils.compilation.SourceCompiler"[A];
	"test.compilation.TestCompilation";
	"test.compilation.TestCompilation"->"org.jppf.utils.compilation.SourceCompiler"[A];
	"test.generic.RegexRunner";
	"test.generic.RegexRunner"->"org.jppf.utils.configuration.ScriptHandler"[A];
	"test.generic.RegexRunner"->"org.jppf.utils.configuration.SubstitutionsHandler"[A];
	"org.jppf.utils.FileReplacerEx"->"org.jppf.utils.FileReplacer"[A];
	"org.jppf.utils.JPPFDefaultUncaughtExceptionHandler";
	"org.jppf.node.NodeRunner"->"org.jppf.utils.JPPFDefaultUncaughtExceptionHandler"[A];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.utils.JPPFDefaultUncaughtExceptionHandler"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.utils.JPPFDefaultUncaughtExceptionHandler"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.utils.JPPFDefaultUncaughtExceptionHandler"[A];
	"org.jppf.utils.JPPFThreadFactory";
	"org.jppf.utils.JPPFThreadFactory.ExceptionHandler";
	"org.jppf.utils.JPPFThreadFactory"->"org.jppf.utils.JPPFThreadFactory.ExceptionHandler"[A];
	"org.jppf.utils.pooling.DirectBufferPool"->"org.jppf.utils.pooling.DirectBufferPoolQueue"[A];
	"org.jppf.utils.PropertyType";
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.PropertyType"[A];
	"org.jppf.utils.SchemaValidator"->"org.jppf.utils.SchemaValidator.ValidatorErrorHandler"[A];
	"org.jppf.jca.serialization.JcaSerializationHelperImpl";
	"org.jppf.jca.serialization.JcaSerializationHelperImpl"->"org.jppf.utils.SerializationHelperImpl"[C];
	"org.jppf.jca.serialization.JcaSerializationHelperImpl"->"org.jppf.utils.SerializationHelperImpl"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.utils.SerializationHelperImpl"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.utils.SerializationHelperImpl"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.utils.SerializationHelperImpl"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.utils.SerializationHelperImpl"[A];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.CumulativeSnapshot"[A];
	"org.jppf.utils.stats.JPPFStatisticsEvent";
	"org.jppf.utils.stats.__JPPFStatisticsListener"->"org.jppf.utils.stats.JPPFStatisticsEvent"[A];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.SingleValueSnapshot"[A];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.NonCumulativeSnapshot"[A];
	"sample.test.deadlock.DeadlockRunner"->"org.jppf.utils.TimeMarker"[A];
	"test.filecopy.FileCopyRunner"->"org.jppf.utils.TimeMarker"[A];
	"test.filecopy.FileCopyTask"->"org.jppf.utils.TimeMarker"[A];
	"org.jppf.dotnetbridge.nodehook.DotnetBridgeHook"->"org.jppf.utils.UnmodifiableTypedProperties"[A];
	"org.jppf.node.initialization.OutputRedirectHook"->"org.jppf.utils.UnmodifiableTypedProperties"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.utils.UnmodifiableTypedProperties"[A];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.utils.UnmodifiableTypedProperties"[A];
	"sample.cascading.CascadingTestRunner"->"sample.cascading.Task1"[A];
	"sample.cascading.Task1"->"sample.cascading.Task2"[A];
	"sample.datasize.DataSizeRunner"->"sample.datasize.DataTask"[A];
	"sample.dist.broadcastjob.BroadcastJobRunner"->"sample.dist.broadcastjob.BroadcastJobRunner.BroadcastTask"[A];
	"sample.dist.commandline.CommandLineTaskRunner"->"sample.dist.commandline.ListDirectoryTask"[A];
	"sample.dist.manyjobs.ManyJobsRunner"->"sample.dist.tasklength.LongTask"[A];
	"sample.dist.tasklength.LongTaskRunner"->"sample.dist.tasklength.LongTask"[A];
	"sample.test.job.management.JobManagementTestRunner"->"sample.dist.tasklength.LongTask"[A];
	"test.jmx.TestJMX"->"sample.dist.tasklength.LongTask"[A];
	"test.job.priority.JobPriorityRunner"->"sample.dist.tasklength.LongTask"[A];
	"test.localexecution.LocalExecutionRunner"->"sample.dist.tasklength.LongTask"[A];
	"test.node.provisioning.NodeProvisioningRunner"->"sample.dist.tasklength.LongTask"[A];
	"test.serialization.Test"->"sample.dist.tasklength.LongTask"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"sample.dist.matrix.MatrixTask"[A];
	"sample.dist.matrix.MatrixRunner"->"sample.dist.matrix.MatrixTask"[A];
	"sample.dist.matrix.Matrix";
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"sample.dist.matrix.Matrix"[A];
	"sample.dist.matrix.ExtMatrixTask"->"sample.dist.matrix.Matrix"[A];
	"sample.dist.matrix.MatrixRunner"->"sample.dist.matrix.Matrix"[A];
	"sample.dist.matrix.MatrixTask"->"sample.dist.matrix.Matrix"[A];
	"sample.dist.matrix.MatrixRunner"->"sample.dist.matrix.ExtMatrixTask"[A];
	"sample.dist.taskcommunication.MyTaskRunner"->"sample.dist.taskcommunication.MyTask1"[A];
	"sample.dist.taskcommunication.MyTaskRunner"->"sample.dist.taskcommunication.MyTask2"[A];
	"sample.dist.xstream.Person";
	"sample.dist.xstream.XstreamRunner"->"sample.dist.xstream.Person"[A];
	"sample.dist.xstream.XstreamTask"->"sample.dist.xstream.Person"[A];
	"sample.dist.xstream.PhoneNumber";
	"sample.dist.xstream.Person"->"sample.dist.xstream.PhoneNumber"[A];
	"sample.dist.xstream.XstreamRunner"->"sample.dist.xstream.PhoneNumber"[A];
	"sample.dist.xstream.XstreamRunner"->"sample.dist.xstream.XstreamTask"[A];
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorld"[A];
	"sample.helloworld.HelloWorldAnnotated";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldAnnotated"[A];
	"sample.helloworld.HelloWorldAnnotatedConstructor";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldAnnotatedConstructor"[A];
	"sample.helloworld.HelloWorldAnnotatedStatic";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldAnnotatedStatic"[A];
	"sample.helloworld.HelloWorldCallable";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldCallable"[A];
	"sample.helloworld.HelloWorldPojo";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldPojo"[A];
	"sample.helloworld.HelloWorldPojoConstructor";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldPojoConstructor"[A];
	"sample.helloworld.HelloWorldPojoStatic";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldPojoStatic"[A];
	"sample.helloworld.HelloWorldRunnable";
	"sample.helloworld.HelloWorldRunner"->"sample.helloworld.HelloWorldRunnable"[A];
	"sample.prime.PrimeRunner"->"sample.prime.PrimeTask"[A];
	"sample.test.ClassNotFoundTestTask";
	"sample.test.TestTaskRunner"->"sample.test.ClassNotFoundTestTask"[A];
	"sample.test.ConstantTask";
	"sample.test.TestTaskRunner"->"sample.test.ConstantTask"[A];
	"sample.test.DB2LoadingTask";
	"sample.test.TestTaskRunner"->"sample.test.DB2LoadingTask"[A];
	"sample.test.deadlock.JobStreamImpl"->"sample.test.deadlock.DeadlockRunner"[A];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"sample.test.deadlock.DeadlockRunner"[A];
	"sample.test.deadlock.ProvisioningThread"->"sample.test.deadlock.DeadlockRunner"[A];
	"sample.test.deadlock.DeadlockRunner"->"sample.test.deadlock.JobStreamImpl"[A];
	"sample.test.deadlock.DeadlockRunner"->"sample.test.deadlock.MasterNodeMonitoringThread"[A];
	"sample.test.deadlock.DeadlockRunner"->"sample.test.deadlock.ProvisioningThread"[A];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"sample.test.deadlock.ProvisioningThread"[A];
	"sample.test.deadlock.RunOptions";
	"sample.test.deadlock.DeadlockRunner"->"sample.test.deadlock.RunOptions"[A];
	"sample.test.deadlock.JobStreamImpl"->"sample.test.deadlock.RunOptions"[A];
	"sample.test.deadlock.JobStreamImpl"->"sample.test.deadlock.MyTask"[A];
	"sample.test.ExceptionTestTask";
	"sample.test.TestTaskRunner"->"sample.test.ExceptionTestTask"[A];
	"sample.test.ExecutionReport";
	"sample.test.JPPFTestTask"->"sample.test.ExecutionReport"[A];
	"sample.test.executor.JPPFCallableTask"->"sample.test.executor.MyTask"[A];
	"sample.test.executor.Main"->"sample.test.executor.MyTask"[A];
	"sample.test.executor.Main.SimpleCountTask";
	"sample.test.executor.Main"->"sample.test.executor.Main.SimpleCountTask"[A];
	"sample.test.TestTaskRunner"->"sample.test.FileDownloadTestTask"[A];
	"sample.test.HelloJPPF.InnerTask";
	"sample.test.HelloJPPF.InnerTask"->"sample.test.HelloJPPF"[A];
	"sample.test.TestTaskRunner"->"sample.test.HelloJPPF"[A];
	"sample.test.HelloJPPF"->"sample.test.HelloJPPF.InnerTask"[A];
	"sample.test.TestTaskRunner"->"sample.test.HelloJPPF.InnerTask"[A];
	"sample.test.job.management.JobManagementTestRunner"->"sample.test.job.management.JobManagementTestRunner.MyBroadcastTask"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"sample.test.jppfcallable.MyLoggingHandler"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"sample.test.jppfcallable.MyTask"[A];
	"sample.test.jppfcallable.MyCallable"->"sample.test.jppfcallable.MyTask"[A];
	"sample.test.jppfcallable.MyTask"->"sample.test.jppfcallable.MyCallable"[A];
	"sample.test.largedata.LargeDataRunner"->"sample.test.largedata.DataReader"[A];
	"sample.test.TestTaskRunner"->"sample.test.MyTask"[A];
	"sample.test.SimpleData";
	"sample.test.MyTask"->"sample.test.SimpleData"[A];
	"sample.test.TestTaskRunner"->"sample.test.SimpleData"[A];
	"sample.test.TestTaskRunner"->"sample.test.NonSerializableAttributeTask"[A];
	"sample.test.NonSerializableAttributeTask.NonSerializable";
	"sample.test.NonSerializableAttributeTask"->"sample.test.NonSerializableAttributeTask.NonSerializable"[A];
	"sample.test.TestTaskRunner"->"sample.test.OutOfMemoryTestTask"[A];
	"sample.test.ParserTask";
	"sample.test.TestTaskRunner"->"sample.test.ParserTask"[A];
	"sample.test.profiling.ProfilingRunner"->"sample.test.profiling.EmptyTask"[A];
	"sample.test.redirect.ConsoleOutputRedirector.ThreadLocalOutputStream";
	"sample.test.redirect.ConsoleOutputRedirector";
	"sample.test.redirect.ConsoleOutputRedirector.ThreadLocalOutputStream"->"sample.test.redirect.ConsoleOutputRedirector"[A];
	"sample.test.redirect.RedirectOutputTask"->"sample.test.redirect.ConsoleOutputRedirector"[A];
	"sample.test.redirect.ConsoleOutputRedirector.RedirectPrintStream";
	"sample.test.redirect.ConsoleOutputRedirector"->"sample.test.redirect.ConsoleOutputRedirector.RedirectPrintStream"[A];
	"sample.test.redirect.ConsoleOutputRedirector"->"sample.test.redirect.ConsoleOutputRedirector.ThreadLocalOutputStream"[A];
	"sample.test.redirect.ConsoleOutputRedirector.RedirectPrintStream"->"sample.test.redirect.ConsoleOutputRedirector.ThreadLocalOutputStream"[A];
	"sample.test.redirect.RedirectOutputRunner"->"sample.test.redirect.RedirectOutputTask"[A];
	"sample.test.SecurityTestTask";
	"sample.test.TestTaskRunner"->"sample.test.SecurityTestTask"[A];
	"sample.test.TestTaskRunner"->"sample.test.TemplateJPPFTask"[A];
	"sample.test.TestAnnotatedStaticTask";
	"sample.test.TestTaskRunner"->"sample.test.TestAnnotatedStaticTask"[A];
	"sample.test.TestAnnotatedTask";
	"sample.test.TestTaskRunner"->"sample.test.TestAnnotatedTask"[A];
	"sample.test.TestTaskRunner"->"sample.test.TimeoutTask"[A];
	"test.annotated.AnnotatedRunner"->"test.annotated.AnnotatedTask"[A];
	"test.calendar.CalendarSerialization";
	"test.calendar.CalendarSerialization.DeserializationThread";
	"test.calendar.CalendarSerialization"->"test.calendar.CalendarSerialization.DeserializationThread"[A];
	"test.calendar.CalendarSerialization.SerializationThread";
	"test.calendar.CalendarSerialization"->"test.calendar.CalendarSerialization.SerializationThread"[A];
	"test.compilation.JPPFSourceCompiler"->"test.compilation.TestCompilation"[A];
	"test.counters.TestCounters";
	"test.counters.TestCounters"->"test.counters.LongCounterAtomic"[A];
	"test.counters.TestCounters"->"test.counters.LongCounterLock"[A];
	"test.counters.TestCounters"->"test.counters.LongCounterSynchronized"[A];
	"test.counters.TestCounters.TestThread";
	"test.counters.TestCounters"->"test.counters.TestCounters.TestThread"[A];
	"test.counters.TestCounters.TimeAndCpu";
	"test.counters.TestCounters"->"test.counters.TestCounters.TimeAndCpu"[A];
	"test.driver.restart.TestDriverRestart.KillDriverTask";
	"test.driver.restart.TestDriverRestart.KillDriverTask"->"test.driver.restart.TestDriverRestart"[A];
	"test.driver.restart.TestDriverRestart.ProxySettingTask";
	"test.driver.restart.TestDriverRestart.ProxySettingTask"->"test.driver.restart.TestDriverRestart"[A];
	"test.driver.restart.TestDriverRestart"->"test.driver.restart.TestDriverRestart.ProxySettingTask"[A];
	"test.filecopy.CopyResult";
	"test.filecopy.FileCopyAction"->"test.filecopy.CopyResult"[A];
	"test.filecopy.FileCopyTask"->"test.filecopy.CopyResult"[A];
	"test.filecopy.FileCopyTask"->"test.filecopy.FileCopyAction"[A];
	"test.filecopy.FileCopyRunner"->"test.filecopy.FileCopyTask"[A];
	"test.generic.GenericRunner"->"test.generic.LotsOfOutputTask"[A];
	"test.ipprobe.Probe.ProbeTask";
	"test.ipprobe.Probe";
	"test.ipprobe.Probe.ProbeTask"->"test.ipprobe.Probe"[A];
	"test.ipprobe.Probe"->"test.ipprobe.Probe.ProbeTask"[A];
	"test.jmx.canceljob.CancelJobRunner"->"test.jmx.canceljob.LifeCycleTask"[A];
	"test.jmx.JmxLogging.MyLoggingHandler";
	"test.jmx.JmxLogging"->"test.jmx.JmxLogging.MyLoggingHandler"[A];
	"test.jmx.JmxLogging"->"test.jmx.JmxLogging.MyTask"[A];
	"test.jmx.MyTask"->"test.jmx.MyNodeListener"[A];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleEvent"[A];
	"test.jmx.MyTask.MyCallable"->"test.jmx.MyTask"[A];
	"test.jmx.MyTask"->"test.jmx.MyTask.MyCallable"[A];
	"test.jmx.TestJMX"->"test.jmx.TestJMX.NodeNotificationListener"[A];
	"test.job.priority.JobPriorityRunner.JobRunner"->"test.job.priority.JobPriorityRunner"[A];
	"test.job.priority.JobPriorityRunner"->"test.job.priority.JobPriorityRunner.JobRunner"[A];
	"test.jobfromtask.JobFromTaskRunner"->"test.jobfromtask.DestinationTask"[A];
	"test.jobfromtask.SourceTask.MyCallable"->"test.jobfromtask.JobFromTaskRunner"[A];
	"test.jobfromtask.JobFromTaskRunner"->"test.jobfromtask.SourceTask"[A];
	"test.jobfromtask.SourceTask"->"test.jobfromtask.SourceTask.MyCallable"[A];
	"test.node.nativelib.NativeLibRunner"->"test.node.nativelib.NativeLibTask"[A];
	"test.run.jboss.JBossTestRunner"->"test.run.jboss.JBossTask"[A];
	"test.serialization.NonSerializableTaskRunner"->"test.serialization.NonSerializableTask"[A];
	"test.serialization.NonSerializableTask.NonSerializableClass";
	"test.serialization.NonSerializableTask"->"test.serialization.NonSerializableTask.NonSerializableClass"[A];
	"test.serialization.overflow.SerializationOverflowRunner"->"test.serialization.overflow.SerializationOverflowTask"[A];
	"test.serialization.Test.Hello";
	"test.serialization.Test"->"test.serialization.Test.Hello"[A];
	"test.socket.SocketPerformance";
	"test.socket.SocketPerformance.Client"->"test.socket.SocketPerformance"[A];
	"test.socket.SocketPerformance.Connection"->"test.socket.SocketPerformance"[A];
	"test.socket.SocketPerformance.Server";
	"test.socket.SocketPerformance.Server"->"test.socket.SocketPerformance"[A];
	"test.socket.SocketPerformance"->"test.socket.SocketPerformance.Client"[A];
	"test.socket.SocketPerformance.Server"->"test.socket.SocketPerformance.Connection"[A];
	"test.socket.SocketPerformance"->"test.socket.SocketPerformance.Server"[A];
	"org.jppf.dotnet.AbstractDotnetListenerWrapper";
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.dotnet.AbstractDotnetListenerWrapper"[C];
	"org.jppf.dotnet.DotnetNotificationListenerWrapper";
	"org.jppf.dotnet.DotnetNotificationListenerWrapper"->"org.jppf.dotnet.AbstractDotnetListenerWrapper"[C];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.dotnet.AbstractDotnetListenerWrapper"[C];
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.dotnet.AbstractDotnetListenerWrapper"[A];
	"org.jppf.dotnet.DotnetNotificationListenerWrapper"->"org.jppf.dotnet.AbstractDotnetListenerWrapper"[A];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.dotnet.AbstractDotnetListenerWrapper"[A];
	"org.jppf.dotnet.AbstractDotnetListenerWrapper"->"org.jppf.dotnet.DotnetJobListenerWrapper"[A];
	"org.jppf.jca.demo.J2EEDemo"->"org.jppf.jca.demo.DemoTask"[A];
	"org.jppf.jca.demo.JPPFHelper";
	"org.jppf.jca.demo.J2EEDemo"->"org.jppf.jca.demo.JPPFHelper"[A];
	"org.jppf.jca.cci.JPPFConnectionFactory";
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.jca.cci.JPPFConnectionFactory"[A];
	"test.org.jppf.test.setup.JPPFHelper";
	"test.org.jppf.test.setup.JPPFHelper"->"org.jppf.jca.cci.JPPFConnectionFactory"[A];
	"org.jppf.jca.cci.JPPFConnectionFactory"->"org.jppf.jca.spi.JPPFManagedConnectionFactory"[A];
	"org.jppf.jca.cci.JPPFConnectionManager";
	"org.jppf.jca.cci.JPPFConnectionFactory"->"org.jppf.jca.cci.JPPFConnectionManager"[A];
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.jca.cci.JPPFConnectionManager"[A];
	"org.jppf.jca.spi.JPPFResourceAdapterMetaData";
	"org.jppf.jca.cci.JPPFConnectionFactory"->"org.jppf.jca.spi.JPPFResourceAdapterMetaData"[A];
	"org.jppf.jca.cci.JPPFRecordFactory";
	"org.jppf.jca.cci.JPPFConnectionFactory"->"org.jppf.jca.cci.JPPFRecordFactory"[A];
	"org.jppf.jca.cci.JPPFInteraction";
	"org.jppf.jca.cci.JPPFInteraction"->"org.jppf.jca.cci.JPPFConnectionImpl"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.spi.JPPFManagedConnection"[A];
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.jca.spi.JPPFManagedConnection"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.work.JcaJobManager"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.cci.JPPFInteraction"[A];
	"org.jppf.jca.cci.JPPFConnectionMetaData";
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.cci.JPPFConnectionMetaData"[A];
	"org.jppf.jca.spi.JPPFManagedConnectionFactory"->"org.jppf.jca.spi.JPPFConfigurationParser"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"test.org.jppf.test.setup.JPPFHelper"[A];
	"test.org.jppf.test.setup.JPPFTestServlet";
	"test.org.jppf.test.setup.JPPFTestServlet"->"test.org.jppf.test.setup.JPPFHelper"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"test.org.jppf.test.setup.common.GatheringStatusListener"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.ErrorLifeCycleTask";
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.ErrorLifeCycleTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[C];
	"test.org.jppf.server.protocol.TestJPPFTask.MyTask";
	"test.org.jppf.server.protocol.TestJPPFTask.MyTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[C];
	"test.org.jppf.utils.stats.TestJPPFStatistics.CustomTask";
	"test.org.jppf.utils.stats.TestJPPFStatistics.CustomTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[C];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"org.jppf.test.scenario.s2.S2Runner"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.client.TestConnectionPool"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.io.TestFileDataLocation"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.ErrorLifeCycleTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.node.TestOfflineNode"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.MyTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics.CustomTask"->"test.org.jppf.test.setup.common.LifeCycleTask"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"org.jppf.test.scenario.classloading.Runner"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"org.jppf.test.scenario.s2.S2Runner"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.test.setup.common.LifeCycleTask"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.test.setup.common.SimpleCallable";
	"test.org.jppf.test.setup.common.SimpleCallable"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.test.setup.common.SimpleRunnable";
	"test.org.jppf.test.setup.common.SimpleRunnable"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.test.setup.common.SimpleTask"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.classloader.TestResourceLookup"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyCallableTask";
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyCallableTask"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.TestConnectionPool"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.io.TestFileDataLocation"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.node.TestOfflineNode"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3.MyTask"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.test.setup.common.BaseTestHelper"[A];
	"test.org.jppf.test.setup.JPPFTestServlet"->"test.org.jppf.test.runner.ResultHolder"[A];
	"test.org.jppf.test.runner.AbstractTestResultRenderer"->"test.org.jppf.test.runner.ResultHolder"[A];
	"test.org.jppf.test.runner.JPPFTestRunner"->"test.org.jppf.test.runner.ResultHolder"[A];
	"test.org.jppf.test.runner.TestRunListener"->"test.org.jppf.test.runner.ResultHolder"[A];
	"test.org.jppf.test.runner.TextResultRenderer"->"test.org.jppf.test.runner.ResultHolder"[A];
	"test.org.jppf.test.setup.JPPFTestServlet"->"test.org.jppf.test.runner.JPPFTestRunner"[A];
	"org.jppf.node.connection.ConnectionReason";
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.JPPFNodeReconnectionNotification"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.node.connection.ConnectionContext";
	"org.jppf.node.connection.ConnectionContext"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.connection.ConnectionReason"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.classloader.ClassLoaderRequestHandler"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ClassLoaderRequestHandler"[A];
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.ClassLoaderRequestHandler"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.classloader.ClassLoaderRequestHandler"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.JPPFNodeReconnectionNotification"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.JPPFNodeReconnectionNotification"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.JPPFNodeReconnectionNotification"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.JPPFNodeReconnectionNotification"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.JPPFNodeReconnectionNotification"[A];
	"org.jppf.classloader.resource.protocol.jppfres.JPPFResourceConnection";
	"org.jppf.classloader.resource.ResourceCache";
	"org.jppf.classloader.resource.protocol.jppfres.JPPFResourceConnection"->"org.jppf.classloader.resource.ResourceCache"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.classloader.JPPFClassLoader"[A];
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.LocalClassLoaderChannel"[A];
	"org.jppf.classloader.LocalResourceRequest"->"org.jppf.classloader.LocalClassLoaderChannel"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.classloader.LocalClassLoaderChannel"[A];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.classloader.LocalClassLoaderChannel"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.classloader.LocalClassLoaderConnection"[A];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.classloader.LocalClassLoaderConnection"[A];
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.LocalResourceRequest"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.classloader.RemoteResourceRequest"[A];
	"org.jppf.classloader.resource.protocol.jppfres.Handler";
	"org.jppf.classloader.resource.protocol.jppfres.Handler"->"org.jppf.classloader.resource.protocol.jppfres.JPPFResourceConnection"[A];
	"org.jppf.node.event.LifeCycleEventHandler";
	"org.jppf.node.AbstractNode"->"org.jppf.node.event.LifeCycleEventHandler"[A];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.LifeCycleEventHandler"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.event.LifeCycleEventHandler"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.event.LifeCycleEventHandler"[A];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.ConnectionContext"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.connection.ConnectionContext"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.connection.JPPFDefaultConnectionStrategy"[A];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.JPPFDriverConnectionInfo"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.node.connection.JPPFDriverConnectionInfo"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.DefaultLifeCycleErrorHandler"[C];
	"org.jppf.node.event.LifeCycleEventHandler"->"org.jppf.node.event.DefaultLifeCycleErrorHandler"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.DefaultLifeCycleErrorHandler"[A];
	"org.jppf.node.event.NodeLifeCycleEventType";
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleEventType"[A];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.event.NodeLifeCycleEventType"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.event.NodeLifeCycleListenerAdapter"[C];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.event.NodeLifeCycleListenerAdapter"[C];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.event.NodeLifeCycleListenerAdapter"[A];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.event.NodeLifeCycleListenerAdapter"[A];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.WindowsIdleTimeDetector"[A];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.X11IdleTimeDetector"[A];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.MacIdleTimeDetector"[A];
	"org.jppf.node.idle.X11IdleTimeDetector.XScreenSaverInfo";
	"org.jppf.node.idle.X11IdleTimeDetector"->"org.jppf.node.idle.X11IdleTimeDetector.XScreenSaverInfo"[A];
	"org.jppf.node.NodeRunner.ShutdownOrRestart";
	"org.jppf.node.NodeRunner"->"org.jppf.node.NodeRunner.ShutdownOrRestart"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"[A];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.node.provisioning.JPPFNodeProvisioning"[A];
	"org.jppf.node.provisioning.NodeProvisioningConstants";
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.node.provisioning.NodeProvisioningConstants"[A];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.node.provisioning.NodeProvisioningConstants"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.provisioning.NodeProvisioningConstants"[A];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.node.provisioning.SlaveNodeLauncher"[A];
	"org.jppf.node.screensaver.FocusedJFrame";
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.screensaver.FocusedJFrame"[A];
	"org.jppf.node.screensaver.impl.ImageData";
	"org.jppf.node.screensaver.impl.JPPFScreenSaverImpl"->"org.jppf.node.screensaver.impl.ImageData"[A];
	"org.jppf.node.screensaver.impl.NodePanel";
	"org.jppf.node.screensaver.impl.JPPFScreenSaverImpl"->"org.jppf.node.screensaver.impl.NodePanel"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.server.node.DefaultSerializationExceptionHook"[A];
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"[A];
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.NodeExecutionManager"[A];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher.ForwardingNotificationHandler";
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher.ForwardingNotificationHandler"->"org.jppf.management.forwarding.ForwardingNotificationDispatcher"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.ForwardingNotificationDispatcher"[A];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.management.forwarding.ForwardingNotificationDispatcher.ForwardingNotificationHandler"[A];
	"org.jppf.management.forwarding.ForwardingNotificationEvent";
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.management.forwarding.ForwardingNotificationEvent"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.ForwardingNotificationEvent"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.JPPFNodeForwarding"[A];
	"org.jppf.server.spi.JPPFNodeForwardingMBeanProvider"->"org.jppf.management.forwarding.JPPFNodeForwarding"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.NodeSelectionHelper"[A];
	"org.jppf.server.event.NodeConnectionEvent";
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.event.NodeConnectionEvent"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.management.forwarding.JPPFNodeForwarding"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.management.JPPFDriverAdmin"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.server.debug.DebugHelper"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.server.debug.ServerDebug"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.JPPFDriver"[A];
	"org.jppf.server.spi.JPPFDefaultDriverMBeanProvider"->"org.jppf.management.JPPFDriverAdmin"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.NodeStatusNotifier"[A];
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider"->"org.jppf.management.JPPFNodeMaintenance"[A];
	"org.jppf.management.JPPFNodeTaskMonitor.NotificationSender"->"org.jppf.management.JPPFNodeTaskMonitor"[A];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.management.JPPFNodeTaskMonitor"[A];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.management.JPPFNodeTaskMonitor.NotificationSender"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.debug.DebugHelper"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.server.debug.DebugHelper"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTask"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.protocol.ServerTask"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.server.protocol.ServerTask"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.ServerTask"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.server.protocol.ServerTask"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.ServerTask"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.debug.ServerDebug"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.queue.RemoveBundleAction";
	"org.jppf.server.queue.RemoveBundleAction"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.queue.RequeueBundleAction";
	"org.jppf.server.queue.RequeueBundleAction"->"org.jppf.server.queue.JPPFPriorityQueue"[A];
	"org.jppf.server.event.NodeConnectionEventHandler";
	"org.jppf.server.DriverInitializer"->"org.jppf.server.event.NodeConnectionEventHandler"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.server.event.NodeConnectionEventHandler"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.nio.classloader.ClassCache"[A];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.server.nio.classloader.ClassCache"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.ClassCache"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.ClassCache"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.ClassCache"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.ClassCache"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.peer.JPPFPeerInitializer";
	"org.jppf.server.peer.JPPFPeerInitializer"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.peer.PeerDiscoveryThread"[A];
	"org.jppf.server.peer.JPPFPeerInitializer"->"org.jppf.server.peer.PeerDiscoveryThread"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.peer.JPPFPeerInitializer"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.job.ChannelJobPair"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.job.JobEventTask"[A];
	"org.jppf.server.protocol.ServerJobBroadcast";
	"org.jppf.server.protocol.ServerJobBroadcast"->"org.jppf.server.protocol.ServerJob"[C];
	"org.jppf.server.job.JobEventTask"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.protocol.ServerJobBroadcast"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.queue.JobExpirationAction"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.queue.JobPriorityComparator"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.queue.JobScheduleAction"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.queue.RemoveBundleAction"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.queue.RequeueBundleAction"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.server.protocol.ServerJob"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.AbstractServerJobBase"[C];
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener"->"org.jppf.server.protocol.AbstractServerJobBase"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.server.protocol.AbstractServerJobBase"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.protocol.AbstractServerJobBase"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.AbstractServerJobBase"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.AbstractServerJobBase"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.AbstractServerJobBase"[A];
	"org.jppf.server.submission.SubmissionStatus";
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.submission.SubmissionStatus"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.submission.SubmissionStatus"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.submission.SubmissionStatus"[A];
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener"->"org.jppf.server.submission.SubmissionStatus"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.nodeserver.NodeContextFuture"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.ServerTaskBundleNode"[A];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.server.job.management.DriverJobManagement"[A];
	"org.jppf.server.job.management.DriverJobManagementMBeanProvider"->"org.jppf.server.job.management.DriverJobManagement"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.server.JPPFContextDriver"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[A];
	"org.jppf.server.nio.acceptor.AcceptorServerFactory"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[A];
	"org.jppf.server.nio.acceptor.AcceptorServerState"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.classloader.LocalClassContext"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.ClientServerState"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientNioServer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.NodeServerState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.nodeserver.LocalNodeChannel"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.server.nio.nodeserver.LocalNodeChannel"[A];
	"org.jppf.server.node.local.LocalNodeConnection"->"org.jppf.server.nio.nodeserver.LocalNodeChannel"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.nio.nodeserver.LocalNodeChannel"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.nodeserver.LocalNodeContext"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeChannel"->"org.jppf.server.nio.nodeserver.LocalNodeContext"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.node.local.LocalNodeConnection"[A];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.local.LocalNodeConnection"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.local.LocalNodeConnection"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.node.local.JPPFLocalNode"[A];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.local.JPPFLocalNode"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.protocol.SendResultsStrategy.SendAllResultsStrategy"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.protocol.SendResultsStrategy.SendNodeResultsStrategy"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.server.protocol.ServerTaskBundleClient"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.server.nio.acceptor.AcceptorContext"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorContext"[A];
	"org.jppf.server.nio.acceptor.AcceptorTransition";
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.server.nio.acceptor.AcceptorTransition"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorTransition"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.server.nio.acceptor.AcceptorServerFactory"[A];
	"org.jppf.server.nio.classloader.CacheClassContent";
	"org.jppf.server.nio.classloader.ClassCache"->"org.jppf.server.nio.classloader.CacheClassContent"[A];
	"org.jppf.server.nio.classloader.ClassCache"->"org.jppf.server.nio.classloader.CacheClassKey"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.CacheClassKey"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.server.nio.classloader.client.ClientClassContext"[A];
	"org.jppf.server.nio.classloader.client.ClientClassState";
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.client.ClientClassState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.client.ClientClassState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.ClientClassState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.ResourceRequest"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.ResourceRequest"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.ResourceRequest"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.ResourceRequest"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.ResourceRequest"[A];
	"org.jppf.server.nio.classloader.client.ClientClassTransition";
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.client.ClientClassServerFactory"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.SendingProviderRequestState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.IdleProviderState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"[A];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"[A];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.server.nio.classloader.node.NodeClassContext"[C];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[A];
	"org.jppf.server.nio.classloader.node.NodeClassState";
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.node.NodeClassState"[A];
	"org.jppf.server.nio.classloader.node.NodeClassTransition";
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.node.SendingNodeResponseState"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"[A];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.nio.client.ClientContext"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientContext"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientContext"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientContext"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientContext"[A];
	"org.jppf.server.nio.client.ClientState";
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.ClientState"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.nio.client.ClientState"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.client.ClientMessage"[A];
	"org.jppf.server.nio.client.ClientTransition";
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientTransition"[A];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.WaitingJobState"[A];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.SendingResultsState"[A];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.IdleState"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.CompletionListener"[A];
	"org.jppf.server.nio.nodeserver.NodeState";
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.NodeState"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeState"[A];
	"org.jppf.server.nio.nodeserver.NodeTransition";
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.NodeTransition"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[A];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeTransition"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.BundleResults"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.BundleResults"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.IdleState"[A];
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler"->"org.jppf.server.nio.nodeserver.JMXInitializationHandler.JMXInitializationTask"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.server.nio.nodeserver.LocalNodeMessage"[A];
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.server.nio.nodeserver.LocalNodeMessage"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.nio.nodeserver.LocalNodeMessage"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"[A];
	"org.jppf.server.nio.nodeserver.OfflineNodeHandler";
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.server.nio.nodeserver.OfflineNodeHandler"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.SendingBundleState"[A];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.WaitingResultsState"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.WaitingResultsState"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.RemoteNodeContext"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeContext"->"org.jppf.server.nio.nodeserver.RemoteNodeMessage"[A];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.local.JPPFLocalContainer"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.local.JPPFLocalContainer"[A];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.local.LocalNodeIO"[A];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.local.LocalNodeConnectionChecker"[A];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.remote.JPPFRemoteContainer"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.remote.JPPFRemoteContainer"[A];
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.server.node.remote.RemoteNodeConnection"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.server.node.remote.RemoteNodeConnection"[A];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.remote.RemoteNodeConnection"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.server.node.remote.RemoteNodeConnection"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.remote.RemoteNodeConnection"[A];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.remote.JPPFRemoteNode"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.server.node.remote.JPPFRemoteNode"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.server.node.remote.RemoteNodeIO"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread"->"org.jppf.server.node.remote.RemoteNodeConnectionChecker"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.server.node.remote.RemoteNodeConnectionChecker"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread"[A];
	"org.jppf.server.peer.JPPFPeerInitializer"->"org.jppf.server.peer.PeerResourceProvider"[A];
	"org.jppf.server.peer.JPPFPeerInitializer"->"org.jppf.server.peer.PeerNode"[A];
	"org.jppf.server.peer.PeerDiscoveryThread"->"org.jppf.server.peer.PeerNode"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.server.peer.PeerNodeResultSender"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.server.peer.RemotePeerConnection"[A];
	"org.jppf.server.protocol.ServerJobStatus";
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.protocol.ServerJobStatus"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerJobStatus"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.server.protocol.SendResultsStrategyManager"[A];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.server.queue.JobExpirationAction"[A];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.server.queue.JobScheduleAction"[A];
	"org.jppf.test.scenario.Scenario"->"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"[A];
	"test.org.jppf.test.setup.ConfigurationHelper";
	"org.jppf.test.scenario.Scenario"->"test.org.jppf.test.setup.ConfigurationHelper"[A];
	"org.jppf.test.scenario.ScenarioConfigurationImpl"->"test.org.jppf.test.setup.ConfigurationHelper"[A];
	"org.jppf.test.setup.Setup";
	"org.jppf.test.setup.Setup"->"test.org.jppf.test.setup.ConfigurationHelper"[A];
	"org.jppf.test.scenario.Scenario"->"org.jppf.test.setup.JMXResult"[A];
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"->"org.jppf.test.setup.JMXResult"[A];
	"org.jppf.test.scenario.Scenario"->"org.jppf.test.scenario.ScenarioConfigurationImpl"[A];
	"org.jppf.test.setup.JMXHandler";
	"org.jppf.test.setup.Setup"->"org.jppf.test.setup.JMXHandler"[A];
	"org.jppf.test.setup.RestartableDriverProcessLauncher";
	"org.jppf.test.setup.Setup"->"org.jppf.test.setup.RestartableDriverProcessLauncher"[A];
	"org.jppf.test.setup.RestartableProcessLauncher";
	"org.jppf.test.setup.RestartableDriverProcessLauncher"->"org.jppf.test.setup.RestartableProcessLauncher"[C];
	"org.jppf.test.setup.RestartableNodeProcessLauncher";
	"org.jppf.test.setup.RestartableNodeProcessLauncher"->"org.jppf.test.setup.RestartableProcessLauncher"[C];
	"org.jppf.test.setup.RestartableDriverProcessLauncher"->"org.jppf.test.setup.RestartableProcessLauncher"[A];
	"org.jppf.test.setup.RestartableNodeProcessLauncher"->"org.jppf.test.setup.RestartableProcessLauncher"[A];
	"org.jppf.test.setup.Setup"->"org.jppf.test.setup.RestartableNodeProcessLauncher"[A];
	"org.jppf.test.setup.RestartableProcessLauncher"->"test.org.jppf.test.setup.GenericProcessLauncher"[C];
	"test.org.jppf.test.setup.DriverProcessLauncher";
	"test.org.jppf.test.setup.DriverProcessLauncher"->"test.org.jppf.test.setup.GenericProcessLauncher"[C];
	"test.org.jppf.test.setup.NodeProcessLauncher";
	"test.org.jppf.test.setup.NodeProcessLauncher"->"test.org.jppf.test.setup.GenericProcessLauncher"[C];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.test.scenario.classloading.Runner.MyTask"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner.MyConnectionListener"->"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.test.scenario.jppf_130.JPPF_130_Runner.MyConnectionListener"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.test.scenario.jppf_130.JPPF_130_Task"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.test.scenario.nodesmix.NodeMixRunner"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmitter";
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmitter"->"org.jppf.test.scenario.nodesmix.NodeMixRunner"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmitter"->"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.test.scenario.nodesmix.NodeMixTask"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner.MyJobListener"->"org.jppf.test.scenario.resubmit.ResubmitRunner"[A];
	"org.jppf.test.scenario.resubmit.ResubmitRunner"->"org.jppf.test.scenario.resubmit.ResubmitRunner.MyJobListener"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.test.scenario.s1.ExtMatrixTask"[A];
	"org.jppf.test.scenario.s1.Matrix";
	"org.jppf.test.scenario.s1.ExtMatrixTask"->"org.jppf.test.scenario.s1.Matrix"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.test.scenario.s1.Matrix"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.test.scenario.s3.MyTask"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.test.addons.mbeans.NodeTest"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.test.addons.mbeans.NodeTest"[A];
	"org.jppf.test.addons.mbeans.UserObject";
	"test.org.jppf.test.setup.common.NotifyingTask"->"org.jppf.test.addons.mbeans.UserObject"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.test.addons.mbeans.UserObject"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.test.addons.mbeans.UserObject"[A];
	"test.org.jppf.test.setup.common.NotifyingTask"->"org.jppf.test.addons.startups.TaskNotifier"[A];
	"test.org.jppf.test.runner.ExceptionHolder";
	"test.org.jppf.test.runner.JPPFTestRunner"->"test.org.jppf.test.runner.ExceptionHolder"[A];
	"test.org.jppf.test.runner.ResultHolder"->"test.org.jppf.test.runner.ExceptionHolder"[A];
	"test.org.jppf.test.runner.TextResultRenderer"->"test.org.jppf.test.runner.ExceptionHolder"[A];
	"test.org.jppf.test.setup.GenericProcessLauncher"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.test.setup.Setup1D1N";
	"test.org.jppf.test.setup.Setup1D1N"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.test.setup.Setup1D1N1C";
	"test.org.jppf.test.setup.Setup1D1N1C"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.test.setup.Setup1D2N1C";
	"test.org.jppf.test.setup.Setup1D2N1C"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.classloader.TestResourceLookup"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.client.TestConnectionPool"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.io.TestFileDataLocation"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.management.TestJPPFNodeAdminMBean"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.node.TestOfflineNode"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.serialization.TestJPPFSerialization";
	"test.org.jppf.serialization.TestJPPFSerialization"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.serialization.TestKryo";
	"test.org.jppf.serialization.TestKryo"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.peer.TestMultiServer"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.peer.TestMultiServerWithSSL"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.ssl.TestSSL";
	"test.org.jppf.ssl.TestSSL"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.ssl.TestSSL2";
	"test.org.jppf.ssl.TestSSL2"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.ssl.TestSSL3";
	"test.org.jppf.ssl.TestSSL3"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.utils.TestJPPFConfiguration";
	"test.org.jppf.utils.TestJPPFConfiguration"->"test.org.jppf.test.setup.BaseSetup"[A];
	"test.org.jppf.test.runner.JPPFTestRunner"->"test.org.jppf.test.runner.TestRunListener"[A];
	"test.org.jppf.classloader.TestResourceLookup"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.serialization.TestJPPFSerialization"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.serialization.TestKryo"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.server.peer.TestMultiServer"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.server.peer.TestMultiServerWithSSL"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.ssl.TestSSL"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.ssl.TestSSL2"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.ssl.TestSSL3"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[C];
	"test.org.jppf.classloader.TestResourceLookup"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.serialization.TestJPPFSerialization"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.serialization.TestKryo"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.server.peer.TestMultiServer"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.server.peer.TestMultiServerWithSSL"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.ssl.TestSSL"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.ssl.TestSSL2"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.ssl.TestSSL3"->"test.org.jppf.test.setup.AbstractNonStandardSetup"[A];
	"test.org.jppf.test.setup.AbstractSetupOfflineNode";
	"test.org.jppf.node.TestOfflineNode"->"test.org.jppf.test.setup.AbstractSetupOfflineNode"[C];
	"test.org.jppf.node.TestOfflineNode"->"test.org.jppf.test.setup.AbstractSetupOfflineNode"[A];
	"test.org.jppf.test.setup.BaseSetup"->"test.org.jppf.test.setup.DriverProcessLauncher"[A];
	"test.org.jppf.test.setup.BaseSetup"->"test.org.jppf.test.setup.NodeProcessLauncher"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"test.org.jppf.test.setup.common.CountingJobListener"[A];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.common.CountingJobListener"[A];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.common.CountingJobListener"[A];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.common.CountingJobListener"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"test.org.jppf.test.setup.common.NotifyingTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"test.org.jppf.test.setup.common.NotifyingTask"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"test.org.jppf.test.setup.common.NotifyingTaskListener"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"test.org.jppf.test.setup.common.NotifyingTaskListener"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.test.setup.common.NotifyingTaskListener"[A];
	"test.org.jppf.test.setup.common.NotSerializableObject";
	"test.org.jppf.test.setup.common.NotSerializableTask"->"test.org.jppf.test.setup.common.NotSerializableObject"[A];
	"test.org.jppf.client.concurrent.TestJPPFCompletionService"->"test.org.jppf.test.setup.common.SimpleCallable"[A];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"test.org.jppf.test.setup.common.SimpleCallable"[A];
	"test.org.jppf.test.setup.common.TaskResult";
	"test.org.jppf.test.setup.common.SimpleCallable"->"test.org.jppf.test.setup.common.TaskResult"[A];
	"test.org.jppf.test.setup.common.SimpleRunnable"->"test.org.jppf.test.setup.common.TaskResult"[A];
	"test.org.jppf.client.concurrent.TestJPPFCompletionService"->"test.org.jppf.test.setup.common.TaskResult"[A];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"test.org.jppf.test.setup.common.TaskResult"[A];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"test.org.jppf.test.setup.common.SimpleRunnable"[A];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.common.SimpleRunnable"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"test.org.jppf.test.setup.common.SimpleTask"[A];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.common.SimpleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"test.org.jppf.test.setup.common.SimpleTask"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"test.org.jppf.test.setup.common.SimpleTask"[A];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.client.persistence.TestJobPersistence"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.client.TestConnectionPool"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.client.TestJPPFClient";
	"test.org.jppf.client.TestJPPFClient"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"test.org.jppf.test.setup.Setup1D1N"[C];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.client.TestConnectionPool"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.client.TestJPPFClient"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.client.TestJPPFJob"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"test.org.jppf.test.setup.Setup1D1N"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.client.concurrent.TestJPPFCompletionService"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.io.TestFileDataLocation"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.node.protocol.TestScriptedTask"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.test.setup.Setup1D1N1C"[C];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.client.concurrent.TestJPPFCompletionService"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.client.concurrent.TestJPPFExecutorService"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.io.TestFileDataLocation"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.node.protocol.TestScriptedTask"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.test.setup.Setup1D1N1C"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"test.org.jppf.test.setup.Setup1D2N1C"[C];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"test.org.jppf.test.setup.Setup1D2N1C"[C];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"test.org.jppf.test.setup.Setup1D2N1C"[C];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"test.org.jppf.test.setup.Setup1D2N1C"[C];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"test.org.jppf.test.setup.Setup1D2N1C"[C];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"test.org.jppf.test.setup.Setup1D2N1C"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"test.org.jppf.test.setup.Setup1D2N1C"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"test.org.jppf.test.setup.Setup1D2N1C"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"test.org.jppf.test.setup.Setup1D2N1C"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"test.org.jppf.test.setup.Setup1D2N1C"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"test.org.jppf.classloader.ResourceLoadingTask"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"test.org.jppf.classloader.TestAbstractJPPFClassLoader.MyTask"[A];
	"test.org.jppf.classloader.TestResourceLookup"->"test.org.jppf.classloader.TestResourceLookup.MyTask"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyCallableTask"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTaskCallback"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.ErrorLifeCycleTask"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean.NodeNotificationListener"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy"->"test.org.jppf.node.policy.TestExecutionPolicy.TestCustomPolicy"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"test.org.jppf.server.protocol.TestJPPFJobSLA3.MyTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallable"->"test.org.jppf.server.protocol.TestJPPFTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallable"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallableTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.MyExceptionalCallable"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.MyTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.NotifyingTask2"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"test.org.jppf.server.protocol.TestJPPFTask.ResubmittingTask"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.utils.stats.TestJPPFStatistics.CustomTask"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"test.org.jppf.utils.stats.TestJPPFStatistics.TaskAndJobCountTester"[A];
	"test.org.jppf.utils.TestJPPFConfiguration"->"test.org.jppf.utils.TestJPPFConfiguration.TestConfigurationSource"[A];
	"test.org.jppf.utils.TestJPPFConfiguration.TestConfigurationSourceReader";
	"test.org.jppf.utils.TestJPPFConfiguration"->"test.org.jppf.utils.TestJPPFConfiguration.TestConfigurationSourceReader"[A];
	"org.jppf.ui.actions.AbstractActionHandler"->"org.jppf.ui.actions.ActionHandler"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.actions.ActionHandler"[A];
	"org.jppf.ui.actions.AbstractUpdatableAction"->"org.jppf.ui.actions.UpdatableAction"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.actions.UpdatableAction"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.actions.ShowHideColumnsAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.data.NewConnectionTask.ComboUpdate"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.job.actions.UpdateMaxNodesAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.job.actions.UpdatePriorityAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.ui.options.OptionElement"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.actions.ActionHolder"[A];
	"org.jppf.ui.monitoring.node.graph.GraphOption"->"org.jppf.ui.actions.ActionHolder"[A];
	"org.jppf.ui.treetable.AbstractTreeTableOption"->"org.jppf.ui.actions.ActionHolder"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.options.docking.ViewDescriptor"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.options.xml.DebugMouseListener"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionContainer"[A];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.OptionProperties"[A];
	"org.jppf.ui.monitoring.ConsoleLauncher"->"org.jppf.ui.options.OptionProperties"[A];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.ui.options.OptionProperties"[A];
	"org.jppf.ui.options.AbstractOptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[A];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.ui.options.event.ValueChangeListener"[A];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.event.ValueChangeListener"[A];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.ChartHandler"[A];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[A];
	"org.jppf.ui.monitoring.MonitoringPanel"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[A];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.management.JPPFDriverAdminMBean"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.management.JPPFDriverAdminMBean"[A];
	"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask"->"org.jppf.client.event.ClientConnectionStatusHandler"[A];
	"org.jppf.ui.monitoring.data.StatsRefreshTask"->"org.jppf.client.event.ClientConnectionStatusHandler"[A];
	"org.jppf.ui.monitoring.diagnostics.HealthTreeCellRenderer"->"org.jppf.client.event.ClientConnectionStatusHandler"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.event.ClientConnectionStatusHandler"[A];
	"org.jppf.ui.monitoring.data.ConnectionFailedTask"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.ui.monitoring.job.JobDataPanelManager.ConnectionStatusListener"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.BaseJPPFClientConnection"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.ConnectionInitializer"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.debug.Debug"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.event.ClientEvent"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.event.JobEvent"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.monitoring.topology.TopologyManager.StatusListener"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.client.JPPFClientConnection"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.client.JPPFClientConnection"[A];
	"sample.prime.PrimeRunner"->"org.jppf.client.JPPFClientConnection"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.client.JPPFClientConnection"[A];
	"test.driver.restart.TestDriverRestart"->"org.jppf.client.JPPFClientConnection"[A];
	"test.jmx.JmxLogging"->"org.jppf.client.JPPFClientConnection"[A];
	"test.jmx.TestJMX"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.client.__JPPFClientConnection"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.test.setup.Setup"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.client.JPPFClientConnection"[A];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClientConnection"[A];
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.ui.monitoring.data.StatsConstants"[A];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.ui.monitoring.data.StatsConstants"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.StatsConstants"[A];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.StatsConstants"[A];
	"org.jppf.ui.monitoring.MonitoringPanel"->"org.jppf.ui.monitoring.data.StatsConstants"[A];
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.ui.monitoring.data.StatsExporter"[A];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.StatsExporter"[A];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.StatsExporter"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"test.driver.restart.TestDriverRestart"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"test.jmx.TestJMX"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.diagnostics.__DiagnosticsMBean"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner"->"org.jppf.management.diagnostics.DiagnosticsMBean"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[A];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[A];
	"org.jppf.ui.monitoring.node.actions.NodeConfigurationAction"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.utils.collections.CollectionMap"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.utils.collections.CollectionMap"[A];
	"org.jppf.ui.monitoring.diagnostics.GCAction.RunnableAction"->"org.jppf.management.NodeSelector"[A];
	"org.jppf.ui.monitoring.diagnostics.HeapDumpAction.RunnableAction"->"org.jppf.management.NodeSelector"[A];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyListener"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyListener"[A];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyListener"[A];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyListener"[A];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyListener"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyListener"[A];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.monitoring.job.actions.UpdateMaxNodesAction"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.monitoring.job.actions.UpdatePriorityAction"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.monitoring.node.actions.NodeThreadsAction"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.options.AbstractOption"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.options.SplitPaneOption"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[A];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.job.JobNotification"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"test.job.priority.JobPriorityRunner"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.server.job.management.__DriverJobManagementMBean"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.server.job.management.DriverJobManagementMBeanProvider"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.test.setup.Setup"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"org.jppf.server.job.management.DriverJobManagementMBean"[A];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.management.JPPFAdminMBean"[A];
	"org.jppf.management.JMXConnectionWrapper"->"org.jppf.management.JPPFAdminMBean"[A];
	"org.jppf.management.__JPPFAdminMBean"->"org.jppf.management.JPPFAdminMBean"[A];
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.management.JPPFAdminMBean"[A];
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.node.protocol.ScriptedTask"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.scripting.ScriptRunnerFactory"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.scripting.ScriptRunnerImpl"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.scripting.ScriptRunnerPool"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.utils.configuration.ScriptHandler"->"org.jppf.scripting.ScriptRunner"[A];
	"org.jppf.ui.treetable.AbstractTreeTableModel"->"org.jppf.ui.treetable.TreeTableModel"[A];
	"org.jppf.ui.treetable.JPPFTreeTable"->"org.jppf.ui.treetable.TreeTableModel"[A];
	"org.jppf.ui.treetable.JTreeTable"->"org.jppf.ui.treetable.TreeTableModel"[A];
	"org.jppf.ui.treetable.JTreeTable.TreeTableCellEditor"->"org.jppf.ui.treetable.TreeTableModel"[A];
	"org.jppf.ui.treetable.TreeTableModelAdapter";
	"org.jppf.ui.treetable.TreeTableModelAdapter"->"org.jppf.ui.treetable.TreeTableModel"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.taskwrapper.JPPFTaskCallback"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.node.event.TaskExecutionEvent"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.protocol.Task"[A];
	"sample.cascading.CascadingTestRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.datasize.DataSizeRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.broadcastjob.BroadcastJobRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.commandline.CommandLineTaskRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.manyjobs.ManyJobsRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.taskcommunication.MyTaskRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.tasklength.LongTaskRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.dist.xstream.XstreamRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.helloworld.HelloWorldRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.prime.PrimeRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.test.deadlock.JobStreamImpl"->"org.jppf.node.protocol.Task"[A];
	"sample.test.HelloJPPF"->"org.jppf.node.protocol.Task"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.test.profiling.ProfilingRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.test.redirect.RedirectOutputRunner"->"org.jppf.node.protocol.Task"[A];
	"sample.test.TestTaskRunner"->"org.jppf.node.protocol.Task"[A];
	"test.annotated.AnnotatedRunner"->"org.jppf.node.protocol.Task"[A];
	"test.filecopy.FileCopyRunner"->"org.jppf.node.protocol.Task"[A];
	"test.generic.GenericRunner"->"org.jppf.node.protocol.Task"[A];
	"test.jmx.canceljob.CancelJobRunner"->"org.jppf.node.protocol.Task"[A];
	"test.jmx.JmxLogging"->"org.jppf.node.protocol.Task"[A];
	"test.jmx.TestJMX"->"org.jppf.node.protocol.Task"[A];
	"test.job.priority.JobPriorityRunner.JobRunner"->"org.jppf.node.protocol.Task"[A];
	"test.jobfromtask.JobFromTaskRunner"->"org.jppf.node.protocol.Task"[A];
	"test.localexecution.LocalExecutionRunner"->"org.jppf.node.protocol.Task"[A];
	"test.node.nativelib.NativeLibRunner"->"org.jppf.node.protocol.Task"[A];
	"test.node.provisioning.NodeProvisioningRunner"->"org.jppf.node.protocol.Task"[A];
	"test.run.jboss.JBossTestRunner"->"org.jppf.node.protocol.Task"[A];
	"test.serialization.NonSerializableTaskRunner"->"org.jppf.node.protocol.Task"[A];
	"test.serialization.overflow.SerializationOverflowRunner"->"org.jppf.node.protocol.Task"[A];
	"test.serialization.Test"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.node.protocol.__Task"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.jca.demo.J2EEDemo"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.test.setup.common.BaseTestHelper"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.classloader.TestAbstractJPPFClassLoader"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTaskCallback"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.client.TestConnectionPool"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.client.TestJPPFJob"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.management.TestJPPFDriverAdminMBean"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.node.protocol.TestScriptedTask"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"org.jppf.node.protocol.Task"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.node.protocol.Task"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.ClassServerDelegate"[A];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.ClassServerDelegate"[A];
	"org.jppf.client.BaseJPPFClientConnection"->"org.jppf.client.ClassServerDelegate"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.ClassServerDelegate"[A];
	"org.jppf.classloader.ResourceProvider.Factory"->"org.jppf.classloader.ResourceProvider"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.ResourceProvider"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.classloader.ResourceProvider"[A];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.classloader.ResourceProvider"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.classloader.ResourceProvider"[A];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.comm.recovery.AbstractRecoveryConnection"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.comm.recovery.ServerConnection"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.comm.socket.SocketInitializerImpl"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.io.IOHelper"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.io.SocketWrapperInputSource"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.io.SocketWrapperOutputDestination"->"org.jppf.comm.socket.SocketWrapper"[A];
	"test.socket.SocketPerformance.Connection"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.comm.socket.SocketWrapper"[A];
	"test.org.jppf.test.setup.GenericProcessLauncher"->"org.jppf.comm.socket.SocketWrapper"[A];
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.client.ClientConnectionHandler"[A];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.ClientConnectionHandler"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.ClientConnectionHandler"[A];
	"org.jppf.client.AbstractClientConnectionHandler"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.comm.socket.AbstractSocketInitializer"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.comm.socket.SocketInitializer"[A];
	"org.jppf.client.AbstractConnectionPool"->"org.jppf.client.ConnectionPool"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.ConnectionPool"[A];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.ConnectionPool"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.ConnectionPool"[A];
	"org.jppf.startup.JPPFClientStartupSPI";
	"org.jppf.client.AbstractGenericClient"->"org.jppf.startup.JPPFClientStartupSPI"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.queue.QueueListener"[A];
	"org.jppf.client.event.ClientQueueEventDispatcher"->"org.jppf.queue.QueueListener"[A];
	"org.jppf.queue.QueueListenerAdapter"->"org.jppf.queue.QueueListener"[A];
	"org.jppf.queue.__QueueListener"->"org.jppf.queue.QueueListener"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.JobManager"[A];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.JobManager"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JobManager"[A];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.event.ClientQueueListener"[A];
	"org.jppf.client.event.ClientQueueListenerAdapter"->"org.jppf.client.event.ClientQueueListener"[A];
	"org.jppf.client.JPPFMulticastReceiverThread.ConnectionHandler";
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.client.JPPFMulticastReceiverThread.ConnectionHandler"[A];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.event.ClientListener"[A];
	"org.jppf.client.JPPFClient"->"org.jppf.client.event.ClientListener"[A];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.event.ClientListener"[A];
	"sample.test.ClientTest"->"org.jppf.client.event.ClientListener"[A];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.job.JobInformation"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.protocol.TaskBundle"[A];
	"test.serialization.Test"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.node.protocol.__TaskBundle"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.client.ClientMessage"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.BundleResults"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeMessage"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.node.protocol.TaskBundle"[A];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.utils.collections.MetadataImpl"->"org.jppf.utils.collections.Metadata"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.utils.collections.Metadata"[A];
	"sample.dist.matrix.ExtMatrixTask"->"org.jppf.utils.collections.Metadata"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.utils.collections.Metadata"[A];
	"sample.dist.matrix.MatrixTask"->"org.jppf.utils.collections.Metadata"[A];
	"sample.test.executor.Main"->"org.jppf.utils.collections.Metadata"[A];
	"sample.test.MyTask"->"org.jppf.utils.collections.Metadata"[A];
	"sample.test.TestTaskRunner"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.utils.collections.__Metadata"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.test.scenario.classloading.Runner.MyTask"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.test.scenario.s1.ExtMatrixTask"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.utils.collections.Metadata"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.utils.collections.Metadata"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask"->"org.jppf.utils.collections.Metadata"[A];
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.utils.collections.Metadata"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.event.JobListener"[A];
	"test.generic.GenericRunner"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.client.event.__JobListener"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.client.event.JobListener"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"org.jppf.client.event.JobListener"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.client.persistence.JobPersistence"[A];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.client.persistence.JobPersistence"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.persistence.JobPersistence"[A];
	"org.jppf.client.persistence.DefaultFilePersistenceManager"->"org.jppf.client.persistence.JobPersistence"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.client.persistence.JobPersistence"[A];
	"test.org.jppf.client.persistence.TestJobPersistence"->"org.jppf.client.persistence.JobPersistence"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.job.JobInformation"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"test.jmx.MyNodeListener"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.node.protocol.__JPPFDistributedJob"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.server.queue.JobPriorityComparator"->"org.jppf.node.protocol.JPPFDistributedJob"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.protocol.JobClientSLA"[A];
	"sample.dist.manyjobs.ManyJobsRunner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"test.jmx.canceljob.CancelJobRunner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.node.protocol.__JobClientSLA"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.node.protocol.JobClientSLA"[A];
	"test.org.jppf.client.TestConnectionPool"->"org.jppf.node.protocol.JobClientSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.node.protocol.JobClientSLA"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.protocol.JPPFJobMetadata"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.protocol.__JobMetadata"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.protocol.__JPPFDistributedJob"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.node.protocol.__TaskBundle"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JobMetadata"[A];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.balancer.ClientJob"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.balancer.queue.JobPriorityComparator"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.job.JobInformation"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JobSLA"[A];
	"sample.dist.broadcastjob.BroadcastJobRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"sample.dist.manyjobs.ManyJobsRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"test.jmx.canceljob.CancelJobRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"test.job.priority.JobPriorityRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"test.jobfromtask.JobFromTaskRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"test.run.jboss.JBossTestRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"test.serialization.overflow.SerializationOverflowRunner"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.protocol.__JobSLA"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.protocol.__JPPFDistributedJob"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.protocol.__TaskBundle"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.server.queue.JobPriorityComparator"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.test.setup.common.BaseTestHelper"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.server.job.management.TestDriverJobManagementMBean"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA3"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.node.protocol.JobSLA"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics"->"org.jppf.node.protocol.JobSLA"[A];
	"org.jppf.utils.ConcurrentUtils.Condition";
	"org.jppf.utils.ConcurrentUtils"->"org.jppf.utils.ConcurrentUtils.Condition"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.client.balancer.ChannelWrapper"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.client.event.JobEvent"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.execute.__ExecutorChannel"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.job.ChannelJobPair"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.execute.ExecutorChannel"[A];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"sample.cascading.CascadingTestRunner"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"sample.cascading.Task1"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"org.jppf.node.protocol.__JobCommonSLA"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFJobClientSLA"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.node.protocol.JobCommonSLA"[A];
	"org.jppf.client.balancer.ChannelWrapper"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.AbstractBundler"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.impl.NodeSimulator"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.execute.__ExecutorChannel"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.load.balancer.Bundler"[A];
	"org.jppf.execute.ExecutorChannelStatusListener";
	"org.jppf.execute.__ExecutorChannel"->"org.jppf.execute.ExecutorChannelStatusListener"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.execute.ExecutorChannelStatusListener"[A];
	"org.jppf.client.balancer.ChannelWrapperLocal"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker.CheckerThread"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.execute.ExecutionManager"[A];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.node.protocol.MemoryMapDataProvider"->"org.jppf.node.protocol.DataProvider"[A];
	"sample.dist.matrix.clientpool.NonBlockingPoolMatrixRunner"->"org.jppf.node.protocol.DataProvider"[A];
	"sample.test.executor.Main"->"org.jppf.node.protocol.DataProvider"[A];
	"sample.test.TestTaskRunner"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.node.protocol.__DataProvider"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.node.protocol.__Task"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.node.protocol.DataProvider"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.node.protocol.DataProvider"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask"->"org.jppf.node.protocol.DataProvider"[A];
	"test.org.jppf.io.TestFileDataLocation"->"org.jppf.node.protocol.DataProvider"[A];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.client.JPPFContextClient"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.queue.AbstractJPPFQueue"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.queue.QueueEvent"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.server.JPPFContextDriver"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.server.queue.RemoveBundleAction"->"org.jppf.queue.JPPFQueue"[A];
	"org.jppf.client.concurrent.AbstractJobConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.JobConfiguration"[A];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.JobConfiguration"[A];
	"org.jppf.client.concurrent.__ExecutorServiceConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[A];
	"org.jppf.client.concurrent.__JobConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[A];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[A];
	"org.jppf.client.concurrent.__ExecutorServiceConfiguration"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[A];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.TaskConfiguration"[A];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.TaskConfiguration"[A];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.concurrent.TaskConfiguration"[A];
	"org.jppf.client.concurrent.__ExecutorServiceConfiguration"->"org.jppf.client.concurrent.TaskConfiguration"[A];
	"org.jppf.client.concurrent.__TaskConfiguration"->"org.jppf.client.concurrent.TaskConfiguration"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration"->"org.jppf.client.concurrent.TaskConfiguration"[A];
	"org.jppf.client.debug.Debug"->"org.jppf.client.debug.DebugMBean"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.event.JobStatusListener"[A];
	"test.org.jppf.test.setup.common.ExecutingJobStatusListener"->"org.jppf.client.event.JobStatusListener"[A];
	"test.org.jppf.test.setup.common.GatheringStatusListener"->"org.jppf.client.event.JobStatusListener"[A];
	"org.jppf.client.JPPFJob"->"org.jppf.client.JobStatusHandler"[A];
	"org.jppf.client.JPPFResultCollector"->"org.jppf.client.JobStatusHandler"[A];
	"org.jppf.caching.JPPFSimpleSetCache"->"org.jppf.caching.JPPFCollectionCache"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.caching.JPPFCollectionCache"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.caching.JPPFCollectionCache"[A];
	"org.jppf.caching.JPPFHashMapCache"->"org.jppf.caching.JPPFMapCache"[A];
	"org.jppf.caching.JPPFSynchronizedSoftCache"->"org.jppf.caching.JPPFMapCache"[A];
	"org.jppf.utils.hooks.HookInstance"->"org.jppf.caching.JPPFMapCache"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.io.IOHelper"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.management.CustomWrapping"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.utils.SerializationHelperImpl"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.jca.serialization.JcaSerializationHelperImpl"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.serialization.ObjectSerializer"[A];
	"org.jppf.classloader.AbstractResourceProvider"->"org.jppf.utils.JPPFCallable"[A];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.utils.JPPFCallable"[A];
	"sample.test.jppfcallable.MyCallable"->"org.jppf.utils.JPPFCallable"[A];
	"test.filecopy.FileCopyAction"->"org.jppf.utils.JPPFCallable"[A];
	"test.jmx.MyTask.MyCallable"->"org.jppf.utils.JPPFCallable"[A];
	"test.jobfromtask.SourceTask.MyCallable"->"org.jppf.utils.JPPFCallable"[A];
	"org.jppf.node.protocol.__Task"->"org.jppf.utils.JPPFCallable"[A];
	"org.jppf.utils.__JPPFCallable"->"org.jppf.utils.JPPFCallable"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.utils.JPPFCallable"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallable"->"org.jppf.utils.JPPFCallable"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.MyComputeCallableTask"->"org.jppf.utils.JPPFCallable"[A];
	"test.org.jppf.server.protocol.TestJPPFTask.MyExceptionalCallable"->"org.jppf.utils.JPPFCallable"[A];
	"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.TaskObjectWrapper"[A];
	"org.jppf.node.protocol.JPPFRunnable";
	"org.jppf.client.taskwrapper.AnnotatedTaskWrapper"->"org.jppf.node.protocol.JPPFRunnable"[A];
	"sample.helloworld.HelloWorldAnnotated"->"org.jppf.node.protocol.JPPFRunnable"[A];
	"sample.helloworld.HelloWorldAnnotatedConstructor"->"org.jppf.node.protocol.JPPFRunnable"[A];
	"sample.helloworld.HelloWorldAnnotatedStatic"->"org.jppf.node.protocol.JPPFRunnable"[A];
	"sample.test.TestAnnotatedStaticTask"->"org.jppf.node.protocol.JPPFRunnable"[A];
	"sample.test.TestAnnotatedTask"->"org.jppf.node.protocol.JPPFRunnable"[A];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.DataProviderHolder"[A];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask"->"org.jppf.client.taskwrapper.DataProviderHolder"[A];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.recovery.ClientConnectionListener"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.comm.recovery.ClientConnectionListener"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.comm.recovery.ClientConnectionListener"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.comm.recovery.ReaperListener"[A];
	"org.jppf.server.nio.classloader.node.NodeClassNioServer"->"org.jppf.comm.recovery.ReaperListener"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.comm.recovery.ReaperListener"[A];
	"org.jppf.io.IO";
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.io.IO"[A];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.io.IO"[A];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.IO"[A];
	"org.jppf.serialization.SerializationUtils"->"org.jppf.io.IO"[A];
	"org.jppf.utils.base64.Base64Decoding"->"org.jppf.io.IO"[A];
	"org.jppf.utils.JPPFBuffer"->"org.jppf.io.IO"[A];
	"org.jppf.utils.pooling.DirectBufferPoolQueue"->"org.jppf.io.IO"[A];
	"org.jppf.utils.streams.MultipleBuffersOutputStream"->"org.jppf.io.IO"[A];
	"org.jppf.utils.streams.StreamUtils"->"org.jppf.io.IO"[A];
	"org.jppf.serialization.JPPFSerialization.Factory"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.serialization.DefaultJavaSerialization"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.serialization.DefaultJPPFSerialization"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.serialization.XstreamSerialization"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.utils.JPPFConfiguration"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.jca.serialization.JcaObjectSerializerImpl"->"org.jppf.serialization.JPPFSerialization"[A];
	"org.jppf.data.transform.JPPFDataTransform";
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.data.transform.JPPFDataTransform"[A];
	"org.jppf.io.IOHelper"->"org.jppf.data.transform.JPPFDataTransform"[A];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.ThreadManager"[A];
	"org.jppf.execute.AbstractThreadManager"->"org.jppf.execute.ThreadManager"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.execute.ThreadManager"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.node.protocol.CancellationHandler"[A];
	"org.jppf.dotnet.DotnetTaskWrapper"->"org.jppf.node.protocol.CancellationHandler"[A];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.node.protocol.TimeoutHandler"[A];
	"org.jppf.dotnet.DotnetTaskWrapper"->"org.jppf.node.protocol.TimeoutHandler"[A];
	"org.jppf.execute.TimeoutTimerTask"->"org.jppf.node.protocol.Interruptibility"[A];
	"org.jppf.node.protocol.__Interruptibility"->"org.jppf.node.protocol.Interruptibility"[A];
	"org.jppf.io.AbstractDataLocation"->"org.jppf.io.DataLocation"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[A];
	"org.jppf.management.CustomWrapping"->"org.jppf.io.DataLocation"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.io.DataLocation"[A];
	"org.jppf.nio.AbstractNioObject"->"org.jppf.io.DataLocation"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.io.DataLocation"[A];
	"org.jppf.nio.SSLNioObject"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.io.DataLocation"[A];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.io.DataLocation"[A];
	"org.jppf.io.ChannelInputSource"->"org.jppf.io.InputSource"[A];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.InputSource"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.InputSource"[A];
	"org.jppf.io.SocketWrapperInputSource"->"org.jppf.io.InputSource"[A];
	"org.jppf.io.StreamInputSource"->"org.jppf.io.InputSource"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.io.InputSource"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.io.InputSource"[A];
	"org.jppf.io.ChannelOutputDestination"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.io.IOHelper"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.io.SocketWrapperOutputDestination"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.io.StreamOutputDestination"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.io.OutputDestination"[A];
	"org.jppf.io.OverflowDetectorCallback"->"org.jppf.utils.streams.NotifyingStreamCallback"[A];
	"org.jppf.utils.streams.NotifyingInputStream";
	"org.jppf.utils.streams.NotifyingInputStream"->"org.jppf.utils.streams.NotifyingStreamCallback"[A];
	"org.jppf.utils.streams.NotifyingOutputStream"->"org.jppf.utils.streams.NotifyingStreamCallback"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobManagerListener"[A];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobManagerListener"[A];
	"org.jppf.server.job.JobEventTask"->"org.jppf.job.JobNotificationEmitter"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobNotificationEmitter"[A];
	"org.jppf.job.TaskReturnListener";
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnListener"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnManager"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.job.TaskReturnManager"[A];
	"org.jppf.location.LocationEventListener";
	"org.jppf.libmanagement.Downloader"->"org.jppf.location.LocationEventListener"[A];
	"org.jppf.libmanagement.Downloader"->"org.jppf.location.Location"[A];
	"org.jppf.location.AbstractLocation"->"org.jppf.location.Location"[A];
	"org.jppf.location.LocationEvent";
	"org.jppf.location.LocationEvent"->"org.jppf.location.Location"[A];
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.location.Location"[A];
	"org.jppf.utils.configuration.ScriptHandler"->"org.jppf.location.Location"[A];
	"sample.dist.commandline.ListDirectoryTask"->"org.jppf.location.Location"[A];
	"sample.dist.commandline.TestTask"->"org.jppf.location.Location"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.location.Location"[A];
	"sample.test.FileDownloadTestTask"->"org.jppf.location.Location"[A];
	"test.filecopy.FileCopyRunner"->"org.jppf.location.Location"[A];
	"org.jppf.location.__Location"->"org.jppf.location.Location"[A];
	"org.jppf.node.protocol.__ClassPath"->"org.jppf.location.Location"[A];
	"org.jppf.node.protocol.__ClassPathElement"->"org.jppf.location.Location"[A];
	"org.jppf.classloader.resource.protocol.jppfres.JPPFResourceConnection"->"org.jppf.location.Location"[A];
	"org.jppf.classloader.resource.ResourceCache"->"org.jppf.location.Location"[A];
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.location.Location"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.location.Location"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.location.Location"[A];
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.location.Location"[A];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.BundlerEx"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.load.balancer.BundlerEx"[A];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.NodeAwareness"[A];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.NodeAwareness"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.NodeAwareness"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.load.balancer.NodeAwareness"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.load.balancer.NodeAwareness"[A];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.ContextAwareness"[A];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.ContextAwareness"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.ContextAwareness"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.load.balancer.ContextAwareness"[A];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.AbstractBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.AbstractAutoTuneProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.FixedSizeBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.FixedSizeProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.NodeThreadsProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.ProportionalBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.impl.RLBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[A];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[A];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[A];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[A];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[A];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.spi.JPPFBundlerProvider"[A];
	"org.jppf.logging.jmx.JmxLoggerImpl"->"org.jppf.logging.jmx.JmxLogger"[A];
	"org.jppf.logging.jmx.JmxMessageNotifier"->"org.jppf.logging.jmx.JmxLogger"[A];
	"sample.test.jppfcallable.JPPFCallableRunner"->"org.jppf.logging.jmx.JmxLogger"[A];
	"test.jmx.JmxLogging"->"org.jppf.logging.jmx.JmxLogger"[A];
	"org.jppf.management.AbstractJMXServer"->"org.jppf.management.JMXServer"[A];
	"org.jppf.management.JMXServerFactory"->"org.jppf.management.JMXServer"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.management.JMXServer"[A];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.management.JMXServer"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.management.JMXServer"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.management.JMXServer"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.management.JMXServer"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.management.JMXServer"[A];
	"org.jppf.management.diagnostics.AbstractDiagnosticsMBeanProvider"->"org.jppf.management.spi.JPPFMBeanProvider"[A];
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDumpWriter"[A];
	"org.jppf.management.diagnostics.__ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDumpWriter"[A];
	"org.jppf.management.diagnostics.HeapDumpCollector.Factory"->"org.jppf.management.diagnostics.HeapDumpCollector"[A];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.HeapDumpCollector"[A];
	"org.jppf.management.diagnostics.HeapDumpCollectorIBM"->"org.jppf.management.diagnostics.HeapDumpCollector"[A];
	"org.jppf.management.diagnostics.HeapDumpCollectorOracle"->"org.jppf.management.diagnostics.HeapDumpCollector"[A];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.forwarding.NodeSelectionProvider"[A];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.management.__JPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.server.node.spi.JPPFDefaultNodeMBeanProvider"->"org.jppf.management.JPPFNodeAdminMBean"[A];
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy"->"org.jppf.management.JPPFNodeMaintenanceMBean"[A];
	"org.jppf.management.__JPPFNodeMaintenanceMBean"->"org.jppf.management.JPPFNodeMaintenanceMBean"[A];
	"org.jppf.management.JPPFNodeMaintenance"->"org.jppf.management.JPPFNodeMaintenanceMBean"[A];
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider"->"org.jppf.management.JPPFNodeMaintenanceMBean"[A];
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"test.jmx.TestJMX"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"org.jppf.management.__JPPFNodeTaskMonitorMBean"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"test.org.jppf.management.TestJPPFNodeTaskMonitorMBean"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"test.org.jppf.server.protocol.TestJPPFTask"->"org.jppf.management.JPPFNodeTaskMonitorMBean"[A];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.AtLeast"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.AtMost"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.BetweenPolicy"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.Contains"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.Equal"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.ExecutionPolicy.AndRule"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.ExecutionPolicy.NotRule"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.ExecutionPolicy.OrRule"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.ExecutionPolicy.XorRule"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.IsInIPv4Subnet"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.IsInIPv6Subnet"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.LessThan"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.MoreThan"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.OneOf"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.PolicyRuleTest"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.Preference"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.RegExp"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.utils.PropertiesCollection"[A];
	"sample.dist.matrix.MyCustomPolicy"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.utils.__PropertiesCollection"->"org.jppf.utils.PropertiesCollection"[A];
	"test.org.jppf.node.policy.TestExecutionPolicy.TestCustomPolicy"->"org.jppf.utils.PropertiesCollection"[A];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.BaseNioMessage"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.NioState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.SSLHandler"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.StateTransitionTask"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.debug.ServerDebug"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.node.NodeClassNioServer"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.ClientMessage"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeMessage"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.nio.ChannelWrapper"[A];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.ChannelSelector"[A];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.nio.ChannelSelector"[A];
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.nio.ChannelSelector"[A];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.nio.ChannelSelector"[A];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.SelectionKeyWrapper"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.StateTransitionTask"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.JPPFDriver"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.nio.NioContext"[A];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.nio.NioContext"[A];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.NioMessage"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.NioMessage"[A];
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.NioMessage"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.NioMessage"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.NioMessage"[A];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.NioMessage"[A];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.NioObject"[A];
	"org.jppf.nio.AbstractNioObject"->"org.jppf.nio.NioObject"[A];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.NioObject"[A];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.NioObject"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.event.TaskExecutionListener"[A];
	"org.jppf.node.protocol.TaskExecutionDispatcher.NotificationTask"->"org.jppf.node.event.TaskExecutionListener"[A];
	"org.jppf.node.event.__TaskExecutionListener"->"org.jppf.node.event.TaskExecutionListener"[A];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.node.event.TaskExecutionListener"[A];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionListener"[A];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionListener"[A];
	"org.jppf.node.idle.IdleDetectionTask"->"org.jppf.node.idle.IdleTimeDetector"[A];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.IdleTimeDetector"[A];
	"org.jppf.node.idle.MacIdleTimeDetector"->"org.jppf.node.idle.IdleTimeDetector"[A];
	"org.jppf.node.idle.WindowsIdleTimeDetector"->"org.jppf.node.idle.IdleTimeDetector"[A];
	"org.jppf.node.idle.X11IdleTimeDetector"->"org.jppf.node.idle.IdleTimeDetector"[A];
	"org.jppf.node.idle.IdleDetectionTask"->"org.jppf.node.idle.IdleTimeDetectorFactory"[A];
	"org.jppf.node.idle.IdleDetector"->"org.jppf.node.idle.IdleTimeDetectorFactory"[A];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.IdleTimeDetectorFactory"[A];
	"org.jppf.node.idle.IdleStateListener";
	"org.jppf.node.idle.IdleDetector"->"org.jppf.node.idle.IdleStateListener"[A];
	"org.jppf.node.protocol.ClassPathImpl"->"org.jppf.node.protocol.ClassPath"[A];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.ClassPath"[A];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.node.protocol.ClassPath"[A];
	"org.jppf.node.protocol.__ClassPath"->"org.jppf.node.protocol.ClassPath"[A];
	"org.jppf.node.protocol.__JobSLA"->"org.jppf.node.protocol.ClassPath"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.protocol.ClassPath"[A];
	"test.org.jppf.node.TestOfflineNode"->"org.jppf.node.protocol.ClassPath"[A];
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.node.protocol.ClassPathElement"[A];
	"org.jppf.node.protocol.__ClassPath"->"org.jppf.node.protocol.ClassPathElement"[A];
	"org.jppf.node.protocol.__ClassPathElement"->"org.jppf.node.protocol.ClassPathElement"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.protocol.ClassPathElement"[A];
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.process.ProcessWrapperEventListener"[A];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapperEventListener"[A];
	"org.jppf.process.ProcessWrapper"->"org.jppf.process.ProcessWrapperEventListener"[A];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.process.ProcessWrapperEventListener"[A];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.process.ProcessLauncherListener"[A];
	"org.jppf.process.LauncherListener"->"org.jppf.process.LauncherListenerProtocolHandler"[A];
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"->"org.jppf.process.LauncherListenerProtocolHandler"[A];
	"org.jppf.scripting.ScriptRunnerFactory"->"org.jppf.utils.pooling.ObjectPool"[A];
	"org.jppf.utils.pooling.AbstractObjectPoolImpl"->"org.jppf.utils.pooling.ObjectPool"[A];
	"org.jppf.utils.pooling.AbstractObjectPoolQueue"->"org.jppf.utils.pooling.ObjectPool"[A];
	"org.jppf.utils.pooling.DirectBufferPool"->"org.jppf.utils.pooling.ObjectPool"[A];
	"org.jppf.utils.SerializationHelperImpl"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.node.JPPFContainer"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.serialization.SerializationHelper"[A];
	"org.jppf.startup.JPPFDriverStartupSPI";
	"org.jppf.server.JPPFDriver"->"org.jppf.startup.JPPFDriverStartupSPI"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.startup.JPPFNodeStartupSPI"[A];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.startup.JPPFNodeStartupSPI"[A];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.startup.JPPFNodeStartupSPI"[A];
	"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"org.jppf.utils.stats.AbstractJPPFSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"org.jppf.utils.stats.JPPFStatisticsEvent"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"org.jppf.utils.stats.SingleValueSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"org.jppf.utils.stats.__JPPFSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"test.org.jppf.node.policy.TestScriptedPolicy"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"test.org.jppf.utils.stats.TestJPPFStatistics.TaskAndJobCountTester"->"org.jppf.utils.stats.JPPFSnapshot"[A];
	"org.jppf.utils.stats.__JPPFStatisticsListener"->"org.jppf.utils.stats.JPPFStatisticsListener"[A];
	"sample.NetworkHelper";
	"sample.InetAddressFilter";
	"sample.NetworkHelper"->"sample.InetAddressFilter"[A];
	"test.counters.LongCounterAtomic"->"test.counters.LongCounter"[A];
	"test.counters.LongCounterLock"->"test.counters.LongCounter"[A];
	"test.counters.LongCounterSynchronized"->"test.counters.LongCounter"[A];
	"test.counters.TestCounters"->"test.counters.LongCounter"[A];
	"test.counters.TestCounters.TestThread"->"test.counters.LongCounter"[A];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleListener"[A];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleListener"[A];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleListener"[A];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleListener"[A];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleListener"[A];
	"org.jppf.dotnetbridge.nodehook.DotnetBridgeHook"->"org.jppf.node.initialization.InitializationHook"[A];
	"org.jppf.node.initialization.OutputRedirectHook"->"org.jppf.node.initialization.InitializationHook"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.initialization.InitializationHook"[A];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.initialization.InitializationHook"[A];
	"org.jppf.jca.demo.J2EEDemo"->"org.jppf.jca.cci.JPPFConnection"[A];
	"org.jppf.jca.cci.JPPFConnectionFactory"->"org.jppf.jca.cci.JPPFConnection"[A];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.cci.JPPFConnection"[A];
	"org.jppf.jca.spi.JPPFManagedConnection"->"org.jppf.jca.cci.JPPFConnection"[A];
	"test.org.jppf.jca.cci.TestJPPFConnection"->"org.jppf.jca.cci.JPPFConnection"[A];
	"test.org.jppf.test.setup.JPPFHelper"->"org.jppf.jca.cci.JPPFConnection"[A];
	"org.jppf.jca.util.JPPFAccessorImpl"->"org.jppf.jca.util.JPPFAccessor"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ClassLoaderConnection"[A];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[A];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.ClassLoaderConnection"[A];
	"org.jppf.classloader.JPPFClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[A];
	"org.jppf.classloader.JPPFLocalClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[A];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ResourceRequestRunner"[A];
	"org.jppf.classloader.AbstractResourceRequest"->"org.jppf.classloader.ResourceRequestRunner"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.ResourceRequestRunner"[A];
	"org.jppf.classloader.ClassLoaderRequestHandler.PeriodicTask"->"org.jppf.classloader.ResourceRequestRunner"[A];
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.ResourceRequestRunner"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.classloader.ResourceRequestRunner"[A];
	"org.jppf.classloader.ClassLoaderListener";
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.ClassLoaderListener"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.node.NodeConnection"[A];
	"org.jppf.node.AbstractNodeConnection"->"org.jppf.node.NodeConnection"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.node.NodeConnection"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.node.NodeConnection"[A];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.node.connection.JPPFDriverConnectionInfo"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.server.peer.PeerNode"->"org.jppf.node.connection.DriverConnectionInfo"[A];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.server.node.spi.JPPFDefaultNodeMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.management.spi.JPPFNodeMBeanProvider"[A];
	"org.jppf.node.Node";
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.node.Node"[A];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.Node"[A];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.Node"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.Node"[A];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.node.Node"[A];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.node.Node"[A];
	"org.jppf.server.node.spi.JPPFDefaultNodeMBeanProvider"->"org.jppf.node.Node"[A];
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider"->"org.jppf.node.Node"[A];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.node.Node"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.node.Node"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.node.Node"[A];
	"org.jppf.node.AbstractNode"->"org.jppf.node.NodeInternal"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.NodeInternal"[A];
	"org.jppf.node.NodeRunner.ShutdownOrRestart"->"org.jppf.node.NodeInternal"[A];
	"org.jppf.node.connection.JPPFCsvFileConnectionStrategy"->"org.jppf.node.connection.DriverConnectionStrategy"[A];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionStrategy"[A];
	"org.jppf.node.connection.MyConnectionStrategy"->"org.jppf.node.connection.DriverConnectionStrategy"[A];
	"org.jppf.node.NodeRunner"->"org.jppf.node.connection.DriverConnectionStrategy"[A];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleErrorHandler"[A];
	"org.jppf.node.event.LifeCycleEventHandler"->"org.jppf.node.event.NodeLifeCycleErrorHandler"[A];
	"org.jppf.node.idle.MacIdleTimeDetector.ApplicationServices";
	"org.jppf.node.idle.MacIdleTimeDetector"->"org.jppf.node.idle.MacIdleTimeDetector.ApplicationServices"[A];
	"org.jppf.node.idle.X11IdleTimeDetector.Xss";
	"org.jppf.node.idle.X11IdleTimeDetector"->"org.jppf.node.idle.X11IdleTimeDetector.Xss"[A];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.screensaver.NodeIntegration"[A];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.screensaver.NodeIntegration"[A];
	"org.jppf.node.screensaver.impl.JPPFScreenSaverImpl"->"org.jppf.node.screensaver.JPPFScreenSaver"[A];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.screensaver.JPPFScreenSaver"[A];
	"org.jppf.node.screensaver.impl.SimpleScreenSaver"->"org.jppf.node.screensaver.JPPFScreenSaver"[A];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.screensaver.JPPFScreenSaver"[A];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.screensaver.JPPFScreenSaver"[A];
	"org.jppf.server.node.AbstractNodeConnectionChecker"->"org.jppf.server.node.NodeConnectionChecker"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.NodeConnectionChecker"[A];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.NodeConnectionChecker"[A];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.server.node.NodeConnectionChecker"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.server.node.NodeIO"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.NodeIO"[A];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.server.node.SerializationExceptionHook"[A];
	"org.jppf.server.node.DefaultSerializationExceptionHook"->"org.jppf.server.node.SerializationExceptionHook"[A];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.server.node.SerializationExceptionHook"[A];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.ClassLoaderProvider"[A];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.server.node.ClassLoaderProvider"[A];
	"org.jppf.management.diagnostics.spi.DriverDiagnosticsMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[A];
	"org.jppf.server.job.management.DriverJobManagementMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[A];
	"org.jppf.server.spi.JPPFDefaultDriverMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[A];
	"org.jppf.server.spi.JPPFNodeForwardingMBeanProvider"->"org.jppf.management.spi.JPPFDriverMBeanProvider"[A];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.management.forwarding.ForwardingNotificationEventListener"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.ForwardingNotificationEventListener"[A];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.event.NodeConnectionListener"[A];
	"org.jppf.server.debug.ServerDebug"->"org.jppf.server.debug.ServerDebugMBean"[A];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.debug.ServerDebugMBean"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.job.JobManager"[A];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.job.JobManager"[A];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.job.JobManager"[A];
	"org.jppf.server.queue.JPPFPriorityQueue"->"org.jppf.server.job.JobManager"[A];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerJobChangeListener"[A];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.protocol.ServerJobChangeListener"[A];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerJobChangeListener"[A];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.ServerJobChangeListener"[A];
	"org.jppf.server.protocol.SendResultsStrategy.SendAllResultsStrategy"->"org.jppf.server.protocol.SendResultsStrategy"[A];
	"org.jppf.server.protocol.SendResultsStrategy.SendNodeResultsStrategy"->"org.jppf.server.protocol.SendResultsStrategy"[A];
	"org.jppf.server.protocol.SendResultsStrategyManager"->"org.jppf.server.protocol.SendResultsStrategy"[A];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.server.protocol.SendResultsStrategy"[A];
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.scenario.ScenarioRunner"[A];
	"org.jppf.test.scenario.Scenario"->"org.jppf.test.scenario.ScenarioRunner"[A];
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.Scenario"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.ScenarioConfigurationImpl"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.setup.RestartableDriverProcessLauncher"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.setup.RestartableNodeProcessLauncher"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.setup.RestartableProcessLauncher"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.setup.Setup"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.classloading.Runner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.jmxthreads.JMXThreadsRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.s2.S2Runner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.scenario.s3.S3Runner"->"org.jppf.test.scenario.ScenarioConfiguration"[A];
	"org.jppf.test.addons.mbeans.NodeTest"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"org.jppf.test.addons.mbeans.NodeTest"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"org.jppf.test.addons.startups.TaskNotifier"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"test.org.jppf.server.protocol.TestJPPFJobSLA2"->"org.jppf.test.addons.mbeans.NodeTestMBean"[A];
	"test.org.jppf.test.runner.AbstractTestResultRenderer"->"test.org.jppf.test.runner.TestResultRenderer"[A];
	"org.jppf.ui.options.AbstractOptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[R];
	"org.jppf.ui.options.AbstractOptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[P];
	"org.jppf.ui.options.AbstractOptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[R];
	"org.jppf.ui.options.AbstractOptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.event.ClientConnectionStatusEvent";
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.event.ClientListener"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.event.ClientListener"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.ConnectionPool"[R];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.AbstractJPPFClient"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[R];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[P];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[R];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[P];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.management.diagnostics.HealthSnapshot"[P];
	"org.jppf.management.JPPFManagementInfo";
	"org.jppf.client.monitoring.topology.AbstractTopologyComponent"->"org.jppf.management.JPPFManagementInfo"[R];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.AbstractJPPFClientConnection"[R];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.server.job.JobManager"[R];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.server.job.JobManager"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.server.job.JobManager"[R];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.event.ClientQueueListener"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.client.event.ClientQueueListener"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.client.AbstractGenericClient"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.ui.monitoring.node.AbstractTopologyMouseListener"->"org.jppf.ui.actions.JTreeTableActionHandler"[P];
	"org.jppf.ui.monitoring.node.actions.AbstractSelectionAction"->"org.jppf.ui.treetable.AbstractTreeTableOption"[P];
	"org.jppf.ui.monitoring.node.graph.AbstractGraphSelectionAction"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.options.AbstractOptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.AbstractOptionElement"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.AbstractOptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.AbstractOptionContainer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.JavaOption.JavaOptionMouseListener"->"org.jppf.ui.options.JavaOption"[R];
	"org.jppf.ui.options.JavaOption.JavaOptionMouseListener"->"org.jppf.ui.options.JavaOption"[P];
	"org.jppf.ui.plugin.PluggableView"->"org.jppf.client.monitoring.topology.TopologyManager"[R];
	"org.jppf.ui.plugin.PluggableView"->"org.jppf.client.monitoring.topology.TopologyManager"[P];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.client.AbstractClassServerDelegate"->"org.jppf.classloader.ResourceProvider"[R];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.JPPFConnectionPool"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.JPPFClientConnectionStatus"[R];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.JPPFClientConnectionStatus"[P];
	"org.jppf.client.event.ClientConnectionStatusListener";
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.event.ClientConnectionStatusListener"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.event.ClientConnectionStatusListener"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.JPPFClientConnectionStatus"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.JPPFClientConnectionStatus"[P];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.client.AbstractJPPFClientConnection"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.client.JobResults"[R];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JobClientSLA"[P];
	"org.jppf.client.AbstractJPPFJob"->"org.jppf.node.protocol.JobMetadata"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobClientSLA"[R];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobMetadata"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.protocol.JobClientSLA"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.client.balancer.ClientJobStatus"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.client.balancer.AbstractClientJob"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.node.policy.ExecutionPolicy"->"org.jppf.node.policy.PolicyContext"[R];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.execute.ThreadManager"[R];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.execute.AbstractExecutionManager"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.client.taskwrapper.JPPFTaskCallback"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.taskwrapper.JPPFTaskCallback"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.client.monitoring.topology.AbstractRefreshHandler"->"org.jppf.client.monitoring.topology.TopologyManager"[P];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.utils.AbstractJPPFJobStream"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.taskwrapper.AbstractTaskObjectWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper.MethodType"[R];
	"org.jppf.net.AbstractIPAddressPattern"->"org.jppf.net.PatternConfiguration"[P];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.utils.JPPFBuffer"[P];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.comm.socket.AbstractSocketWrapper"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.execute.AbstractThreadManager"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.AbstractThreadManager"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.management.JPPFSystemInformation"[P];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.JPPFContext"[R];
	"org.jppf.load.balancer.AbstractAdaptiveBundler"->"org.jppf.load.balancer.JPPFContext"[P];
	"org.jppf.load.balancer.AbstractBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.AbstractBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.load.balancer.impl.AbstractNodeThreadsLoadBalancer"->"org.jppf.management.JPPFSystemInformation"[P];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.AbstractProportionalBundler"->"org.jppf.load.balancer.BundleDataHolder"[R];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.AbstractRLBundler"->"org.jppf.load.balancer.BundleDataHolder"[R];
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[P];
	"org.jppf.management.diagnostics.AbstractThreadDumpWriter"->"org.jppf.management.diagnostics.LockInformation"[P];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.NioContext"[R];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.ChannelSelector"[R];
	"org.jppf.nio.AbstractChannelWrapper"->"org.jppf.nio.ChannelSelector"[P];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.NioMessage"[R];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.NioMessage"[P];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.SSLHandler"[R];
	"org.jppf.nio.AbstractNioContext"->"org.jppf.nio.SSLHandler"[P];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.AbstractNioMessage"->"org.jppf.io.DataLocation"[P];
	"org.jppf.nio.AbstractNioObject"->"org.jppf.io.DataLocation"[P];
	"org.jppf.nio.AbstractNioObject"->"org.jppf.io.DataLocation"[R];
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioServer"[P];
	"org.jppf.nio.NioServerFactory"->"org.jppf.utils.collections.CollectionMap"[R];
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioState"[R];
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioTransition"[R];
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioServer"[R];
	"org.jppf.nio.NioServerFactory"->"org.jppf.nio.NioTransition"[R];
	"org.jppf.nio.NioState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.SimpleNioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.node.policy.BetweenPolicy"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.protocol.AbstractCommonSLA"[R];
	"org.jppf.node.protocol.AbstractCommonSLA"->"org.jppf.node.protocol.AbstractCommonSLA"[P];
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.node.protocol.CommandLineTask"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.utils.stats.AbstractJPPFSnapshot"->"org.jppf.utils.stats.AbstractJPPFSnapshot"[R];
	"org.jppf.utils.stats.AbstractJPPFSnapshot"->"org.jppf.utils.stats.AbstractJPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFSnapshot.LabelBasedFilter"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.process.ProcessWrapperEvent"[P];
	"sample.dist.commandline.CommandLineTaskEx"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.AbstractJPPFClassLoader"->"org.jppf.utils.JPPFCallable"[P];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.AbstractJPPFClassLoaderLifeCycle"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.jca.util.JPPFAccessorImpl"->"org.jppf.client.AbstractGenericClient"[R];
	"org.jppf.jca.util.JPPFAccessorImpl"->"org.jppf.client.AbstractGenericClient"[P];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ResourceRequestRunner"[P];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ResourceRequestRunner"[P];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.classloader.AbstractClassLoaderConnection"->"org.jppf.classloader.ClassLoaderRequestHandler"[R];
	"org.jppf.classloader.AbstractResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.classloader.AbstractResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.classloader.AbstractResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.node.AbstractNode"->"org.jppf.node.NodeConnection"[R];
	"org.jppf.node.AbstractNode"->"org.jppf.serialization.SerializationHelper"[R];
	"org.jppf.node.AbstractNode"->"org.jppf.node.event.LifeCycleEventHandler"[R];
	"org.jppf.node.AbstractNode"->"org.jppf.management.JMXServer"[R];
	"org.jppf.node.AbstractNode"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.node.AbstractNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.JPPFNode"->"org.jppf.management.JPPFNodeAdminMBean"[R];
	"org.jppf.server.node.JPPFNode"->"org.jppf.management.JPPFNodeAdminMBean"[P];
	"org.jppf.server.node.JPPFNode"->"org.jppf.execute.ExecutionManager"[R];
	"org.jppf.server.node.JPPFNode"->"org.jppf.node.event.LifeCycleEventHandler"[R];
	"org.jppf.server.node.JPPFNode"->"org.jppf.server.node.NodeConnectionChecker"[R];
	"org.jppf.server.node.JPPFNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.node.screensaver.NodeIntegrationAdapter"->"org.jppf.node.screensaver.JPPFScreenSaver"[P];
	"org.jppf.server.node.JPPFContainer"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.server.node.JPPFContainer"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.server.node.JPPFContainer"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.server.node.AbstractCommonNode"->"org.jppf.server.node.JPPFContainer"[R];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.server.node.AbstractNodeIO"->"org.jppf.utils.Pair"[R];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.nio.StateTransitionManager"[P];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.server.protocol.ServerTaskBundleNode"[R];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.server.protocol.ServerTaskBundleNode"[P];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.server.nio.nodeserver.AbstractNodeContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JobMetadata"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.protocol.ServerJobStatus"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.protocol.ServerJobStatus"[R];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.submission.SubmissionStatus"[R];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.submission.SubmissionStatus"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.server.submission.SubmissionStatus"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.protocol.AbstractServerJob"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.server.nio.AbstractTaskBundleMessage"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.nio.acceptor.AcceptorServerState"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[P];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.AbstractClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.server.JPPFDriver"[P];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.server.nio.classloader.ClassCache"[R];
	"org.jppf.server.nio.classloader.ClassNioServer"->"org.jppf.classloader.ResourceProvider"[R];
	"org.jppf.server.nio.classloader.client.ClientClassServerState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[R];
	"org.jppf.server.nio.classloader.node.NodeClassServerState"->"org.jppf.server.nio.classloader.node.NodeClassContext"[P];
	"org.jppf.server.nio.client.ClientServerState"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.nodeserver.NodeServerState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.server.nio.classloader.ClassNioServer"[P];
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.comm.socket.SocketChannelClient"[R];
	"org.jppf.server.peer.AbstractSocketChannelHandler"->"org.jppf.comm.socket.SocketChannelClient"[R];
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.setup.Setup"[R];
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.setup.Setup"[P];
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[R];
	"org.jppf.test.scenario.AbstractScenarioRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[P];
	"org.jppf.test.setup.JmxAwareCallable"->"org.jppf.management.JMXConnectionWrapper"[R];
	"org.jppf.test.setup.JmxAwareCallable"->"org.jppf.management.JMXConnectionWrapper"[P];
	"test.org.jppf.test.runner.AbstractTestResultRenderer"->"test.org.jppf.test.runner.ResultHolder"[P];
	"org.jppf.ui.options.event.ValueChangeEvent"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.event.ValueChangeEvent"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.actions.ActionsInitializer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.management.diagnostics.ThreadDump"[R];
	"org.jppf.ui.monitoring.diagnostics.ThreadDumpAction"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[P];
	"org.jppf.ui.actions.JTreeTableActionHandler"->"org.jppf.ui.treetable.JTreeTable"[P];
	"org.jppf.ui.actions.JTreeTableActionHandler"->"org.jppf.ui.treetable.JTreeTable"[P];
	"org.jppf.ui.treetable.JTreeTable"->"org.jppf.ui.treetable.TreeTableModel"[P];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionContainer"[P];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.factory.OptionsHandler.OptionNode"[P];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.factory.OptionsHandler.OptionNode"[P];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.xml.OptionsPageBuilder"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.factory.OptionsHandler.OptionNode"[R];
	"org.jppf.ui.options.factory.OptionsHandler"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.AreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.config.ChartConfiguration"->"org.jppf.ui.monitoring.charts.ChartType"[P];
	"org.jppf.ui.monitoring.charts.config.ChartConfiguration"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[R];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[P];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.event.StatsHandlerListener"[P];
	"org.jppf.ui.monitoring.event.ShowIPListener";
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.event.ShowIPListener"[P];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.event.ShowIPListener"[P];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.ConnectionDataHolder"[R];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.ui.monitoring.data.ClientHandler"[R];
	"org.jppf.ui.monitoring.data.StatsHandler"->"org.jppf.client.monitoring.topology.TopologyManager"[R];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.Bar3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.StackedAreaChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.BarSeries3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.data.ConnectionDataHolder"->"org.jppf.client.monitoring.topology.TopologyDriver"[R];
	"org.jppf.ui.monitoring.data.ConnectionDataHolder"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[R];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.diagnostics.Thresholds"[R];
	"org.jppf.ui.monitoring.data.ClientHandler"->"org.jppf.ui.monitoring.data.Fields"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.TabConfiguration"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.TabConfiguration"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.TabConfiguration"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.TabConfiguration"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.event.StatsHandlerEvent"[P];
	"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"->"org.jppf.ui.monitoring.charts.config.PreferencesStorage"[R];
	"org.jppf.ui.monitoring.charts.config.PreferencesStorage"->"org.jppf.ui.monitoring.charts.config.JPPFChartBuilder"[P];
	"org.jppf.ui.monitoring.event.StatsHandlerEvent"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.event.StatsHandlerEvent"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[R];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.PlotXYChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.Pie3DChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.RingChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.RingChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.RingChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.DifferenceChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.StackedBarSeries3DChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.MeterChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.ConsoleLauncher.MainFrameObserver"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.utils.JPPFConfiguration"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.TypedProperties"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.TypedProperties"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.TypedProperties"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.AbstractOptionElement"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.AbstractOption"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.event.ValueChangeListener"[R];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.AbstractOption"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionsPageBuilder"->"org.jppf.ui.options.xml.OptionElementFactory"[R];
	"org.jppf.ui.monitoring.ConsoleLoader"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.libmanagement.Downloader"->"org.jppf.location.LocationEventListener"[R];
	"org.jppf.libmanagement.Downloader"->"org.jppf.location.LocationEventListener"[P];
	"org.jppf.ui.monitoring.data.ClientHandler.SetCurrentConnectionTask"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.load.balancer.LoadBalancingInformation"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.LoadBalancingInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListenerAdapter"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.management.forwarding.JPPFNodeForwardingMBean"[R];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.server.job.management.DriverJobManagementMBean"[R];
	"org.jppf.client.monitoring.topology.TopologyDriver"->"org.jppf.management.diagnostics.DiagnosticsMBean"[R];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyNode"[R];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.event.ClientEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.event.ClientEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyListener"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyListener"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyManager"->"org.jppf.client.JPPFClient"[R];
	"org.jppf.client.JPPFClient"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.JPPFClient"->"org.jppf.client.AbstractJPPFClientConnection"[R];
	"org.jppf.client.JPPFClient"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.JPPFClient"->"org.jppf.server.job.JobManager"[R];
	"org.jppf.client.JPPFClient"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.JPPFClient"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.client.monitoring.topology.TopologyEvent"->"org.jppf.client.monitoring.topology.TopologyManager"[P];
	"org.jppf.client.monitoring.topology.TopologyEvent"->"org.jppf.client.monitoring.topology.TopologyDriver"[R];
	"org.jppf.client.monitoring.topology.TopologyEvent"->"org.jppf.client.monitoring.topology.TopologyNode"[R];
	"org.jppf.client.monitoring.topology.TopologyEvent"->"org.jppf.client.monitoring.topology.TopologyManager"[R];
	"org.jppf.client.monitoring.topology.TopologyEvent"->"org.jppf.client.monitoring.topology.TopologyEvent.UpdateType"[R];
	"org.jppf.ui.monitoring.data.NewConnectionTask"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.data.ConnectionFailedTask"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.event.ShowIPEvent";
	"org.jppf.ui.monitoring.event.ShowIPEvent"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.event.ShowIPEvent"->"org.jppf.ui.monitoring.data.StatsHandler"[R];
	"org.jppf.management.JPPFManagementInfo"->"org.jppf.utils.HostIP"[P];
	"org.jppf.management.JPPFManagementInfo"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.management.JPPFManagementInfo"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.management.JPPFManagementInfo"->"org.jppf.management.JPPFSystemInformation"[P];
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.data.CsvStatsExporter"->"org.jppf.ui.monitoring.data.Fields"[P];
	"org.jppf.ui.monitoring.data.StatsRefreshTask"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.stats.JPPFStatistics"[P];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.stats.JPPFStatistics"[P];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.management.diagnostics.HealthSnapshot"[P];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.stats.JPPFStatistics"[P];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.utils.stats.JPPFStatistics"[P];
	"org.jppf.ui.monitoring.data.StatsFormatter"->"org.jppf.management.diagnostics.HealthSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsHelper"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.StatsHandler"[P];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.Fields"[P];
	"org.jppf.ui.monitoring.data.TextStatsExporter"->"org.jppf.ui.monitoring.data.Fields"[P];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.data.StatusBarHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.management.JPPFNodeState"[P];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[R];
	"org.jppf.client.monitoring.topology.TopologyNode"->"org.jppf.client.monitoring.topology.TopologyNodeStatus"[P];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"[P];
	"org.jppf.ui.monitoring.diagnostics.HealthTableCellRenderer"->"org.jppf.ui.monitoring.diagnostics.Thresholds.Name"[P];
	"org.jppf.ui.treetable.JPPFTreeTable"->"org.jppf.ui.treetable.AbstractJPPFTreeTableModel"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.utils.TreeTableUtils"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.utils.TreeTableUtils"->"org.jppf.client.monitoring.topology.TopologyNode"[P];
	"org.jppf.ui.utils.TreeTableUtils"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[P];
	"org.jppf.ui.utils.TreeTableUtils"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.ui.monitoring.node.actions.SelectDriversAction"->"org.jppf.ui.treetable.AbstractTreeTableOption"[P];
	"org.jppf.ui.monitoring.node.actions.SelectNodesAction"->"org.jppf.ui.treetable.AbstractTreeTableOption"[P];
	"org.jppf.ui.monitoring.node.actions.SelectAllAction"->"org.jppf.ui.treetable.AbstractTreeTableOption"[P];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.monitoring.diagnostics.JVMHealthPanel"[P];
	"org.jppf.ui.monitoring.diagnostics.ThresholdSettingsAction"->"org.jppf.ui.monitoring.diagnostics.Thresholds.Name"[P];
	"org.jppf.ui.monitoring.diagnostics.JVMHealthTreeTableMouseListener"->"org.jppf.ui.actions.JTreeTableActionHandler"[P];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[P];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.HTMLThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[P];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.TextThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.JobDataPanel"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"[R];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"[R];
	"org.jppf.ui.monitoring.job.AccumulatorHelper"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorDriver"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorJob"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[P];
	"org.jppf.ui.monitoring.job.AccumulatorHelper.AccumulatorNode"->"org.jppf.job.JobInformation"[R];
	"org.jppf.job.JobInformation"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.client.monitoring.topology.TopologyManager"[R];
	"org.jppf.ui.monitoring.job.JobDataPanel"->"org.jppf.ui.monitoring.job.AccumulatorHelper"[R];
	"org.jppf.ui.monitoring.job.JobAccumulator"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[P];
	"org.jppf.ui.monitoring.job.JobAccumulator"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[R];
	"org.jppf.ui.monitoring.job.JobAccumulator"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[P];
	"org.jppf.ui.monitoring.job.JobAccumulator"->"org.jppf.client.monitoring.topology.TopologyEvent.Type"[P];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.ui.monitoring.job.JobDataType"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.job.JobInformation"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.management.JPPFManagementInfo"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.server.job.management.DriverJobManagementMBean"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.server.job.management.DriverJobManagementMBean"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.ui.monitoring.job.JobData"->"org.jppf.client.monitoring.topology.TopologyDriver"[R];
	"org.jppf.ui.monitoring.job.JobDataPanel.JobNotificationTask"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.ui.monitoring.job.JobDataPanel"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.job.JobInformation"[P];
	"org.jppf.ui.monitoring.job.JobDataPanelManager"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.job.JobNotification"->"org.jppf.job.JobEventType"[P];
	"org.jppf.job.JobNotification"->"org.jppf.job.JobInformation"[R];
	"org.jppf.job.JobNotification"->"org.jppf.management.JPPFManagementInfo"[R];
	"org.jppf.job.JobNotification"->"org.jppf.job.JobEventType"[R];
	"org.jppf.server.job.management.NodeJobInformation"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.ui.monitoring.job.JobTableCellRenderer"->"org.jppf.ui.monitoring.job.JobDataPanel"[P];
	"org.jppf.ui.monitoring.job.JobTreeTableMouseListener"->"org.jppf.ui.actions.JTreeTableActionHandler"[P];
	"org.jppf.client.event.ClientConnectionStatusEvent"->"org.jppf.client.event.ClientConnectionStatusHandler"[P];
	"org.jppf.client.event.ClientConnectionStatusEvent"->"org.jppf.client.event.ClientConnectionStatusHandler"[R];
	"org.jppf.client.event.ClientConnectionStatusEvent"->"org.jppf.client.JPPFClientConnectionStatus"[R];
	"org.jppf.ui.monitoring.job.JobDataPanelManager.ConnectionStatusListener"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.ui.monitoring.job.JobNotificationListener"->"org.jppf.ui.monitoring.job.JobDataPanel"[P];
	"org.jppf.ui.monitoring.MonitorTableModel"->"org.jppf.ui.monitoring.data.Fields"[P];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.management.JPPFSystemInformation"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState.ConnectionState"[R];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState.ConnectionState"[P];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState.ExecutionState"[R];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState.ExecutionState"[P];
	"org.jppf.management.JPPFNodeState"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.ui.monitoring.node.actions.ProvisioningAction"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.ui.treetable.TreeTableModelAdapter"->"org.jppf.ui.treetable.TreeTableModel"[P];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[P];
	"org.jppf.ui.monitoring.node.actions.SystemInformationAction"->"org.jppf.management.JPPFSystemInformation"[P];
	"org.jppf.client.monitoring.topology.TopologyPeer"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.ui.monitoring.node.graph.ExpandOrCollapseGraphAction"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[R];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyNode"[R];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[R];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.AbstractTopologyComponent"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.graph.LayoutFactory"->"org.jppf.ui.monitoring.node.graph.RadialLayout"[R];
	"org.jppf.ui.monitoring.node.graph.JPPFVertexLabelRenderer"->"org.jppf.client.monitoring.topology.TopologyNode"[P];
	"org.jppf.ui.monitoring.node.graph.PopupMenuMousePlugin"->"org.jppf.ui.actions.ActionHandler"[P];
	"org.jppf.ui.monitoring.node.graph.SelectGraphDriversAction"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.monitoring.node.graph.SelectGraphNodesAction"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.monitoring.node.graph.ToggleModeAction"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.monitoring.node.graph.ToggleLayoutAction"->"org.jppf.ui.monitoring.node.graph.GraphOption"[P];
	"org.jppf.ui.monitoring.node.graph.GraphTopologyHandler.NodeAdded"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeDataPanel"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.ui.monitoring.node.NodeRenderer"->"org.jppf.ui.monitoring.node.NodeDataPanel"[P];
	"org.jppf.ui.monitoring.node.NodeTableCellRenderer"->"org.jppf.ui.monitoring.node.NodeDataPanel"[P];
	"org.jppf.ui.monitoring.node.NodeTreeTableMouseListener"->"org.jppf.ui.actions.JTreeTableActionHandler"[P];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.OptionContainer"[R];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.OptionContainer"[R];
	"org.jppf.ui.options.docking.DetachableComponentDescriptor"->"org.jppf.ui.options.OptionContainer"[P];
	"org.jppf.ui.options.event.ScriptedMouseListener"->"org.jppf.ui.options.AbstractOption"[P];
	"org.jppf.scripting.ScriptRunnerFactory"->"org.jppf.scripting.ScriptRunner"[R];
	"org.jppf.scripting.ScriptRunnerFactory"->"org.jppf.scripting.ScriptRunner"[P];
	"org.jppf.ui.options.event.ScriptedValueChangeListener"->"org.jppf.ui.options.event.ValueChangeEvent"[P];
	"org.jppf.ui.options.OptionPanel"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.OptionPanel"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.PluggableViewOption"->"org.jppf.ui.plugin.PluggableView"[P];
	"org.jppf.ui.options.SplitPaneOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.SplitPaneOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.TabbedPaneOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.ToolbarOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.ToolbarOption"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.xml.DebugMouseListener"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[P];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor.ItemDescriptor"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[P];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor.ListenerDescriptor"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[P];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[P];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[P];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.ui.options.xml.OptionDescriptor.ScriptDescriptor"[R];
	"org.jppf.ui.options.xml.OptionDescriptorParser"->"org.jppf.node.Node"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionsPageBuilder"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionsPageBuilder"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.Option"[R];
	"org.jppf.ui.options.xml.OptionElementFactory"->"org.jppf.ui.options.xml.OptionDescriptor"[P];
	"org.jppf.ui.plugin.PluggableViewDescriptor";
	"org.jppf.ui.plugin.PluggableViewDescriptor"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.plugin.PluggableViewDescriptor"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.DataProvider"[R];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.utils.JPPFCallable"[P];
	"org.jppf.node.protocol.AbstractTask"->"org.jppf.node.protocol.TaskExecutionDispatcher"[P];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.comm.socket.SocketClient"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[R];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[R];
	"org.jppf.io.IOHelper"->"org.jppf.io.InputSource"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[P];
	"org.jppf.io.IOHelper"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[P];
	"org.jppf.io.IOHelper"->"org.jppf.data.transform.JPPFDataTransform"[P];
	"org.jppf.io.IOHelper"->"org.jppf.data.transform.JPPFDataTransform"[P];
	"org.jppf.io.IOHelper"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.io.IOHelper"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[R];
	"org.jppf.io.IOHelper"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[R];
	"org.jppf.io.IOHelper"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.io.IOHelper"->"org.jppf.io.DataLocation"[R];
	"org.jppf.io.IOHelper"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.io.IOHelper"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.classloader.ResourceProvider.Factory"->"org.jppf.classloader.ResourceProvider"[R];
	"org.jppf.utils.configuration.ConfigurationHelper"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.balancer.ClientJob"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.balancer.ClientJob"[P];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.balancer.ClientJob"[R];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.node.protocol.DataProvider"[R];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.client.balancer.ClientTaskBundle"[R];
	"org.jppf.client.balancer.ClientTaskBundle"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.client.JPPFMulticastReceiverThread.ConnectionHandler"[P];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.JPPFMulticastReceiverThread"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.queue.QueueEvent"->"org.jppf.queue.JPPFQueue"[P];
	"org.jppf.queue.QueueEvent"->"org.jppf.queue.JPPFQueue"[R];
	"org.jppf.comm.discovery.JPPFConnectionInformation"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.comm.discovery.JPPFConnectionInformation"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.comm.discovery.JPPFConnectionInformation"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.comm.discovery.JPPFConnectionInformation"->"org.jppf.comm.discovery.JPPFConnectionInformation"[R];
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.AbstractGenericClient"[P];
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.JPPFConnectionPool"->"org.jppf.client.JPPFConnectionPool"[P];
	"org.jppf.client.event.ClientQueueEvent"->"org.jppf.client.AbstractGenericClient"[P];
	"org.jppf.client.event.ClientQueueEvent"->"org.jppf.client.JPPFClient"[R];
	"org.jppf.client.event.ClientQueueEvent"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.comm.discovery.IPFilter"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.comm.discovery.IPFilter"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.ConnectionInitializer"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.utils.NetworkUtils";
	"org.jppf.utils.NetworkUtils"->"sample.InetAddressFilter"[P];
	"org.jppf.client.event.ClientEvent"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.event.ClientEvent"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.client.JPPFResultCollector"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.DataProvider"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.JobClientSLA"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.client.event.JobListener"[P];
	"org.jppf.client.JPPFJob"->"org.jppf.client.event.JobListener"[P];
	"org.jppf.client.JPPFJob"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.client.JPPFJob"->"org.jppf.client.persistence.JobPersistence"[R];
	"org.jppf.client.JPPFJob"->"org.jppf.client.persistence.JobPersistence"[P];
	"org.jppf.client.JPPFJob"->"org.jppf.client.JobStatus"[R];
	"org.jppf.utils.VersionUtils"->"org.jppf.utils.VersionUtils.Version"[R];
	"org.jppf.utils.VersionUtils"->"org.jppf.utils.VersionUtils.Version"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.SystemUtils"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.TaskServerConnectionHandler"->"org.jppf.comm.socket.SocketInitializer"[R];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.JPPFJobSLA"[R];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.node.protocol.ClassPath"[P];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.JPPFJobSLA"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.JPPFJobClientSLA"->"org.jppf.node.protocol.JPPFJobClientSLA"[R];
	"org.jppf.utils.ConcurrentUtils"->"org.jppf.utils.ThreadSynchronization"[P];
	"org.jppf.utils.ConcurrentUtils"->"org.jppf.utils.ConcurrentUtils.Condition"[P];
	"org.jppf.utils.ConcurrentUtils"->"org.jppf.utils.ConcurrentUtils.Condition"[P];
	"org.jppf.utils.ConcurrentUtils"->"org.jppf.utils.ConcurrentUtils.Condition"[P];
	"org.jppf.client.event.JobEvent"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.event.JobEvent"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.event.JobEvent"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.event.JobEvent"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.management.JPPFSystemInformation"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.JPPFClientConnectionStatus"[R];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.JPPFClientConnectionStatus"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.JPPFClientConnection"[R];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.event.ClientConnectionStatusListener"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.event.ClientConnectionStatusListener"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.ClientTaskBundle"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote"->"org.jppf.client.balancer.ClientTaskBundle"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.balancer.ClientTaskBundle"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.balancer.ChannelWrapperRemote.RemoteRunnable"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.utils.TraversalList"[R];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.utils.TraversalList"[P];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JPPFTaskBundle"[P];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JPPFTaskBundle"[R];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.node.protocol.JPPFTaskBundle"->"org.jppf.node.protocol.JobMetadata"[P];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.client.balancer.ClientExecutionManager"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.event.TaskExecutionListener"[P];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.event.TaskExecutionListener"[P];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.node.protocol.TaskExecutionDispatcher"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.scheduling.JPPFScheduleHandler"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.scheduling.JPPFScheduleHandler"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.client.balancer.JobManagerClient"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.server.queue.JPPFPriorityQueue"[P];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.JPPFContext"[R];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.balancer.ClientJob"[P];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.client.balancer.queue.TaskQueueChecker"->"org.jppf.client.balancer.ClientJob"[P];
	"org.jppf.client.balancer.queue.ChannelPriorityComparator"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.client.balancer.queue.JobExpirationAction"->"org.jppf.client.balancer.ClientJob"[P];
	"org.jppf.client.balancer.queue.JobPriorityComparator"->"org.jppf.client.balancer.ClientJob"[P];
	"org.jppf.client.balancer.queue.JobScheduleAction"->"org.jppf.client.balancer.ClientJob"[P];
	"org.jppf.load.balancer.impl.FixedSizeProfile"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.impl.FixedSizeProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.client.JPPFContextClient"->"org.jppf.queue.JPPFQueue"[P];
	"org.jppf.load.balancer.impl.FixedSizeBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.FixedSizeBundler"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.client.JPPFClientConnection"[P];
	"org.jppf.client.ClassServerDelegateImpl"->"org.jppf.comm.socket.SocketInitializer"[R];
	"org.jppf.comm.socket.SocketInitializerImpl"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.JPPFExecutorService"[P];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.utils.Pair"[R];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.taskwrapper.JPPFAnnotatedTask"[P];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[R];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[P];
	"org.jppf.client.concurrent.BatchHandler"->"org.jppf.client.concurrent.ExecutorServiceConfiguration"[R];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[P];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[P];
	"org.jppf.client.taskwrapper.JPPFAnnotatedTask"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.client.concurrent.JPPFExecutorService"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.JobConfiguration"[P];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.JobConfiguration"[R];
	"org.jppf.client.concurrent.ExecutorServiceConfigurationImpl"->"org.jppf.client.concurrent.TaskConfiguration"[R];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.client.concurrent.JPPFTaskFuture"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.client.concurrent.JobConfigurationImpl"->"org.jppf.client.concurrent.JobConfiguration"[P];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[R];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[P];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[R];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[P];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.client.concurrent.TaskConfigurationImpl"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.client.concurrent.JPPFCompletionService"->"org.jppf.client.concurrent.JPPFExecutorService"[P];
	"org.jppf.client.concurrent.JPPFCompletionService"->"org.jppf.client.concurrent.JPPFTaskFuture"[R];
	"org.jppf.client.concurrent.JPPFCompletionService"->"org.jppf.client.concurrent.JPPFTaskFuture"[P];
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.event.JobListenerAdapter"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.debug.Debug"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.debug.Debug"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.debug.Debug"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.event.ClientQueueEventDispatcher"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.client.event.ClientQueueEventDispatcher"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.client.event.ClientQueueListenerAdapter"->"org.jppf.client.event.ClientQueueEvent"[P];
	"org.jppf.client.event.ClientQueueListenerAdapter"->"org.jppf.client.event.ClientQueueEvent"[P];
	"org.jppf.client.event.JobStatusEvent"->"org.jppf.client.JobStatus"[P];
	"org.jppf.client.event.JobStatusEvent"->"org.jppf.client.JobStatus"[R];
	"org.jppf.client.JMXConnectionPool"->"org.jppf.client.JPPFConnectionPool"[P];
	"org.jppf.client.JMXConnectionPool"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.client.JPPFClientConnectionImpl"->"org.jppf.comm.socket.SocketInitializer"[R];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.comm.discovery.IPFilter"[P];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.comm.discovery.JPPFConnectionInformation"[R];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.comm.discovery.JPPFMulticastReceiver"->"org.jppf.comm.discovery.JPPFConnectionInformation"[R];
	"org.jppf.client.monitoring.topology.JVMHealthRefreshHandler"->"org.jppf.client.monitoring.topology.TopologyManager"[P];
	"org.jppf.client.monitoring.topology.NodeRefreshHandler"->"org.jppf.client.monitoring.topology.TopologyManager"[P];
	"org.jppf.client.monitoring.topology.NodeRefreshHandler"->"org.jppf.client.monitoring.topology.TopologyDriver"[P];
	"org.jppf.client.monitoring.topology.TopologyManager.StatusListener"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.client.persistence.DefaultFilePersistenceManager"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.utils.ObjectSerializerImpl"->"org.jppf.utils.JPPFBuffer"[P];
	"org.jppf.classloader.CompositeResourceWrapper"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.net.RangePattern"->"org.jppf.utils.Range"[R];
	"org.jppf.comm.discovery.JPPFMulticastReceiver.Receiver"->"org.jppf.comm.discovery.JPPFConnectionInformation"[R];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.recovery.ClientConnectionListener"[P];
	"org.jppf.comm.recovery.ClientConnection"->"org.jppf.comm.recovery.ClientConnectionListener"[P];
	"org.jppf.comm.recovery.ClientConnectionEvent"->"org.jppf.comm.recovery.ClientConnection"[P];
	"org.jppf.comm.recovery.ClientConnectionEvent"->"org.jppf.comm.recovery.ClientConnection"[R];
	"org.jppf.comm.socket.BootstrapSocketClient"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.comm.recovery.ServerConnection"[P];
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.comm.recovery.ServerConnection"[P];
	"org.jppf.comm.recovery.RecoveryServer"->"org.jppf.comm.recovery.Reaper"[R];
	"org.jppf.comm.recovery.ReaperEvent"->"org.jppf.comm.recovery.ServerConnection"[P];
	"org.jppf.comm.recovery.ReaperEvent"->"org.jppf.comm.recovery.ServerConnection"[R];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.comm.socket.BootstrapObjectSerializer"->"org.jppf.utils.JPPFBuffer"[P];
	"org.jppf.serialization.JPPFSerialization.Factory"->"org.jppf.serialization.JPPFSerialization"[R];
	"org.jppf.serialization.JPPFSerialization.Factory"->"org.jppf.serialization.JPPFSerialization"[R];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.utils.JPPFBuffer"[P];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.comm.socket.SocketChannelClient"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.data.transform.JPPFDataTransform"[R];
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.data.transform.JPPFDataTransform"[R];
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.data.transform.JPPFDataTransform"[P];
	"org.jppf.data.transform.JPPFDataTransformFactory"->"org.jppf.data.transform.JPPFDataTransform"[P];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.JPPFReconnectionNotification"[R];
	"org.jppf.execute.NodeTaskWrapper"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ExecutionInfo"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ExecutionInfo"->"org.jppf.execute.ExecutionInfo"[P];
	"org.jppf.execute.ExecutionInfo"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ExecutionInfo"->"org.jppf.execute.ExecutionInfo"[P];
	"org.jppf.execute.CpuTimeCollector"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ExecutorChannelStatusEvent"->"org.jppf.execute.ExecutorStatus"[P];
	"org.jppf.execute.ExecutorChannelStatusEvent"->"org.jppf.execute.ExecutorStatus"[R];
	"org.jppf.execute.ExecutorChannelStatusEvent"->"org.jppf.execute.ExecutorStatus"[R];
	"org.jppf.execute.TimeoutTimerTask"->"org.jppf.execute.NodeTaskWrapper"[P];
	"org.jppf.execute.ThreadManagerForkJoin"->"org.jppf.execute.ThreadManager.UsedClassLoader"[R];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.ThreadManager.UsedClassLoader"[R];
	"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"->"org.jppf.execute.ThreadManagerForkJoin.FJUsedClassLoader"[P];
	"org.jppf.execute.ThreadManagerForkJoin.FJUsedClassLoader"->"org.jppf.execute.ThreadManagerForkJoin.FJThreadFactory"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.InputSource"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.InputSource"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.InputSource"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.OutputDestination"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.OutputDestination"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.OutputDestination"[P];
	"org.jppf.io.FileDataLocation"->"org.jppf.io.DataLocation"[R];
	"org.jppf.utils.streams.NotifyingOutputStream"->"org.jppf.utils.streams.NotifyingStreamCallback"[P];
	"org.jppf.utils.streams.MultipleBuffersInputStream"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.io.SocketWrapperInputSource"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.io.SocketWrapperOutputDestination"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.job.TaskReturnEvent"->"org.jppf.job.JobReturnReason"[P];
	"org.jppf.job.TaskReturnEvent"->"org.jppf.job.JobReturnReason"[R];
	"org.jppf.job.TaskReturnEvent"->"org.jppf.management.JPPFManagementInfo"[R];
	"org.jppf.location.LocationEvent"->"org.jppf.location.Location"[P];
	"org.jppf.location.LocationEvent"->"org.jppf.location.Location"[R];
	"org.jppf.load.balancer.BundleDataHolder"->"org.jppf.load.balancer.BundlePerformanceSample"[P];
	"org.jppf.load.balancer.impl.NodeThreadsProfile"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.impl.NodeThreadsProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.impl.ProportionalTuneProfile"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.impl.ProportionalTuneProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.impl.ProportionalTuneProfile"->"org.jppf.load.balancer.impl.ProportionalTuneProfile"[R];
	"org.jppf.load.balancer.impl.RLProfile"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.impl.RLProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.impl.AnnealingTuneProfile"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.impl.AnnealingTuneProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.impl.AnnealingTuneProfile"->"org.jppf.load.balancer.impl.AnnealingTuneProfile"[R];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.AutoTunedBundler"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.impl.AnnealingTuneProfile"[P];
	"org.jppf.load.balancer.impl.AutotunedDelegatingBundler"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.impl.NodeSimulator"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.JPPFContext"[R];
	"org.jppf.load.balancer.impl.NodeThreadsLoadBalancer"->"org.jppf.load.balancer.JPPFContext"[P];
	"org.jppf.load.balancer.impl.ProportionalBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.ProportionalBundler"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.impl.RLBundler"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.impl.RLBundler"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.spi.AutoTunedBundlerProvider"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.spi.FixedSizeBundlerProvider"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.spi.NodeThreadsLoadBalancerProvider"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.spi.ProportionalBundlerProvider"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.spi.RLBundlerProvider"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.logging.jmx.JmxMessageNotifier"->"org.jppf.logging.jmx.JmxLogger"[R];
	"org.jppf.management.AbstractMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.MemoryInformation"[R];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.ThreadDump"[R];
	"org.jppf.management.diagnostics.Diagnostics"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.management.diagnostics.MemoryInformation"->"org.jppf.management.diagnostics.MemoryUsageInformation"[R];
	"org.jppf.management.diagnostics.MemoryInformation"->"org.jppf.management.diagnostics.MemoryUsageInformation"[R];
	"org.jppf.management.diagnostics.HeapDumpCollector.Factory"->"org.jppf.management.diagnostics.HeapDumpCollector"[R];
	"org.jppf.management.diagnostics.StackFrameInformation"->"org.jppf.management.diagnostics.LockInformation"[P];
	"org.jppf.management.diagnostics.StackFrameInformation"->"org.jppf.management.diagnostics.LockInformation"[R];
	"org.jppf.management.ExecutionPolicySelector"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.management.ExecutionPolicySelector"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.management.forwarding.NotificationListenerWrapper"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.NotificationListenerWrapper"->"org.jppf.management.NodeSelector"[R];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.MemoryInformation"[R];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.management.generated.DriverDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.ThreadDump"[R];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.DriverJobManagementMBeanStaticProxy"->"org.jppf.job.JobInformation"[R];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.load.balancer.LoadBalancingInformation"[R];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFDriverAdminMBeanStaticProxy"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.classloader.DelegationModel"[R];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.classloader.DelegationModel"[P];
	"org.jppf.management.generated.JPPFNodeAdminMBeanStaticProxy"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeForwardingMBeanStaticProxy"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.generated.JPPFNodeMaintenanceMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.management.generated.JPPFNodeProvisioningMBeanStaticProxy"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.management.generated.JPPFNodeTaskMonitorMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.MemoryInformation"[R];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.management.generated.NodeDiagnosticsMBeanStaticProxy"->"org.jppf.management.diagnostics.ThreadDump"[R];
	"org.jppf.management.JMXConnectionThread"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.classloader.DelegationModel"[R];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.classloader.DelegationModel"[P];
	"org.jppf.management.JMXNodeConnectionWrapper"->"org.jppf.management.diagnostics.DiagnosticsMBean"[R];
	"org.jppf.management.JMXServerFactory"->"org.jppf.management.JMXServer"[R];
	"org.jppf.management.JMXWrapperEvent"->"org.jppf.management.JMXConnectionWrapper"[P];
	"org.jppf.management.JMXWrapperEvent"->"org.jppf.management.JMXConnectionWrapper"[R];
	"org.jppf.management.NodeSelector.ExecutionPolicySelector"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.management.TaskExecutionNotification"->"org.jppf.management.TaskInformation"[P];
	"org.jppf.management.TaskExecutionNotification"->"org.jppf.management.TaskInformation"[R];
	"org.jppf.utils.Range"->"org.jppf.utils.Range"[P];
	"org.jppf.utils.Range"->"org.jppf.utils.Range"[P];
	"org.jppf.utils.Range"->"org.jppf.utils.Range"[P];
	"org.jppf.utils.Range"->"org.jppf.utils.Range"[R];
	"org.jppf.utils.Range"->"org.jppf.utils.Range"[P];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.nio.NioContext"[R];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.utils.SimpleObjectLock"[R];
	"org.jppf.nio.AbstractLocalChannelWrapper"->"org.jppf.utils.SimpleObjectLock"[R];
	"org.jppf.nio.SSLHandler"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.SSLNioObject"->"org.jppf.nio.SSLHandler"[P];
	"org.jppf.nio.SSLNioObject"->"org.jppf.io.DataLocation"[P];
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.PlainNioObject"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.BaseNioMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.nio.ChannelSelector"[P];
	"org.jppf.nio.ChannelSelectorThread"->"org.jppf.nio.ChannelSelector"[P];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.LocalChannelSelector"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.NioServer"[P];
	"org.jppf.nio.StateTransitionManager"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.SelectionKeyWrapper"->"org.jppf.nio.NioContext"[R];
	"org.jppf.nio.StateTransitionTask"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.node.event.TaskExecutionEvent"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.node.event.TaskExecutionEvent"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.node.event.TaskExecutionEvent"->"org.jppf.node.protocol.Task"[R];
	"org.jppf.node.event.TaskExecutionEvent"->"org.jppf.management.TaskInformation"[R];
	"org.jppf.node.idle.IdleDetector"->"org.jppf.node.idle.IdleStateListener"[P];
	"org.jppf.node.idle.IdleStateEvent"->"org.jppf.node.idle.IdleDetectionTask"[P];
	"org.jppf.node.idle.IdleStateEvent"->"org.jppf.node.idle.IdleDetectionTask"[R];
	"org.jppf.node.idle.IdleStateEvent"->"org.jppf.server.nio.nodeserver.IdleState"[R];
	"org.jppf.node.policy.AtLeast"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.AtMost"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.Contains"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.Equal"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ExecutionPolicy.AndRule"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ExecutionPolicy.NotRule"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.policy.ExecutionPolicy.NotRule"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ExecutionPolicy.OrRule"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ExecutionPolicy.XorRule"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobClientSLA"[R];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.node.policy.PolicyContext"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.node.policy.IsInIPv4Subnet"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.IsInIPv6Subnet"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.LessThan"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.MoreThan"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.OneOf"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyBuilder"->"org.jppf.node.policy.PolicyDescriptor"[P];
	"org.jppf.node.policy.RegExp"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.ScriptedPolicy"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.Preference"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.PolicyDescriptor"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.PolicyDescriptor"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.Node"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.PolicyDescriptor"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.Node"[P];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.Node"[P];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.Node"[P];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.policy.PolicyParser"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.utils.SchemaValidator"->"org.jppf.utils.JPPFErrorReporter"[P];
	"org.jppf.node.policy.PolicyRuleTest"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.location.Location"[P];
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.location.Location"[P];
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.location.Location"[R];
	"org.jppf.node.protocol.ClassPathElementImpl"->"org.jppf.location.Location"[R];
	"org.jppf.process.ProcessWrapper"->"org.jppf.process.ProcessWrapperEventListener"[P];
	"org.jppf.process.ProcessWrapper"->"org.jppf.process.ProcessWrapperEventListener"[P];
	"org.jppf.node.protocol.TaskExecutionDispatcher.NotificationTask"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.process.LauncherListener"->"org.jppf.process.LauncherListenerProtocolHandler"[P];
	"org.jppf.process.LauncherListener"->"org.jppf.process.LauncherListenerProtocolHandler"[R];
	"org.jppf.process.LauncherListener"->"org.jppf.process.LauncherListenerProtocolHandler"[P];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapper"[R];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.process.ProcessLauncher"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.process.ProcessLauncher"->"org.jppf.node.idle.IdleStateEvent"[P];
	"org.jppf.process.ProcessLauncherEvent"->"org.jppf.process.AbstractProcessLauncher"[P];
	"org.jppf.process.ProcessLauncherEvent"->"org.jppf.process.AbstractProcessLauncher"[R];
	"org.jppf.queue.QueueListenerAdapter"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.queue.QueueListenerAdapter"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.scripting.ScriptRunnerPool"->"org.jppf.scripting.ScriptRunner"[R];
	"org.jppf.scripting.ScriptRunnerImpl"->"org.jppf.scripting.JPPFScriptingException"[R];
	"org.jppf.serialization.Deserializer"->"org.jppf.serialization.ClassDescriptor"[P];
	"org.jppf.serialization.Serializer"->"org.jppf.serialization.ClassDescriptor"[P];
	"org.jppf.utils.configuration.ScriptHandler"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.utils.configuration.SubstitutionsHandler"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.utils.configuration.SubstitutionsHandler"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.utils.configuration.SubstitutionsHandler"->"org.jppf.utils.configuration.SubstitutionsHandler.PropertyProvider"[P];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.generator.MBeanStaticProxyGenerator"[R];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.generator.MBeanStaticProxyGenerator"[R];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.generator.MBeanStaticProxyGenerator"[R];
	"org.jppf.utils.generator.MBeanStaticProxyGenerator"->"org.jppf.utils.generator.MBeanStaticProxyGenerator"[R];
	"org.jppf.utils.SchemaValidator.ValidatorErrorHandler"->"org.jppf.utils.JPPFErrorReporter"[P];
	"org.jppf.utils.SerializationHelperImpl"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.utils.stats.CumulativeSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[R];
	"org.jppf.utils.stats.JPPFStatisticsEvent"->"org.jppf.utils.stats.JPPFSnapshot"[P];
	"org.jppf.utils.stats.JPPFStatisticsEvent"->"org.jppf.utils.stats.JPPFSnapshot"[R];
	"org.jppf.utils.stats.SingleValueSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[R];
	"org.jppf.utils.stats.NonCumulativeSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[R];
	"org.jppf.utils.streams.NotifyingInputStream"->"org.jppf.utils.streams.NotifyingStreamCallback"[P];
	"org.jppf.utils.TimeMarker"->"org.jppf.utils.TimeMarker"[R];
	"org.jppf.utils.TimeMarker"->"org.jppf.utils.TimeMarker"[R];
	"sample.dist.matrix.Matrix"->"org.jppf.test.scenario.s1.Matrix"[R];
	"sample.dist.matrix.Matrix"->"org.jppf.test.scenario.s1.Matrix"[P];
	"sample.dist.matrix.Matrix"->"org.jppf.test.scenario.s1.Matrix"[P];
	"sample.dist.matrix.LongTypeMatrix";
	"sample.dist.matrix.LongTypeMatrix"->"sample.dist.matrix.LongTypeMatrix"[R];
	"sample.dist.matrix.LongTypeMatrix"->"sample.dist.matrix.LongTypeMatrix"[P];
	"sample.dist.matrix.LongTypeMatrix"->"sample.dist.matrix.LongTypeMatrix"[P];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.test.scenario.s1.Matrix"[P];
	"sample.dist.matrix.MatrixRunner"->"org.jppf.test.scenario.s1.Matrix"[P];
	"sample.dist.matrix.MyCustomPolicy"->"org.jppf.utils.PropertiesCollection"[P];
	"org.jppf.node.NodeRunner"->"org.jppf.server.node.JPPFNode"[R];
	"org.jppf.node.NodeRunner"->"org.jppf.node.connection.ConnectionContext"[P];
	"org.jppf.node.NodeRunner"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.node.NodeRunner"->"org.jppf.node.Node"[R];
	"org.jppf.node.NodeRunner"->"org.jppf.node.NodeInternal"[P];
	"sample.dist.xstream.Person"->"sample.dist.xstream.PhoneNumber"[P];
	"sample.dist.xstream.Person"->"sample.dist.xstream.PhoneNumber"[R];
	"sample.dist.xstream.Person"->"sample.dist.xstream.PhoneNumber"[P];
	"sample.dist.xstream.XstreamTask"->"sample.dist.xstream.Person"[P];
	"sample.NetworkHelper"->"sample.InetAddressFilter"[P];
	"sample.prime.LargeInt";
	"sample.prime.LargeInt"->"sample.prime.LargeInt"[P];
	"sample.prime.LargeInt"->"sample.prime.LargeInt"[P];
	"sample.prime.LargeInt"->"sample.prime.LargeInt"[P];
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.client.JPPFJob"[R];
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.client.JPPFJob"[P];
	"sample.test.clientpool.ConnectionPoolRunner"->"org.jppf.client.JPPFConnectionPool"[P];
	"sample.test.deadlock.JobStreamImpl"->"sample.test.deadlock.RunOptions"[P];
	"sample.test.deadlock.JobStreamImpl"->"org.jppf.client.JPPFJob"[R];
	"sample.test.deadlock.JobStreamImpl"->"org.jppf.client.JPPFJob"[P];
	"sample.test.deadlock.MasterNodeMonitoringThread"->"org.jppf.client.JPPFClient"[P];
	"sample.test.deadlock.ProvisioningThread"->"org.jppf.client.JPPFClient"[P];
	"sample.test.job.management.JobManagementTestRunner"->"org.jppf.client.JPPFJob"[R];
	"sample.test.largedata.SubmitQueue"->"org.jppf.client.JPPFClient"[P];
	"sample.test.largedata.SubmitQueue"->"org.jppf.client.JPPFJob"[P];
	"sample.test.redirect.ConsoleOutputRedirector.RedirectPrintStream"->"sample.test.redirect.ConsoleOutputRedirector.ThreadLocalOutputStream"[P];
	"sample.test.TestTaskRunner"->"org.jppf.node.protocol.DataProvider"[P];
	"test.counters.TestCounters"->"test.counters.TestCounters.TimeAndCpu"[R];
	"test.counters.TestCounters"->"test.counters.LongCounter"[P];
	"test.counters.TestCounters.TestThread"->"test.counters.LongCounter"[P];
	"test.driver.restart.TestDriverRestart"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"test.filecopy.FileCopyAction"->"test.filecopy.FileCopyAction"[P];
	"test.filecopy.FileCopyAction"->"test.filecopy.CopyResult"[R];
	"test.filecopy.FileCopyTask"->"org.jppf.utils.Pair"[R];
	"test.generic.GenericRunner"->"org.jppf.client.JPPFJob"[P];
	"test.jmx.MyNodeListener"->"test.jmx.MyNodeListener"[R];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"test.jmx.MyNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.Node"[P];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.Node"[P];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.Node"[P];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.Node"[R];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.protocol.JPPFDistributedJob"[R];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.protocol.DataProvider"[R];
	"org.jppf.node.event.NodeLifeCycleEvent"->"org.jppf.node.event.NodeLifeCycleEventType"[R];
	"test.jmx.MyTask.MyCallable"->"test.org.jppf.server.protocol.TestJPPFTask.MyTask"[P];
	"test.job.priority.JobPriorityRunner"->"org.jppf.client.JPPFJob"[R];
	"test.job.priority.JobPriorityRunner"->"org.jppf.server.job.management.DriverJobManagementMBean"[R];
	"test.job.priority.JobPriorityRunner"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"test.job.priority.JobPriorityRunner.JobRunner"->"org.jppf.client.JPPFJob"[P];
	"test.localexecution.MyTask"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"test.node.nativelib.NativeLibRunner"->"org.jppf.client.JPPFJob"[R];
	"test.node.nativelib.NativeLibRunner"->"org.jppf.client.JPPFJob"[P];
	"test.node.nativelib.NativeLibRunner"->"org.jppf.client.JPPFJob"[P];
	"test.run.jboss.JBossTask"->"org.jppf.process.ProcessWrapperEvent"[P];
	"test.run.jboss.JBossTask"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.dotnetbridge.nodehook.DotnetBridgeHook"->"org.jppf.utils.UnmodifiableTypedProperties"[P];
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.dotnet.DotnetJobListenerWrapper"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.dotnet.DotnetTopologyListenerWrapper"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.jca.serialization.JcaSerializationHelperImpl"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.jca.cci.JPPFConnectionFactory"->"org.jppf.jca.spi.JPPFManagedConnectionFactory"[P];
	"org.jppf.jca.cci.JPPFConnectionFactory"->"test.socket.SocketPerformance.Connection"[R];
	"org.jppf.jca.cci.JPPFConnectionFactory"->"test.socket.SocketPerformance.Connection"[R];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.spi.JPPFManagedConnection"[P];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.event.JobStatusListener"[P];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.event.JobStatusListener"[P];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.JobStatus"[R];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.jca.cci.JPPFConnectionImpl"->"org.jppf.jca.spi.JPPFManagedConnection"[P];
	"org.jppf.jca.cci.JPPFInteraction"->"org.jppf.jca.cci.JPPFConnectionImpl"[P];
	"org.jppf.jca.cci.JPPFInteraction"->"test.socket.SocketPerformance.Connection"[R];
	"org.jppf.jca.spi.JPPFConfigurationParser"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.jca.spi.JPPFConfigurationParser"->"org.jppf.utils.TypedProperties"[R];
	"test.org.jppf.test.setup.JPPFHelper"->"org.jppf.jca.cci.JPPFConnection"[R];
	"test.org.jppf.test.setup.JPPFHelper"->"org.jppf.jca.cci.JPPFConnection"[P];
	"test.org.jppf.test.setup.common.BaseTestHelper"->"org.jppf.client.JPPFJob"[R];
	"test.org.jppf.test.setup.common.BaseTestHelper"->"org.jppf.client.JPPFJob"[R];
	"test.org.jppf.test.runner.ResultHolder"->"test.org.jppf.test.runner.ExceptionHolder"[P];
	"test.org.jppf.test.runner.JPPFTestRunner"->"test.org.jppf.test.runner.ResultHolder"[R];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.ResourceRequestRunner"[P];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.ResourceRequestRunner"[R];
	"org.jppf.classloader.ClassLoaderRequestHandler"->"org.jppf.classloader.ResourceRequestRunner"[R];
	"org.jppf.JPPFNodeReconnectionNotification"->"org.jppf.node.connection.ConnectionReason"[P];
	"org.jppf.JPPFNodeReconnectionNotification"->"org.jppf.node.connection.ConnectionReason"[R];
	"org.jppf.classloader.resource.ResourceCache"->"org.jppf.location.Location"[R];
	"org.jppf.classloader.ClassLoaderEvent"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.classloader.ClassLoaderEvent"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.classloader.ClassLoaderEvent"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.classloader.JPPFClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.JPPFClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.JPPFLeakPrevention";
	"org.jppf.classloader.JPPFLeakPrevention"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.classloader.JPPFLocalClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.JPPFLocalClassLoader"->"org.jppf.classloader.ClassLoaderConnection"[P];
	"org.jppf.classloader.LocalClassLoaderChannel"->"org.jppf.nio.AbstractNioContext"[P];
	"org.jppf.classloader.LocalClassLoaderConnection"->"org.jppf.classloader.LocalClassLoaderChannel"[P];
	"org.jppf.classloader.LocalResourceRequest"->"org.jppf.classloader.LocalClassLoaderChannel"[P];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.node.connection.DriverConnectionInfo"[P];
	"org.jppf.classloader.RemoteClassLoaderConnection"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.classloader.RemoteResourceRequest"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.location.Location"[R];
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.location.Location"[R];
	"org.jppf.classloader.resource.SaveResourceAction"->"org.jppf.location.Location"[R];
	"org.jppf.management.diagnostics.spi.NodeDiagnosticsMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.node.connection.ConnectionContext"->"org.jppf.node.connection.ConnectionReason"[P];
	"org.jppf.node.connection.ConnectionContext"->"org.jppf.node.connection.ConnectionReason"[R];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[R];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[P];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[R];
	"org.jppf.node.connection.JPPFDefaultConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[R];
	"org.jppf.node.connection.JPPFDriverConnectionInfo"->"org.jppf.node.connection.DriverConnectionInfo"[R];
	"org.jppf.node.connection.JPPFDriverConnectionInfo"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.node.event.DefaultLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleListener"[P];
	"org.jppf.node.event.JobClassPathHandler"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListenerAdapter"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.idle.IdleTimeDetectorFactoryImpl"->"org.jppf.node.idle.IdleTimeDetector"[R];
	"org.jppf.node.initialization.OutputRedirectHook"->"org.jppf.utils.UnmodifiableTypedProperties"[P];
	"org.jppf.node.initialization.OutputRedirectHook"->"org.jppf.utils.UnmodifiableTypedProperties"[P];
	"org.jppf.node.NodeRunner.ShutdownOrRestart"->"org.jppf.node.NodeInternal"[P];
	"org.jppf.node.provisioning.ShutdownRestartNodeProtocolHandler"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.node.provisioning.JPPFNodeProvisioning"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.provisioning.JPPFNodeProvisioning"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.provisioning.SlaveNodeManager"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.DelegatingNodeListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.utils.UnmodifiableTypedProperties"[P];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.screensaver.JPPFScreenSaver"[R];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.screensaver.JPPFScreenSaver"[R];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.node.screensaver.ScreenSaverMain"[R];
	"org.jppf.node.screensaver.ScreenSaverMain"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.node.screensaver.impl.ImageData"->"org.jppf.node.screensaver.impl.ImageData"[P];
	"org.jppf.node.screensaver.impl.ImageData"->"org.jppf.node.screensaver.impl.ImageData"[P];
	"org.jppf.node.screensaver.impl.ImageData"->"org.jppf.node.screensaver.impl.ImageData"[P];
	"org.jppf.node.screensaver.impl.ImageData"->"org.jppf.node.screensaver.impl.ImageData"[P];
	"org.jppf.node.screensaver.impl.ImageData"->"org.jppf.node.screensaver.impl.ImageData"[P];
	"org.jppf.node.screensaver.impl.JPPFScreenSaverImpl"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.screensaver.impl.NodeState"->"org.jppf.node.screensaver.JPPFScreenSaver"[P];
	"org.jppf.node.screensaver.impl.SimpleScreenSaver"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.server.node.DefaultSerializationExceptionHook"->"org.jppf.node.protocol.JPPFExceptionResult"[R];
	"org.jppf.server.node.JPPFContainer.ObjectDeserializationTask"->"org.jppf.io.DataLocation"[P];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.NodeInternal"[P];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.NodeInternal"[P];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.NodeExecutionManager"->"org.jppf.node.protocol.Task"[P];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.management.forwarding.ForwardingNotificationEventListener"[P];
	"org.jppf.management.forwarding.ForwardingNotificationDispatcher"->"org.jppf.management.forwarding.ForwardingNotificationEventListener"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.JPPFNodeForwarding"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.NotificationListenerWrapper"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.NotificationListenerWrapper"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.event.NodeConnectionEvent"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.server.event.NodeConnectionEvent"[P];
	"org.jppf.management.forwarding.ForwardingNotificationManager"->"org.jppf.management.forwarding.ForwardingNotificationEvent"[P];
	"org.jppf.management.forwarding.JPPFNodeForwarding"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.NodeSelectionHelper"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.server.event.NodeConnectionEvent"->"org.jppf.management.JPPFManagementInfo"[P];
	"org.jppf.server.event.NodeConnectionEvent"->"org.jppf.management.JPPFManagementInfo"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.JPPFDriver"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.queue.JPPFQueue"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.client.ClientNioServer"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.nodeserver.NodeNioServer"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.job.JPPFJobManager"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.job.TaskReturnManager"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.server.DriverInitializer"[R];
	"org.jppf.server.JPPFDriver"->"org.jppf.comm.recovery.RecoveryServer"[P];
	"org.jppf.server.JPPFDriver"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.server.JPPFDriver"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.JPPFDriver"[P];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.peer.PeerDiscoveryThread"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.management.JMXServer"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.management.JMXServer"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.comm.recovery.RecoveryServer"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.debug.ServerDebug"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.event.NodeConnectionEventHandler"[R];
	"org.jppf.server.DriverInitializer"->"org.jppf.server.nio.classloader.ClassCache"[R];
	"org.jppf.management.JPPFDriverAdmin"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdmin"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdmin"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.classloader.DelegationModel"[R];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.classloader.DelegationModel"[P];
	"org.jppf.management.JPPFNodeAdmin"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.management.JPPFNodeAdmin"[P];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.management.NodeStatusNotifier"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.management.JPPFNodeMaintenance"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.management.JPPFNodeTaskMonitor"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.management.JPPFNodeTaskMonitor.NotificationSender"->"org.jppf.management.TaskInformation"[P];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.server.queue.JPPFPriorityQueue"[P];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.JPPFContext"[R];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.server.nio.nodeserver.TaskQueueChecker"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.server.protocol.ServerTaskBundleClient"[R];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.io.DataLocation"[R];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.node.protocol.TaskState"[R];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.node.protocol.TaskState"[P];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.io.DataLocation"[R];
	"org.jppf.server.protocol.ServerTask"->"org.jppf.io.DataLocation"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.JPPFDriver"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.NioServerFactory"[R];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.NioContext"[R];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassNioServer"->"org.jppf.server.nio.classloader.ResourceRequest"[P];
	"org.jppf.server.peer.JPPFPeerInitializer"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.server.peer.JPPFPeerInitializer"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.server.job.ChannelJobPair"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.job.JobEventTask"->"org.jppf.job.JobNotificationEmitter"[P];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.ServerJobChangeListener"[P];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.ServerTaskBundleNode"[R];
	"org.jppf.server.protocol.ServerJob"->"org.jppf.server.protocol.ServerTaskBundleNode"[P];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerJobChangeListener"[P];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.io.DataLocation"[R];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerTaskBundleNode"[P];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerTaskBundleNode"[P];
	"org.jppf.server.protocol.AbstractServerJobBase"->"org.jppf.server.protocol.ServerTaskBundleNode"[R];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerJob"[R];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobEventType"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobEventType"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobManagerListener"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobManagerListener"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.JobNotification"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnListener"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnListener"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.job.TaskReturnEvent"[R];
	"org.jppf.server.job.JPPFJobManager"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.ServerJob"[R];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.io.DataLocation"[R];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.execute.ExecutorChannel"[P];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.execute.ExecutorChannel"[R];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.server.protocol.ServerTaskBundleNode"[P];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.job.JobReturnReason"[R];
	"org.jppf.server.protocol.ServerTaskBundleNode"->"org.jppf.job.JobReturnReason"[P];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.job.JobInformation"[R];
	"org.jppf.server.job.management.DriverJobManagement"->"org.jppf.server.job.JPPFJobManager"[R];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobNotification"[P];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobNotification"[P];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobNotification"[P];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobNotification"[P];
	"org.jppf.server.job.management.DriverJobManagement.JobEventNotifier"->"org.jppf.job.JobNotification"[P];
	"org.jppf.server.JPPFContextDriver"->"org.jppf.queue.JPPFQueue"[P];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioServerFactory"[R];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.NioContext"[R];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.acceptor.AcceptorNioServer"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.LocalClassContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.NodeNioServer"->"org.jppf.server.JPPFDriver"[P];
	"org.jppf.server.ShutdownRestartTask";
	"org.jppf.server.ShutdownRestartTask"->"org.jppf.server.JPPFDriver"[P];
	"org.jppf.server.nio.nodeserver.LocalNodeChannel"->"org.jppf.server.nio.nodeserver.LocalNodeContext"[P];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.StateTransitionManager"[P];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.server.nio.AbstractTaskBundleMessage"[R];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.LocalNodeContext"->"org.jppf.nio.NioMessage"[P];
	"org.jppf.server.node.local.LocalNodeConnection"->"org.jppf.server.nio.nodeserver.LocalNodeChannel"[P];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.local.LocalNodeConnection"[P];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.classloader.LocalClassLoaderConnection"[R];
	"org.jppf.server.node.local.JPPFLocalNode"->"org.jppf.server.node.NodeConnectionChecker"[R];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.server.protocol.ServerTaskBundleClient"->"org.jppf.io.DataLocation"[R];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.acceptor.AcceptorContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.acceptor.AcceptorServerFactory"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[P];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorNioServer"[P];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.server.nio.acceptor.AcceptorTransition"[R];
	"org.jppf.server.nio.acceptor.IdentifyingPeerState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.client.ClientClassState"[P];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.ResourceRequest"[P];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.ResourceRequest"[R];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.ResourceRequest"[R];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.server.nio.classloader.ResourceRequest"[P];
	"org.jppf.server.nio.classloader.client.ClientClassContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.server.nio.classloader.ResourceRequest"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.ClientClassServerFactory"->"org.jppf.utils.collections.CollectionMap"[R];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.SendingProviderRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.WaitingProviderResponseState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.IdleProviderState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.SendingPeerChannelIdentifierState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.SendingPeerInitiationRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.WaitingPeerInitiationResponseState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.SendingProviderInitialResponseState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassNioServer"[P];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.server.nio.classloader.client.ClientClassTransition"[R];
	"org.jppf.server.nio.classloader.client.WaitingProviderInitialRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.server.nio.classloader.ClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.NodeClassServerFactory"->"org.jppf.utils.collections.CollectionMap"[R];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[R];
	"org.jppf.server.nio.classloader.node.SendingNodeResponseState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[R];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.WaitingNodeRequestState"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[R];
	"org.jppf.server.nio.classloader.node.NodeWaitingProviderResponseState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[R];
	"org.jppf.server.nio.classloader.node.SendingInitialNodeResponseState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassNioServer"[P];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.server.nio.classloader.node.NodeClassTransition"[R];
	"org.jppf.server.nio.classloader.node.WaitingInitialNodeRequestState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[R];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[R];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.client.ClientMessage"[R];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.client.ClientMessage"[R];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.nio.client.ClientMessage"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[R];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[R];
	"org.jppf.server.nio.client.ClientContext"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.nio.client.ClientMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.ClientServerFactory"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientTransition"[R];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.server.nio.client.ClientTransition"[R];
	"org.jppf.server.nio.client.WaitingJobState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.server.nio.client.ClientTransition"[R];
	"org.jppf.server.nio.client.SendingResultsState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.server.nio.client.ClientTransition"[R];
	"org.jppf.server.nio.client.IdleState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.nio.client.CompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.server.nio.client.ClientTransition"[R];
	"org.jppf.server.nio.client.SendingHandshakeResultsState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientNioServer"[P];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.server.nio.client.ClientTransition"[R];
	"org.jppf.server.nio.client.WaitingHandshakeState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.BundleResults"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.nio.nodeserver.BundleResults"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.IdleState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler"->"org.jppf.management.JMXNodeConnectionWrapper"[P];
	"org.jppf.server.nio.nodeserver.JMXInitializationHandler.JMXInitializationTask"->"org.jppf.management.JMXNodeConnectionWrapper"[P];
	"org.jppf.server.nio.nodeserver.LocalNodeMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.NodeContextFuture"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.server.nio.nodeserver.NodeDispatchTimeoutAction"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.NodeServerFactory"->"org.jppf.utils.collections.CollectionMap"[R];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.SendingBundleState"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.BundleResults"[P];
	"org.jppf.server.nio.nodeserver.WaitingResultsState"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.server.nio.nodeserver.RemoteNodeContext"->"org.jppf.nio.StateTransitionManager"[P];
	"org.jppf.server.nio.nodeserver.RemoteNodeContext"->"org.jppf.server.nio.AbstractTaskBundleMessage"[R];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.RemoteNodeMessage"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.SendInitialBundleState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeNioServer"[P];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.AbstractNodeContext"[P];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.NodeTransition"[R];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.server.nio.nodeserver.BundleResults"[P];
	"org.jppf.server.nio.nodeserver.WaitInitialBundleState"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.node.local.JPPFLocalContainer"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.local.JPPFLocalNode"[P];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.server.node.JPPFContainer"[R];
	"org.jppf.server.node.local.LocalClassLoaderManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.server.node.local.LocalNodeIO"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.remote.JPPFRemoteContainer"->"org.jppf.server.node.remote.RemoteNodeConnection"[P];
	"org.jppf.server.node.remote.RemoteNodeConnection"->"org.jppf.node.connection.DriverConnectionInfo"[P];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.node.connection.DriverConnectionInfo"[P];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.comm.recovery.ClientConnectionEvent"[P];
	"org.jppf.server.node.remote.JPPFRemoteNode"->"org.jppf.server.node.NodeConnectionChecker"[R];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.server.node.JPPFContainer"[R];
	"org.jppf.server.node.remote.RemoteClassLoaderManager"->"org.jppf.classloader.AbstractJPPFClassLoader"[P];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.server.node.JPPFNode"[P];
	"org.jppf.server.node.remote.RemoteNodeIO"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.remote.RemoteNodeConnectionChecker"->"org.jppf.server.node.remote.JPPFRemoteNode"[P];
	"org.jppf.server.node.spi.JPPFDefaultNodeMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.server.node.spi.JPPFNodeMaintenanceMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.server.node.spi.JPPFNodeTaskMonitorProvider"->"org.jppf.node.Node"[P];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.comm.socket.SocketChannelClient"[R];
	"org.jppf.server.peer.PeerResourceProvider"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.server.peer.PeerNode"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.server.peer.PeerNode"->"org.jppf.server.protocol.ServerTaskBundleClient"[R];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.peer.PeerNodeResultSender"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.peer.RemotePeerConnection"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.AbstractServerJobBase.BundleCompletionListener"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.SendResultsStrategy.SendAllResultsStrategy"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.SendResultsStrategy.SendNodeResultsStrategy"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.SendResultsStrategyManager"->"org.jppf.server.protocol.SendResultsStrategy"[R];
	"org.jppf.server.queue.JobExpirationAction"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.queue.JobPriorityComparator"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.queue.JobScheduleAction"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.queue.RemoveBundleAction"->"org.jppf.server.queue.JPPFPriorityQueue"[P];
	"org.jppf.server.queue.RequeueBundleAction"->"org.jppf.server.queue.JPPFPriorityQueue"[P];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.server.queue.ScheduleManager"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.test.setup.Setup"->"org.jppf.test.scenario.ScenarioConfiguration"[P];
	"org.jppf.test.setup.Setup"->"org.jppf.server.job.management.DriverJobManagementMBean"[R];
	"org.jppf.test.setup.Setup"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"org.jppf.test.setup.Setup"->"org.jppf.client.JPPFClient"[R];
	"org.jppf.test.setup.Setup"->"org.jppf.client.JPPFClient"[R];
	"org.jppf.test.setup.Setup"->"org.jppf.client.JPPFClient"[R];
	"org.jppf.test.setup.Setup"->"org.jppf.client.JPPFClient"[P];
	"org.jppf.test.setup.Setup"->"org.jppf.test.setup.JMXHandler"[R];
	"org.jppf.test.scenario.Scenario"->"org.jppf.test.scenario.ScenarioConfiguration"[R];
	"org.jppf.test.scenario.Scenario.DiagnosticsGrabber"->"org.jppf.test.setup.JMXResult"[R];
	"org.jppf.test.scenario.ScenarioConfigurationImpl"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.test.setup.DiagnosticsResult"->"org.jppf.management.diagnostics.HealthSnapshot"[P];
	"org.jppf.test.setup.DiagnosticsResult"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.test.setup.DiagnosticsResult"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.test.setup.RestartableDriverProcessLauncher"->"org.jppf.test.scenario.ScenarioConfiguration"[P];
	"org.jppf.test.setup.RestartableNodeProcessLauncher"->"org.jppf.test.scenario.ScenarioConfiguration"[P];
	"org.jppf.test.scenario.jppf_130.JPPF_130_Runner.MyConnectionListener"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.test.scenario.nodesmix.NodeMixRunner.JobSubmissionTask"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.test.scenario.resubmit.ResubmitRunner.MyJobListener"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.test.scenario.s1.Matrix"->"org.jppf.test.scenario.s1.Matrix"[R];
	"org.jppf.test.scenario.s1.Matrix"->"org.jppf.test.scenario.s1.Matrix"[P];
	"org.jppf.test.scenario.s1.Matrix"->"org.jppf.test.scenario.s1.Matrix"[P];
	"org.jppf.test.scenario.s1.S1Runner"->"org.jppf.test.scenario.s1.Matrix"[P];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.test.addons.mbeans.NodeTestMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.test.addons.tasklistener.CallableTaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.server.job.management.DriverJobManagementMBean"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[P];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[P];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.management.JMXDriverConnectionWrapper"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[R];
	"test.org.jppf.test.setup.BaseSetup"->"org.jppf.client.JPPFClient"[P];
	"test.org.jppf.test.runner.TestRunListener"->"test.org.jppf.test.runner.ResultHolder"[P];
	"test.org.jppf.test.runner.TestRunListener"->"test.org.jppf.test.runner.ResultHolder"[P];
	"test.org.jppf.test.runner.TestRunListener"->"test.org.jppf.test.runner.ResultHolder"[R];
	"test.org.jppf.test.runner.TextResultRenderer"->"test.org.jppf.test.runner.ResultHolder"[P];
	"test.org.jppf.test.runner.TextResultRenderer"->"test.org.jppf.test.runner.ExceptionHolder"[P];
	"test.org.jppf.test.setup.AbstractNonStandardSetup"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"test.org.jppf.test.setup.common.CountingJobListener"->"org.jppf.client.event.JobEvent"[P];
	"test.org.jppf.test.setup.common.CountingJobListener"->"org.jppf.client.event.JobEvent"[P];
	"test.org.jppf.test.setup.common.CountingJobListener"->"org.jppf.client.event.JobEvent"[P];
	"test.org.jppf.test.setup.common.CountingJobListener"->"org.jppf.client.event.JobEvent"[P];
	"test.org.jppf.test.setup.common.ExecutingJobStatusListener"->"org.jppf.client.event.JobStatusEvent"[P];
	"test.org.jppf.test.setup.common.SimpleCallable"->"test.org.jppf.test.setup.common.TaskResult"[R];
	"test.org.jppf.test.setup.common.SimpleRunnable"->"test.org.jppf.test.setup.common.TaskResult"[P];
	"test.org.jppf.test.setup.common.SimpleRunnable"->"test.org.jppf.test.setup.common.TaskResult"[P];
	"test.org.jppf.client.concurrent.TestExecutorServiceConfiguration.MyTask"->"org.jppf.node.protocol.DataProvider"[P];
	"test.org.jppf.client.event.TestJobListener"->"test.org.jppf.test.setup.common.CountingJobListener"[P];
	"test.org.jppf.client.event.TestJPPFResultCollector"->"test.org.jppf.test.setup.common.CountingJobListener"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.management.forwarding.TestJPPFNodeForwardingMBean2"->"org.jppf.management.NodeSelector"[P];
	"test.org.jppf.node.policy.TestExecutionPolicy.TestCustomPolicy"->"org.jppf.utils.PropertiesCollection"[P];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"test.org.jppf.node.policy.TestPreferencePolicy"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.location.Location"[P];
	"test.org.jppf.server.protocol.TestLocation"->"org.jppf.location.Location"[P];
	"test.org.jppf.utils.stats.TestJPPFStatistics.TaskAndJobCountTester"->"org.jppf.management.JMXDriverConnectionWrapper"[P];
	"org.jppf.ui.actions.ActionHandler"->"org.jppf.ui.actions.UpdatableAction"[P];
	"org.jppf.ui.actions.ActionHandler"->"org.jppf.ui.actions.UpdatableAction"[R];
	"org.jppf.ui.options.OptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.OptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.OptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.OptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.options.OptionElement"->"org.jppf.ui.options.OptionElement"[R];
	"org.jppf.ui.actions.ActionHolder"->"org.jppf.ui.actions.ActionHandler"[R];
	"org.jppf.ui.options.OptionContainer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.OptionContainer"->"org.jppf.ui.options.OptionElement"[P];
	"org.jppf.ui.options.OptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[R];
	"org.jppf.ui.options.OptionProperties"->"org.jppf.ui.options.event.ValueChangeListener"[R];
	"org.jppf.ui.options.event.ValueChangeListener"->"org.jppf.ui.options.event.ValueChangeEvent"[P];
	"org.jppf.ui.monitoring.charts.ChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.ChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.ChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.ChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.charts.ChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[R];
	"org.jppf.ui.monitoring.charts.ChartHandler"->"org.jppf.ui.monitoring.charts.config.ChartConfiguration"[P];
	"org.jppf.ui.monitoring.event.StatsHandlerListener"->"org.jppf.ui.monitoring.event.StatsHandlerEvent"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.utils.stats.JPPFStatistics"[R];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.load.balancer.LoadBalancingInformation"[R];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFDriverAdminMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.client.event.ClientConnectionStatusHandler"->"org.jppf.client.JPPFClientConnectionStatus"[R];
	"org.jppf.client.event.ClientConnectionStatusHandler"->"org.jppf.client.JPPFClientConnectionStatus"[P];
	"org.jppf.client.event.ClientConnectionStatusHandler"->"org.jppf.client.event.ClientConnectionStatusListener"[P];
	"org.jppf.client.event.ClientConnectionStatusHandler"->"org.jppf.client.event.ClientConnectionStatusListener"[P];
	"org.jppf.ui.monitoring.event.ShowIPListener"->"org.jppf.ui.monitoring.event.ShowIPEvent"[P];
	"org.jppf.client.JPPFClientConnection"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.client.JPPFClientConnection"->"org.jppf.client.JPPFConnectionPool"[R];
	"org.jppf.management.diagnostics.DiagnosticsMBean"->"org.jppf.management.diagnostics.MemoryInformation"[R];
	"org.jppf.management.diagnostics.DiagnosticsMBean"->"org.jppf.management.diagnostics.ThreadDump"[R];
	"org.jppf.management.diagnostics.DiagnosticsMBean"->"org.jppf.management.diagnostics.HealthSnapshot"[R];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.forwarding.JPPFNodeForwardingMBean"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.client.monitoring.topology.TopologyListener"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListener"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListener"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListener"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListener"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.client.monitoring.topology.TopologyListener"->"org.jppf.client.monitoring.topology.TopologyEvent"[P];
	"org.jppf.server.job.management.DriverJobManagementMBean"->"org.jppf.job.JobInformation"[R];
	"org.jppf.client.event.ClientConnectionStatusListener"->"org.jppf.client.event.ClientConnectionStatusEvent"[P];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBean"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.node.provisioning.JPPFNodeProvisioningMBean"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.management.JPPFAdminMBean"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.node.protocol.Task"->"org.jppf.node.protocol.DataProvider"[R];
	"org.jppf.node.protocol.Task"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.node.protocol.Task"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.Task"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.node.protocol.Task"->"org.jppf.utils.JPPFCallable"[P];
	"org.jppf.comm.socket.SocketWrapper"->"org.jppf.utils.JPPFBuffer"[P];
	"org.jppf.comm.socket.SocketWrapper"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.comm.socket.SocketWrapper"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.comm.socket.SocketWrapper"->"org.jppf.serialization.ObjectSerializer"[P];
	"org.jppf.client.ClientConnectionHandler"->"org.jppf.comm.socket.SocketWrapper"[R];
	"org.jppf.comm.socket.SocketInitializer"->"org.jppf.comm.socket.SocketWrapper"[P];
	"org.jppf.queue.QueueListener"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.queue.QueueListener"->"org.jppf.queue.QueueEvent"[P];
	"org.jppf.client.JobManager"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.JobManager"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.JobManager"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.JobManager"->"org.jppf.client.event.ClientConnectionStatusListener"[R];
	"org.jppf.client.event.ClientQueueListener"->"org.jppf.client.event.ClientQueueEvent"[P];
	"org.jppf.client.event.ClientQueueListener"->"org.jppf.client.event.ClientQueueEvent"[P];
	"org.jppf.client.JPPFMulticastReceiverThread.ConnectionHandler"->"org.jppf.comm.discovery.JPPFConnectionInformation"[P];
	"org.jppf.client.event.ClientListener"->"org.jppf.client.event.ClientEvent"[P];
	"org.jppf.client.event.ClientListener"->"org.jppf.client.event.ClientEvent"[P];
	"org.jppf.node.protocol.TaskBundle"->"org.jppf.utils.TraversalList"[R];
	"org.jppf.node.protocol.TaskBundle"->"org.jppf.utils.TraversalList"[P];
	"org.jppf.node.protocol.TaskBundle"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.node.protocol.TaskBundle"->"org.jppf.node.protocol.JobSLA"[P];
	"org.jppf.node.protocol.TaskBundle"->"org.jppf.node.protocol.JobMetadata"[P];
	"org.jppf.client.event.JobListener"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.event.JobListener"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.event.JobListener"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.event.JobListener"->"org.jppf.client.event.JobEvent"[P];
	"org.jppf.client.persistence.JobPersistence"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.client.persistence.JobPersistence"->"org.jppf.client.JPPFJob"[R];
	"org.jppf.client.persistence.JobPersistence"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.node.protocol.JPPFDistributedJob"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.node.protocol.JPPFDistributedJob"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.node.protocol.JobSLA"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.JobSLA"->"org.jppf.node.protocol.ClassPath"[P];
	"org.jppf.node.protocol.JobSLA"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.JobSLA"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.load.balancer.Bundler"[P];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.management.JPPFManagementInfo"[R];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.execute.ExecutorStatus"[R];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.execute.ExecutorChannelStatusListener"[P];
	"org.jppf.execute.ExecutorChannel"->"org.jppf.execute.ExecutorChannelStatusListener"[P];
	"org.jppf.node.protocol.JobCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[R];
	"org.jppf.node.protocol.JobCommonSLA"->"org.jppf.node.policy.ExecutionPolicy"[P];
	"org.jppf.node.protocol.JobCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.JobCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.node.protocol.JobCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.node.protocol.JobCommonSLA"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.load.balancer.Bundler"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.Bundler"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.execute.ExecutorChannelStatusListener"->"org.jppf.execute.ExecutorChannelStatusEvent"[P];
	"org.jppf.execute.ExecutionManager"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.execute.ExecutionManager"->"org.jppf.execute.ThreadManager"[R];
	"org.jppf.execute.ExecutionManager"->"org.jppf.node.protocol.TaskExecutionDispatcher"[R];
	"org.jppf.execute.ExecutionManager"->"org.jppf.node.protocol.TaskBundle"[R];
	"org.jppf.execute.ExecutionManager"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.node.protocol.JobSLA"[R];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.node.protocol.JobClientSLA"[R];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.client.persistence.JobPersistence"[R];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.client.persistence.JobPersistence"[P];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.node.protocol.DataProvider"[R];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.client.event.JobListener"[P];
	"org.jppf.client.concurrent.JobConfiguration"->"org.jppf.client.event.JobListener"[P];
	"org.jppf.client.concurrent.ExecutorServiceConfiguration"->"org.jppf.client.concurrent.JobConfiguration"[R];
	"org.jppf.client.concurrent.ExecutorServiceConfiguration"->"org.jppf.client.concurrent.TaskConfiguration"[R];
	"org.jppf.client.concurrent.TaskConfiguration"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[R];
	"org.jppf.client.concurrent.TaskConfiguration"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[P];
	"org.jppf.client.concurrent.TaskConfiguration"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[R];
	"org.jppf.client.concurrent.TaskConfiguration"->"org.jppf.client.taskwrapper.JPPFTaskCallback"[P];
	"org.jppf.client.concurrent.TaskConfiguration"->"org.jppf.scheduling.JPPFSchedule"[R];
	"org.jppf.client.concurrent.TaskConfiguration"->"org.jppf.scheduling.JPPFSchedule"[P];
	"org.jppf.client.event.JobStatusListener"->"org.jppf.client.event.JobStatusEvent"[P];
	"org.jppf.client.JobStatusHandler"->"org.jppf.client.JobStatus"[R];
	"org.jppf.client.JobStatusHandler"->"org.jppf.client.JobStatus"[P];
	"org.jppf.serialization.ObjectSerializer"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.serialization.ObjectSerializer"->"org.jppf.utils.JPPFBuffer"[R];
	"org.jppf.serialization.ObjectSerializer"->"org.jppf.utils.JPPFBuffer"[P];
	"org.jppf.client.taskwrapper.TaskObjectWrapper"->"org.jppf.client.taskwrapper.TaskObjectWrapper.MethodType"[R];
	"org.jppf.client.taskwrapper.DataProviderHolder"->"org.jppf.node.protocol.DataProvider"[P];
	"org.jppf.comm.recovery.ClientConnectionListener"->"org.jppf.comm.recovery.ClientConnectionEvent"[P];
	"org.jppf.comm.recovery.ReaperListener"->"org.jppf.comm.recovery.ReaperEvent"[P];
	"org.jppf.execute.ThreadManager"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ThreadManager"->"org.jppf.execute.ExecutionInfo"[R];
	"org.jppf.execute.ThreadManager"->"org.jppf.execute.ThreadManager.UsedClassLoader"[R];
	"org.jppf.io.DataLocation"->"org.jppf.io.InputSource"[P];
	"org.jppf.io.DataLocation"->"org.jppf.io.OutputDestination"[P];
	"org.jppf.io.DataLocation"->"org.jppf.io.DataLocation"[R];
	"org.jppf.job.JobManagerListener"->"org.jppf.job.JobNotification"[P];
	"org.jppf.job.JobManagerListener"->"org.jppf.job.JobNotification"[P];
	"org.jppf.job.JobManagerListener"->"org.jppf.job.JobNotification"[P];
	"org.jppf.job.JobManagerListener"->"org.jppf.job.JobNotification"[P];
	"org.jppf.job.JobManagerListener"->"org.jppf.job.JobNotification"[P];
	"org.jppf.job.JobNotificationEmitter"->"org.jppf.job.JobNotification"[P];
	"org.jppf.job.TaskReturnListener"->"org.jppf.job.TaskReturnEvent"[P];
	"org.jppf.job.TaskReturnManager"->"org.jppf.job.TaskReturnListener"[P];
	"org.jppf.job.TaskReturnManager"->"org.jppf.job.TaskReturnListener"[P];
	"org.jppf.location.LocationEventListener"->"org.jppf.location.LocationEvent"[P];
	"org.jppf.location.Location"->"org.jppf.location.Location"[R];
	"org.jppf.location.Location"->"org.jppf.location.Location"[P];
	"org.jppf.location.Location"->"org.jppf.location.LocationEventListener"[P];
	"org.jppf.location.Location"->"org.jppf.location.LocationEventListener"[P];
	"org.jppf.load.balancer.NodeAwareness"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.load.balancer.NodeAwareness"->"org.jppf.management.JPPFSystemInformation"[P];
	"org.jppf.load.balancer.ContextAwareness"->"org.jppf.load.balancer.JPPFContext"[R];
	"org.jppf.load.balancer.ContextAwareness"->"org.jppf.load.balancer.JPPFContext"[P];
	"org.jppf.load.balancer.LoadBalancingProfile"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.JobAwareness";
	"org.jppf.load.balancer.JobAwareness"->"org.jppf.node.protocol.JobMetadata"[R];
	"org.jppf.load.balancer.JobAwareness"->"org.jppf.node.protocol.JobMetadata"[P];
	"org.jppf.load.balancer.spi.JPPFBundlerProvider"->"org.jppf.load.balancer.Bundler"[R];
	"org.jppf.load.balancer.spi.JPPFBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[P];
	"org.jppf.load.balancer.spi.JPPFBundlerProvider"->"org.jppf.load.balancer.LoadBalancingProfile"[R];
	"org.jppf.load.balancer.spi.JPPFBundlerProvider"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.management.diagnostics.ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.diagnostics.ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadInformation"[P];
	"org.jppf.management.diagnostics.ThreadDumpWriter"->"org.jppf.management.diagnostics.ThreadDump"[P];
	"org.jppf.management.forwarding.NodeSelectionProvider"->"org.jppf.management.NodeSelector"[P];
	"org.jppf.management.JPPFNodeAdminMBean"->"org.jppf.management.JPPFNodeState"[R];
	"org.jppf.management.JPPFNodeAdminMBean"->"org.jppf.classloader.DelegationModel"[R];
	"org.jppf.management.JPPFNodeAdminMBean"->"org.jppf.classloader.DelegationModel"[P];
	"org.jppf.management.JMXWrapperListener";
	"org.jppf.management.JMXWrapperListener"->"org.jppf.management.JMXWrapperEvent"[P];
	"org.jppf.management.JMXWrapperListener"->"org.jppf.management.JMXWrapperEvent"[P];
	"org.jppf.utils.PropertiesCollection"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.utils.PropertiesCollection"->"org.jppf.utils.TypedProperties"[R];
	"org.jppf.nio.ChannelWrapper"->"org.jppf.nio.NioContext"[R];
	"org.jppf.nio.ChannelWrapper"->"org.jppf.nio.ChannelSelector"[R];
	"org.jppf.nio.ChannelWrapper"->"org.jppf.nio.ChannelSelector"[P];
	"org.jppf.nio.ChannelSelector"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.nio.NioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.NioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.NioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.NioContext"->"org.jppf.nio.ChannelWrapper"[R];
	"org.jppf.nio.NioContext"->"org.jppf.nio.ChannelWrapper"[P];
	"org.jppf.nio.NioContext"->"org.jppf.nio.SSLHandler"[R];
	"org.jppf.nio.NioContext"->"org.jppf.nio.SSLHandler"[P];
	"org.jppf.nio.NioObject"->"org.jppf.io.DataLocation"[R];
	"org.jppf.node.event.TaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.node.event.TaskExecutionListener"->"org.jppf.node.event.TaskExecutionEvent"[P];
	"org.jppf.node.idle.IdleTimeDetectorFactory"->"org.jppf.node.idle.IdleTimeDetector"[R];
	"org.jppf.node.idle.IdleStateListener"->"org.jppf.node.idle.IdleStateEvent"[P];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPathElement"[P];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.location.Location"[P];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.location.Location"[P];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPathElement"[P];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPath"[R];
	"org.jppf.node.protocol.ClassPath"->"org.jppf.node.protocol.ClassPathElement"[R];
	"org.jppf.node.protocol.ClassPathElement"->"org.jppf.location.Location"[R];
	"org.jppf.node.protocol.ClassPathElement"->"org.jppf.location.Location"[R];
	"org.jppf.process.ProcessWrapperEventListener"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.process.ProcessWrapperEventListener"->"org.jppf.process.ProcessWrapperEvent"[P];
	"org.jppf.process.ProcessLauncherListener"->"org.jppf.process.ProcessLauncherEvent"[P];
	"org.jppf.process.ProcessLauncherListener"->"org.jppf.process.ProcessLauncherEvent"[P];
	"org.jppf.serialization.SerializationHelper"->"org.jppf.serialization.ObjectSerializer"[R];
	"org.jppf.utils.stats.JPPFSnapshot"->"org.jppf.utils.stats.JPPFSnapshot"[R];
	"org.jppf.utils.stats.JPPFStatisticsListener"->"org.jppf.utils.stats.JPPFStatisticsEvent"[P];
	"org.jppf.utils.stats.JPPFStatisticsListener"->"org.jppf.utils.stats.JPPFStatisticsEvent"[P];
	"org.jppf.utils.stats.JPPFStatisticsListener"->"org.jppf.utils.stats.JPPFStatisticsEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.event.NodeLifeCycleListener"->"org.jppf.node.event.NodeLifeCycleEvent"[P];
	"org.jppf.node.initialization.InitializationHook"->"org.jppf.utils.UnmodifiableTypedProperties"[P];
	"org.jppf.jca.cci.JPPFConnection"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.jca.cci.JPPFConnection"->"org.jppf.client.JPPFJob"[P];
	"org.jppf.jca.cci.JPPFConnection"->"org.jppf.client.event.JobStatusListener"[P];
	"org.jppf.jca.cci.JPPFConnection"->"org.jppf.client.event.JobStatusListener"[P];
	"org.jppf.jca.cci.JPPFConnection"->"org.jppf.client.JobStatus"[R];
	"org.jppf.jca.util.JPPFAccessor"->"org.jppf.client.AbstractGenericClient"[R];
	"org.jppf.jca.util.JPPFAccessor"->"org.jppf.client.AbstractGenericClient"[P];
	"org.jppf.classloader.ClassLoaderConnection"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.classloader.ResourceRequestRunner"->"org.jppf.classloader.JPPFResourceWrapper"[P];
	"org.jppf.classloader.ResourceRequestRunner"->"org.jppf.classloader.JPPFResourceWrapper"[R];
	"org.jppf.classloader.ClassLoaderListener"->"org.jppf.classloader.ClassLoaderEvent"[P];
	"org.jppf.classloader.ClassLoaderListener"->"org.jppf.classloader.ClassLoaderEvent"[P];
	"org.jppf.management.spi.JPPFNodeMBeanProvider"->"org.jppf.node.Node"[P];
	"org.jppf.node.Node"->"org.jppf.management.JPPFSystemInformation"[R];
	"org.jppf.node.Node"->"org.jppf.classloader.AbstractJPPFClassLoader"[R];
	"org.jppf.node.NodeInternal"->"org.jppf.node.NodeConnection"[R];
	"org.jppf.node.NodeInternal"->"org.jppf.node.event.LifeCycleEventHandler"[R];
	"org.jppf.node.NodeInternal"->"org.jppf.execute.ExecutionManager"[R];
	"org.jppf.node.NodeInternal"->"org.jppf.management.JMXServer"[R];
	"org.jppf.node.connection.DriverConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[R];
	"org.jppf.node.connection.DriverConnectionStrategy"->"org.jppf.node.connection.DriverConnectionInfo"[P];
	"org.jppf.node.event.NodeLifeCycleErrorHandler"->"org.jppf.node.event.NodeLifeCycleListener"[P];
	"org.jppf.node.idle.X11IdleTimeDetector.Xss"->"org.jppf.node.idle.X11IdleTimeDetector.XScreenSaverInfo"[R];
	"org.jppf.node.idle.X11IdleTimeDetector.Xss"->"org.jppf.node.idle.X11IdleTimeDetector.XScreenSaverInfo"[P];
	"org.jppf.node.screensaver.NodeIntegration"->"org.jppf.node.screensaver.JPPFScreenSaver"[P];
	"org.jppf.node.screensaver.JPPFScreenSaver"->"org.jppf.utils.TypedProperties"[P];
	"org.jppf.server.node.NodeIO"->"org.jppf.utils.Pair"[R];
	"org.jppf.server.node.NodeIO"->"org.jppf.node.protocol.TaskBundle"[P];
	"org.jppf.server.node.SerializationExceptionHook"->"org.jppf.node.protocol.JPPFExceptionResult"[R];
	"org.jppf.management.forwarding.ForwardingNotificationEventListener"->"org.jppf.management.forwarding.ForwardingNotificationEvent"[P];
	"org.jppf.server.event.NodeConnectionListener"->"org.jppf.server.event.NodeConnectionEvent"[P];
	"org.jppf.server.event.NodeConnectionListener"->"org.jppf.server.event.NodeConnectionEvent"[P];
	"org.jppf.server.job.JobManager"->"org.jppf.job.JobManagerListener"[P];
	"org.jppf.server.job.JobManager"->"org.jppf.job.JobManagerListener"[P];
	"org.jppf.server.job.JobManager"->"org.jppf.server.protocol.ServerJob"[R];
	"org.jppf.server.protocol.ServerJobChangeListener"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.protocol.ServerJobChangeListener"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.protocol.ServerJobChangeListener"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.protocol.ServerJobChangeListener"->"org.jppf.server.protocol.AbstractServerJob"[P];
	"org.jppf.server.protocol.SendResultsStrategy"->"org.jppf.server.protocol.ServerTaskBundleClient"[P];
	"org.jppf.server.protocol.TaskCompletionListener";
	"org.jppf.server.protocol.TaskCompletionListener"->"org.jppf.server.protocol.ServerJob"[P];
	"org.jppf.test.scenario.ScenarioRunner"->"org.jppf.test.setup.Setup"[R];
	"org.jppf.test.scenario.ScenarioRunner"->"org.jppf.test.setup.Setup"[P];
	"org.jppf.test.scenario.ScenarioRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[R];
	"org.jppf.test.scenario.ScenarioRunner"->"org.jppf.test.scenario.ScenarioConfiguration"[P];
	"org.jppf.test.scenario.ScenarioConfiguration"->"org.jppf.utils.TypedProperties"[R];
}